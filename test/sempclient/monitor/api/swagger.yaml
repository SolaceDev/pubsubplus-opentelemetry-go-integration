openapi: 3.0.1
info:
  title: SEMP (Solace Element Management Protocol)
  description: "SEMP (starting in `v2`, see note 1) is a RESTful API for configuring,\
    \ monitoring, and administering a Solace PubSub+ broker.\n\nSEMP uses URIs to\
    \ address manageable **resources** of the Solace PubSub+ broker. Resources are\
    \ individual **objects**, **collections** of objects, or (exclusively in the action\
    \ API) **actions**. This document applies to the following API:\n\n\nAPI|Base\
    \ Path|Purpose|Comments\n:---|:---|:---|:---\nMonitoring|/SEMP/v2/monitor|Querying\
    \ operational parameters|See note 2\n\n\n\nThe following APIs are also available:\n\
    \n\nAPI|Base Path|Purpose|Comments\n:---|:---|:---|:---\nAction|/SEMP/v2/action|Performing\
    \ actions|See note 2\nConfiguration|/SEMP/v2/config|Reading and writing config\
    \ state|See note 2\n\n\n\nResources are always nouns, with individual objects\
    \ being singular and collections being plural.\n\nObjects within a collection\
    \ are identified by an `obj-id`, which follows the collection name with the form\
    \ `collection-name/obj-id`.\n\nActions within an object are identified by an `action-id`,\
    \ which follows the object name with the form `obj-id/action-id`.\n\nSome examples:\n\
    \n```\n/SEMP/v2/config/msgVpns                        ; MsgVpn collection\n/SEMP/v2/config/msgVpns/a\
    \                      ; MsgVpn object named \"a\"\n/SEMP/v2/config/msgVpns/a/queues\
    \               ; Queue collection in MsgVpn \"a\"\n/SEMP/v2/config/msgVpns/a/queues/b\
    \             ; Queue object named \"b\" in MsgVpn \"a\"\n/SEMP/v2/action/msgVpns/a/queues/b/startReplay\
    \ ; Action that starts a replay on Queue \"b\" in MsgVpn \"a\"\n/SEMP/v2/monitor/msgVpns/a/clients\
    \             ; Client collection in MsgVpn \"a\"\n/SEMP/v2/monitor/msgVpns/a/clients/c\
    \           ; Client object named \"c\" in MsgVpn \"a\"\n```\n\n## Collection\
    \ Resources\n\nCollections are unordered lists of objects (unless described as\
    \ otherwise), and are described by JSON arrays. Each item in the array represents\
    \ an object in the same manner as the individual object would normally be represented.\
    \ In the configuration API, the creation of a new object is done through its collection\
    \ resource.\n\n## Object and Action Resources\n\nObjects are composed of attributes,\
    \ actions, collections, and other objects. They are described by JSON objects\
    \ as name/value pairs. The collections and actions of an object are not contained\
    \ directly in the object's JSON content; rather the content includes an attribute\
    \ containing a URI which points to the collections and actions. These contained\
    \ resources must be managed through this URI. At a minimum, every object has one\
    \ or more identifying attributes, and its own `uri` attribute which contains the\
    \ URI pointing to itself.\n\nActions are also composed of attributes, and are\
    \ described by JSON objects as name/value pairs. Unlike objects, however, they\
    \ are not members of a collection and cannot be retrieved, only performed. Actions\
    \ only exist in the action API.\n\nAttributes in an object or action may have\
    \ any combination of the following properties:\n\n\nProperty|Meaning|Comments\n\
    :---|:---|:---\nIdentifying|Attribute is involved in unique identification of\
    \ the object, and appears in its URI|\nConst|Attribute value can only be chosen\
    \ during object creation|\nRequired|Attribute must be provided in the request|\n\
    Read-Only|Attribute can only be read, not written.|See note 3\nWrite-Only|Attribute\
    \ can only be written, not read, unless the attribute is also opaque|See the documentation\
    \ for the opaque property\nRequires-Disable|Attribute cannot be changed while\
    \ the object (or the relevant part of the object) is administratively enabled|\n\
    Auto-Disable|Modifying this attribute while the object (or the relevant part of\
    \ the object) is administratively enabled may be service impacting as one or more\
    \ attributes will be temporarily disabled to apply the change|\nDeprecated|Attribute\
    \ is deprecated, and will disappear in the next SEMP version|\nOpaque|Attribute\
    \ can be set or retrieved in opaque form when the `opaquePassword` query parameter\
    \ is present|See the `opaquePassword` query parameter documentation\n\n\n\nIn\
    \ some requests, certain attributes may only be provided in certain combinations\
    \ with other attributes:\n\n\nRelationship|Meaning\n:---|:---\nRequires|Attribute\
    \ may only be changed by a request if a particular attribute or combination of\
    \ attributes is also provided in the request\nConflicts|Attribute may only be\
    \ provided in a request if a particular attribute or combination of attributes\
    \ is not also provided in the request\n\n\n\nIn the monitoring API, any non-identifying\
    \ attribute may not be returned in a GET.\n\n## HTTP Methods\n\nThe following\
    \ HTTP methods manipulate resources in accordance with these general principles.\
    \ Note that some methods are only used in certain APIs:\n\n\nMethod|Resource|Meaning|Request\
    \ Body|Response Body|Notes\n:---|:---|:---|:---|:---|:---\nPOST|Collection|Create\
    \ object|Initial attribute values|Object attributes and metadata|Absent attributes\
    \ are set to default. If object already exists, a 400 error is returned\nPUT|Object|Update\
    \ object|New attribute values|Object attributes and metadata|If does not exist,\
    \ the object is first created. Absent attributes are set to default, with certain\
    \ exceptions (see note 4)\nPUT|Action|Performs action|Action arguments|Action\
    \ metadata|\nPATCH|Object|Update object|New attribute values|Object attributes\
    \ and metadata|Absent attributes are left unchanged. If the object does not exist,\
    \ a 404 error is returned\nDELETE|Object|Delete object|Empty|Object metadata|If\
    \ the object does not exist, a 404 is returned\nGET|Object|Get object|Empty|Object\
    \ attributes and metadata|If the object does not exist, a 404 is returned\nGET|Collection|Get\
    \ collection|Empty|Object attributes and collection metadata|If the collection\
    \ is empty, then an empty collection is returned with a 200 code\n\n\n\n## Common\
    \ Query Parameters\n\nThe following are some common query parameters that are\
    \ supported by many method/URI combinations. Individual URIs may document additional\
    \ parameters. Note that multiple query parameters can be used together in a single\
    \ URI, separated by the ampersand character. For example:\n\n```\n; Request for\
    \ the MsgVpns collection using two hypothetical query parameters\n; \"q1\" and\
    \ \"q2\" with values \"val1\" and \"val2\" respectively\n/SEMP/v2/monitor/msgVpns?q1=val1&q2=val2\n\
    ```\n\n### select\n\nInclude in the response only selected attributes of the object,\
    \ or exclude from the response selected attributes of the object. Use this query\
    \ parameter to limit the size of the returned data for each returned object, return\
    \ only those fields that are desired, or exclude fields that are not desired.\n\
    \nThe value of `select` is a comma-separated list of attribute names. If the list\
    \ contains attribute names that are not prefaced by `-`, only those attributes\
    \ are included in the response. If the list contains attribute names that are\
    \ prefaced by `-`, those attributes are excluded from the response. If the list\
    \ contains both types, then the difference of the first set of attributes and\
    \ the second set of attributes is returned. If the list is empty (i.e. `select=`),\
    \ it is treated the same as if no `select` was provided: all attribute are returned.\n\
    \nAll attributes that are prefaced by `-` must follow all attributes that are\
    \ not prefaced by `-`. In addition, each attribute name in the list must match\
    \ at least one attribute in the object.\n\nNames may include the `*` wildcard\
    \ (zero or more characters). Nested attribute names are supported using periods\
    \ (e.g. `parentName.childName`).\n\nSome examples:\n\n```\n; List of all MsgVpn\
    \ names\n/SEMP/v2/monitor/msgVpns?select=msgVpnName\n; List of all MsgVpn and\
    \ their attributes except for their names\n/SEMP/v2/monitor/msgVpns?select=-msgVpnName\n\
    ; Authentication attributes of MsgVpn \"finance\"\n/SEMP/v2/monitor/msgVpns/finance?select=authentication%2A\n\
    ; All attributes of MsgVpn \"finance\" except for authentication attributes\n\
    /SEMP/v2/monitor/msgVpns/finance?select=-authentication%2A\n; Access related attributes\
    \ of Queue \"orderQ\" of MsgVpn \"finance\"\n/SEMP/v2/monitor/msgVpns/finance/queues/orderQ?select=owner,permission\n\
    ```\n\n### where\n\nInclude in the response only objects where certain conditions\
    \ are true. Use this query parameter to limit which objects are returned to those\
    \ whose attribute values meet the given conditions.\n\nThe value of `where` is\
    \ a comma-separated list of expressions. All expressions must be true for the\
    \ object to be included in the response. Each expression takes the form:\n\n```\n\
    expression  = attribute-name OP value\nOP          = '==' | '!=' | '<' | '>' |\
    \ '<=' | '>='\n```\n\n`value` may be a number, string, `true`, or `false`, as\
    \ appropriate for the type of `attribute-name`. Greater-than and less-than comparisons\
    \ only work for numbers. A `*` in a string `value` is interpreted as a wildcard\
    \ (zero or more characters). Some examples:\n\n```\n; Only enabled MsgVpns\n/SEMP/v2/monitor/msgVpns?where=enabled%3D%3Dtrue\n\
    ; Only MsgVpns using basic non-LDAP authentication\n/SEMP/v2/monitor/msgVpns?where=authenticationBasicEnabled%3D%3Dtrue,authenticationBasicType%21%3Dldap\n\
    ; Only MsgVpns that allow more than 100 client connections\n/SEMP/v2/monitor/msgVpns?where=maxConnectionCount%3E100\n\
    ; Only MsgVpns with msgVpnName starting with \"B\":\n/SEMP/v2/monitor/msgVpns?where=msgVpnName%3D%3DB%2A\n\
    ```\n\n### count\n\nLimit the count of objects in the response. This can be useful\
    \ to limit the size of the response for large collections. The minimum value for\
    \ `count` is `1` and the default is `10`. There is also a per-collection maximum\
    \ value to limit request handling time.\n\n`count` does not guarantee that a minimum\
    \ number of objects will be returned. A page may contain fewer than `count` objects\
    \ or even be empty. Additional objects may nonetheless be available for retrieval\
    \ on subsequent pages. See the `cursor` query parameter documentation for more\
    \ information on paging.\n\nFor example:\n```\n; Up to 25 MsgVpns\n/SEMP/v2/monitor/msgVpns?count=25\n\
    ```\n\n### cursor\n\nThe cursor, or position, for the next page of objects. Cursors\
    \ are opaque data that should not be created or interpreted by SEMP clients, and\
    \ should only be used as described below.\n\nWhen a request is made for a collection\
    \ and there may be additional objects available for retrieval that are not included\
    \ in the initial response, the response will include a `cursorQuery` field containing\
    \ a cursor. The value of this field can be specified in the `cursor` query parameter\
    \ of a subsequent request to retrieve the next page of objects.\n\nApplications\
    \ must continue to use the `cursorQuery` if one is provided in order to retrieve\
    \ the full set of objects associated with the request, even if a page contains\
    \ fewer than the requested number of objects (see the `count` query parameter\
    \ documentation) or is empty.\n\n### opaquePassword\n\nAttributes with the opaque\
    \ property are also write-only and so cannot normally be retrieved in a GET. However,\
    \ when a password is provided in the `opaquePassword` query parameter, attributes\
    \ with the opaque property are retrieved in a GET in opaque form, encrypted with\
    \ this password. The query parameter can also be used on a POST, PATCH, or PUT\
    \ to set opaque attributes using opaque attribute values retrieved in a GET, so\
    \ long as:\n\n1. the same password that was used to retrieve the opaque attribute\
    \ values is provided; and\n\n2. the broker to which the request is being sent\
    \ has the same major and minor SEMP version as the broker that produced the opaque\
    \ attribute values.\n\nThe password provided in the query parameter must be a\
    \ minimum of 8 characters and a maximum of 128 characters.\n\nThe query parameter\
    \ can only be used in the configuration API, and only over HTTPS.\n\n## Authentication\n\
    \nWhen a client makes its first SEMPv2 request, it must supply a username and\
    \ password using HTTP Basic authentication, or an OAuth token or tokens using\
    \ HTTP Bearer authentication.\n\nWhen HTTP Basic authentication is used, the broker\
    \ returns a cookie containing a session key. The client can omit the username\
    \ and password from subsequent requests, because the broker can use the session\
    \ cookie for authentication instead. When the session expires or is deleted, the\
    \ client must provide the username and password again, and the broker creates\
    \ a new session.\n\nThere are a limited number of session slots available on the\
    \ broker. The broker returns 529 No SEMP Session Available if it is not able to\
    \ allocate a session.\n\nIf certain attributes—such as a user's password—are changed,\
    \ the broker automatically deletes the affected sessions. These attributes are\
    \ documented below. However, changes in external user configuration data stored\
    \ on a RADIUS or LDAP server do not trigger the broker to delete the associated\
    \ session(s), therefore you must do this manually, if required.\n\nA client can\
    \ retrieve its current session information using the /about/user endpoint and\
    \ delete its own session using the /about/user/logout endpoint. A client with\
    \ appropriate permissions can also manage all sessions using the /sessions endpoint.\n\
    \nSessions are not created when authenticating with an OAuth token or tokens using\
    \ HTTP Bearer authentication. If a session cookie is provided, it is ignored.\n\
    \n## Help\n\nVisit [our website](https://solace.com) to learn more about Solace.\n\
    \nYou can also download the SEMP API specifications by clicking [here](https://solace.com/downloads/).\n\
    \nIf you need additional support, please contact us at [support@solace.com](mailto:support@solace.com).\n\
    \n## Notes\n\nNote|Description\n:---:|:---\n1|This specification defines SEMP\
    \ starting in \"v2\", and not the original SEMP \"v1\" interface. Request and\
    \ response formats between \"v1\" and \"v2\" are entirely incompatible, although\
    \ both protocols share a common port configuration on the Solace PubSub+ broker.\
    \ They are differentiated by the initial portion of the URI path, one of either\
    \ \"/SEMP/\" or \"/SEMP/v2/\"\n2|This API is partially implemented. Only a subset\
    \ of all objects are available.\n3|Read-only attributes may appear in POST and\
    \ PUT/PATCH requests. However, if a read-only attribute is not marked as identifying,\
    \ it will be ignored during a PUT/PATCH.\n4|On a PUT, if the SEMP user is not\
    \ authorized to modify the attribute, its value is left unchanged rather than\
    \ set to default. In addition, the values of write-only attributes are not set\
    \ to their defaults on a PUT, except in the following two cases: there is a mutual\
    \ requires relationship with another non-write-only attribute, both attributes\
    \ are absent from the request, and the non-write-only attribute is not currently\
    \ set to its default value; or the attribute is also opaque and the `opaquePassword`\
    \ query parameter is provided in the request.\n\n"
  contact:
    name: Solace
    url: http://www.solace.com
    email: support@solace.com
  version: "2.34"
servers:
- url: http://www.solace.com/SEMP/v2/monitor
- url: https://www.solace.com/SEMP/v2/monitor
paths:
  /:
    get:
      tags:
      - all
      summary: Get a Broker object.
      description: |-
        Get a Broker object.

        This object contains global configuration for the message broker.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation. Requests which include the following attributes require greater access scope/level:


        Attribute|Access Scope/Level
        :---|:---:
        averageRxByteRate|global/read-only
        averageRxCompressedByteRate|global/read-only
        averageRxMsgRate|global/read-only
        averageRxUncompressedByteRate|global/read-only
        averageTxByteRate|global/read-only
        averageTxCompressedByteRate|global/read-only
        averageTxMsgRate|global/read-only
        averageTxUncompressedByteRate|global/read-only
        configSyncAuthenticationClientCertMaxChainDepth|global/read-only
        configSyncAuthenticationClientCertValidateDateEnabled|global/read-only
        configSyncClientProfileTcpInitialCongestionWindow|global/read-only
        configSyncClientProfileTcpKeepaliveCount|global/read-only
        configSyncClientProfileTcpKeepaliveIdle|global/read-only
        configSyncClientProfileTcpKeepaliveInterval|global/read-only
        configSyncClientProfileTcpMaxWindow|global/read-only
        configSyncClientProfileTcpMss|global/read-only
        configSyncEnabled|global/read-only
        configSyncLastFailureReason|global/read-only
        configSyncSynchronizeUsernameEnabled|global/read-only
        configSyncTlsEnabled|global/read-only
        configSyncUp|global/read-only
        cspfVersion|global/read-only
        guaranteedMsgingDefragmentationEstimatedFragmentation|global/read-only
        guaranteedMsgingDefragmentationEstimatedRecoverableSpace|global/read-only
        guaranteedMsgingDefragmentationLastCompletedOn|global/read-only
        guaranteedMsgingDefragmentationLastCompletionPercentage|global/read-only
        guaranteedMsgingDefragmentationLastExitCondition|global/read-only
        guaranteedMsgingDefragmentationLastExitConditionInformation|global/read-only
        guaranteedMsgingDefragmentationScheduleDayList|global/read-only
        guaranteedMsgingDefragmentationScheduleEnabled|global/read-only
        guaranteedMsgingDefragmentationScheduleTimeList|global/read-only
        guaranteedMsgingDefragmentationStatus|global/read-only
        guaranteedMsgingDefragmentationStatusActiveCompletionPercentage|global/read-only
        guaranteedMsgingDefragmentationThresholdEnabled|global/read-only
        guaranteedMsgingDefragmentationThresholdFragmentationPercentage|global/read-only
        guaranteedMsgingDefragmentationThresholdMinInterval|global/read-only
        guaranteedMsgingDefragmentationThresholdUsagePercentage|global/read-only
        guaranteedMsgingEnabled|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.clearValue|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.setValue|global/read-only
        guaranteedMsgingEventDeliveredUnackedThreshold.clearPercent|global/read-only
        guaranteedMsgingEventDeliveredUnackedThreshold.setPercent|global/read-only
        guaranteedMsgingEventDiskUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventDiskUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.setValue|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.setValue|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.setValue|global/read-only
        guaranteedMsgingEventMsgCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolFileCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgSpoolFileCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearValue|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.setValue|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.setValue|global/read-only
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.setValue|global/read-only
        guaranteedMsgingMaxCacheUsage|global/read-only
        guaranteedMsgingMaxMsgSpoolUsage|global/read-only
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout|global/read-only
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout|global/read-only
        guaranteedMsgingOperationalStatus|global/read-only
        guaranteedMsgingTransactionReplicationCompatibilityMode|global/read-only
        oauthProfileDefault|global/read-only
        rxByteCount|global/read-only
        rxByteRate|global/read-only
        rxCompressedByteCount|global/read-only
        rxCompressedByteRate|global/read-only
        rxCompressionRatio|global/read-only
        rxMsgCount|global/read-only
        rxMsgRate|global/read-only
        rxUncompressedByteCount|global/read-only
        rxUncompressedByteRate|global/read-only
        serviceAmqpEnabled|global/read-only
        serviceAmqpTlsListenPort|global/read-only
        serviceEventConnectionCountThreshold.clearPercent|global/read-only
        serviceEventConnectionCountThreshold.clearValue|global/read-only
        serviceEventConnectionCountThreshold.setPercent|global/read-only
        serviceEventConnectionCountThreshold.setValue|global/read-only
        serviceHealthCheckEnabled|global/read-only
        serviceHealthCheckListenPort|global/read-only
        serviceHealthCheckTlsEnabled|global/read-only
        serviceHealthCheckTlsListenPort|global/read-only
        serviceMateLinkEnabled|global/read-only
        serviceMateLinkListenPort|global/read-only
        serviceMqttEnabled|global/read-only
        serviceMsgBackboneEnabled|global/read-only
        serviceRedundancyEnabled|global/read-only
        serviceRedundancyFirstListenPort|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.clearPercent|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.clearValue|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.setPercent|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.setValue|global/read-only
        serviceRestIncomingEnabled|global/read-only
        serviceRestOutgoingEnabled|global/read-only
        serviceSempCorsAllowAnyHostEnabled|global/read-only
        serviceSempLegacyTimeoutEnabled|global/read-only
        serviceSempPlainTextEnabled|global/read-only
        serviceSempPlainTextListenPort|global/read-only
        serviceSempSessionIdleTimeout|global/read-only
        serviceSempSessionMaxLifetime|global/read-only
        serviceSempTlsEnabled|global/read-only
        serviceSempTlsListenPort|global/read-only
        serviceSmfCompressionListenPort|global/read-only
        serviceSmfEnabled|global/read-only
        serviceSmfEventConnectionCountThreshold.clearPercent|global/read-only
        serviceSmfEventConnectionCountThreshold.clearValue|global/read-only
        serviceSmfEventConnectionCountThreshold.setPercent|global/read-only
        serviceSmfEventConnectionCountThreshold.setValue|global/read-only
        serviceSmfPlainTextListenPort|global/read-only
        serviceSmfRoutingControlListenPort|global/read-only
        serviceSmfTlsListenPort|global/read-only
        serviceTlsEventConnectionCountThreshold.clearPercent|global/read-only
        serviceTlsEventConnectionCountThreshold.clearValue|global/read-only
        serviceTlsEventConnectionCountThreshold.setPercent|global/read-only
        serviceTlsEventConnectionCountThreshold.setValue|global/read-only
        serviceWebTransportEnabled|global/read-only
        serviceWebTransportPlainTextListenPort|global/read-only
        serviceWebTransportTlsListenPort|global/read-only
        serviceWebTransportWebUrlSuffix|global/read-only
        telemetryTraceDemoExpiryTime|vpn/read-only
        telemetryTraceDemoState|vpn/read-only
        telemetryTraceMode|vpn/read-only
        tlsBlockVersion11Enabled|global/read-only
        tlsCipherSuiteManagementDefaultList|global/read-only
        tlsCipherSuiteManagementList|global/read-only
        tlsCipherSuiteManagementSupportedList|vpn/read-only
        tlsCipherSuiteMsgBackboneDefaultList|global/read-only
        tlsCipherSuiteMsgBackboneList|global/read-only
        tlsCipherSuiteMsgBackboneSupportedList|vpn/read-only
        tlsCipherSuiteSecureShellDefaultList|global/read-only
        tlsCipherSuiteSecureShellList|global/read-only
        tlsCipherSuiteSecureShellSupportedList|vpn/read-only
        tlsCrimeExploitProtectionEnabled|global/read-only
        tlsStandardDomainCertificateAuthoritiesEnabled|vpn/read-only
        tlsTicketLifetime|global/read-only
        tlsVersionSupportedList|vpn/read-only
        txByteCount|global/read-only
        txByteRate|global/read-only
        txCompressedByteCount|global/read-only
        txCompressedByteRate|global/read-only
        txCompressionRatio|global/read-only
        txMsgCount|global/read-only
        txMsgRate|global/read-only
        txUncompressedByteCount|global/read-only
        txUncompressedByteRate|global/read-only
        webManagerAllowUnencryptedWizardsEnabled|vpn/read-only
        webManagerCustomization|vpn/read-only
        webManagerRedirectHttpEnabled|vpn/read-only
        webManagerRedirectHttpLastFailureReason|vpn/read-only
        webManagerRedirectHttpOverrideTlsPort|vpn/read-only
        webManagerRedirectHttpUp|vpn/read-only



        This has been available since 2.13.
      operationId: getBroker
      parameters:
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Broker object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /about:
    get:
      tags:
      - all
      - about
      summary: Get an About object.
      description: "Get an About object.\n\nThis provides metadata about the SEMP\
        \ API, such as the version of the API supported by the broker.\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"global/none\" is\
        \ required to perform this operation.\n\nThis has been available since 2.13."
      operationId: getAbout
      parameters:
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The About object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /about/api:
    get:
      tags:
      - all
      - about
      summary: Get an API Description object.
      description: |-
        Get an API Description object.

        The API Description object provides metadata about the SEMP API.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.11.
      operationId: getAboutApi
      parameters:
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The API Description object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutApiResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /about/user:
    get:
      tags:
      - all
      - about
      summary: Get a User object.
      description: |-
        Get a User object.

        Session and access level information about the user accessing the SEMP API.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.11.
      operationId: getAboutUser
      parameters:
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The User object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /about/user/msgVpns:
    get:
      tags:
      - all
      - about
      summary: Get a list of User Message VPN objects.
      description: |-
        Get a list of User Message VPN objects.

        This provides information about the Message VPN access level for the username used to access the SEMP API.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.11.
      operationId: getAboutUserMsgVpns
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of User Message VPN objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserMsgVpnsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /about/user/msgVpns/{msgVpnName}:
    get:
      tags:
      - all
      - about
      summary: Get a User Message VPN object.
      description: |-
        Get a User Message VPN object.

        This provides information about the Message VPN access level for the username used to access the SEMP API.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.11.
      operationId: getAboutUserMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The User Message VPN object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserMsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /certAuthorities:
    get:
      tags:
      - all
      - certAuthority
      summary: Get a list of Certificate Authority objects.
      description: "Get a list of Certificate Authority objects.\n\nClients can authenticate\
        \ with the message broker over TLS by presenting a valid client certificate.\
        \ The message broker authenticates the client certificate by constructing\
        \ a full certificate chain (from the client certificate to intermediate CAs\
        \ to a configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ncertAuthorityName|x|x\ncertContent||x\ncrlDayList||x\ncrlLastDownloadTime||x\n\
        crlLastFailureReason||x\ncrlLastFailureTime||x\ncrlNextDownloadTime||x\ncrlTimeList||x\n\
        crlUp||x\ncrlUrl||x\nocspLastFailureReason||x\nocspLastFailureTime||x\nocspLastFailureUrl||x\n\
        ocspNonResponderCertEnabled||x\nocspOverrideUrl||x\nocspTimeout||x\nrevocationCheckEnabled||x\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.19. Replaced by clientCertAuthorities and domainCertAuthorities."
      operationId: getCertAuthorities
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Certificate Authority objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthoritiesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /certAuthorities/{certAuthorityName}:
    get:
      tags:
      - all
      - certAuthority
      summary: Get a Certificate Authority object.
      description: "Get a Certificate Authority object.\n\nClients can authenticate\
        \ with the message broker over TLS by presenting a valid client certificate.\
        \ The message broker authenticates the client certificate by constructing\
        \ a full certificate chain (from the client certificate to intermediate CAs\
        \ to a configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ncertAuthorityName|x|x\ncertContent||x\ncrlDayList||x\ncrlLastDownloadTime||x\n\
        crlLastFailureReason||x\ncrlLastFailureTime||x\ncrlNextDownloadTime||x\ncrlTimeList||x\n\
        crlUp||x\ncrlUrl||x\nocspLastFailureReason||x\nocspLastFailureTime||x\nocspLastFailureUrl||x\n\
        ocspNonResponderCertEnabled||x\nocspOverrideUrl||x\nocspTimeout||x\nrevocationCheckEnabled||x\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.19. Replaced by clientCertAuthorities and domainCertAuthorities."
      operationId: getCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Certificate Authority object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /certAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames:
    get:
      tags:
      - all
      - certAuthority
      summary: Get a list of OCSP Responder Trusted Common Name objects.
      description: "Get a list of OCSP Responder Trusted Common Name objects.\n\n\
        When an OCSP override URL is configured, the OCSP responder will be required\
        \ to sign the OCSP responses with certificates issued to these Trusted Common\
        \ Names. A maximum of 8 common names can be configured as valid response signers.\n\
        \n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncertAuthorityName|x|x\n\
        ocspTlsTrustedCommonName|x|x\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"global/read-only\" is required to perform this operation.\n\
        \nThis has been deprecated since 2.19. Replaced by clientCertAuthorities."
      operationId: getCertAuthorityOcspTlsTrustedCommonNames
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of OCSP Responder Trusted Common Name objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /certAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}:
    get:
      tags:
      - all
      - certAuthority
      summary: Get an OCSP Responder Trusted Common Name object.
      description: "Get an OCSP Responder Trusted Common Name object.\n\nWhen an OCSP\
        \ override URL is configured, the OCSP responder will be required to sign\
        \ the OCSP responses with certificates issued to these Trusted Common Names.\
        \ A maximum of 8 common names can be configured as valid response signers.\n\
        \n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncertAuthorityName|x|x\n\
        ocspTlsTrustedCommonName|x|x\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"global/read-only\" is required to perform this operation.\n\
        \nThis has been deprecated since 2.19. Replaced by clientCertAuthorities."
      operationId: getCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ocspTlsTrustedCommonName
        in: path
        description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The OCSP Responder Trusted Common Name object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /clientCertAuthorities:
    get:
      tags:
      - all
      - clientCertAuthority
      summary: Get a list of Client Certificate Authority objects.
      description: "Get a list of Client Certificate Authority objects.\n\nClients\
        \ can authenticate with the message broker over TLS by presenting a valid\
        \ client certificate. The message broker authenticates the client certificate\
        \ by constructing a full certificate chain (from the client certificate to\
        \ intermediate CAs to a configured root CA). The intermediate CAs in this\
        \ chain can be provided by the client, or configured in the message broker.\
        \ The root CA must be configured on the message broker.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ncertAuthorityName|x|\n\n\n\nA SEMP client authorized with\
        \ a minimum access scope/level of \"global/read-only\" is required to perform\
        \ this operation.\n\nThis has been available since 2.19."
      operationId: getClientCertAuthorities
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Certificate Authority objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthoritiesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /clientCertAuthorities/{certAuthorityName}:
    get:
      tags:
      - all
      - clientCertAuthority
      summary: Get a Client Certificate Authority object.
      description: "Get a Client Certificate Authority object.\n\nClients can authenticate\
        \ with the message broker over TLS by presenting a valid client certificate.\
        \ The message broker authenticates the client certificate by constructing\
        \ a full certificate chain (from the client certificate to intermediate CAs\
        \ to a configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ncertAuthorityName|x|\n\n\n\nA SEMP client authorized with\
        \ a minimum access scope/level of \"global/read-only\" is required to perform\
        \ this operation.\n\nThis has been available since 2.19."
      operationId: getClientCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Certificate Authority object's attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames:
    get:
      tags:
      - all
      - clientCertAuthority
      summary: Get a list of OCSP Responder Trusted Common Name objects.
      description: "Get a list of OCSP Responder Trusted Common Name objects.\n\n\
        When an OCSP override URL is configured, the OCSP responder will be required\
        \ to sign the OCSP responses with certificates issued to these Trusted Common\
        \ Names. A maximum of 8 common names can be configured as valid response signers.\n\
        \n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncertAuthorityName|x|\n\
        ocspTlsTrustedCommonName|x|\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"global/read-only\" is required to perform this operation.\n\
        \nThis has been available since 2.19."
      operationId: getClientCertAuthorityOcspTlsTrustedCommonNames
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of OCSP Responder Trusted Common Name objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}:
    get:
      tags:
      - all
      - clientCertAuthority
      summary: Get an OCSP Responder Trusted Common Name object.
      description: "Get an OCSP Responder Trusted Common Name object.\n\nWhen an OCSP\
        \ override URL is configured, the OCSP responder will be required to sign\
        \ the OCSP responses with certificates issued to these Trusted Common Names.\
        \ A maximum of 8 common names can be configured as valid response signers.\n\
        \n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncertAuthorityName|x|\n\
        ocspTlsTrustedCommonName|x|\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"global/read-only\" is required to perform this operation.\n\
        \nThis has been available since 2.19."
      operationId: getClientCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ocspTlsTrustedCommonName
        in: path
        description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The OCSP Responder Trusted Common Name object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /configSyncLocalDatabaseRows:
    get:
      tags:
      - all
      - configSyncLocalDatabaseRow
      summary: Get a list of Config Sync Local Database objects.
      description: |-
        Get a list of Config Sync Local Database objects.

        Config Sync Local Database Rows contains information about the status of the table for this Broker or a local Message VPN.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        name|x|
        type|x|



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.22.
      operationId: getConfigSyncLocalDatabaseRows
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Config Sync Local Database objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSyncLocalDatabaseRowsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /configSyncLocalDatabaseRows/{type},{name}:
    get:
      tags:
      - all
      - configSyncLocalDatabaseRow
      summary: Get a Config Sync Local Database object.
      description: |-
        Get a Config Sync Local Database object.

        Config Sync Local Database Rows contains information about the status of the table for this Broker or a local Message VPN.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        name|x|
        type|x|



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.22.
      operationId: getConfigSyncLocalDatabaseRow
      parameters:
      - name: type
        in: path
        description: The type of the row. Can be one of "router" or "vpn". There is
          one "router" row and one row for each configured "vpn". Each row represents
          a table of information that is synchronized between Config Sync and replication
          mates.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: "The name is \"site\" when the row type is \"router\", otherwise\
          \ it is the Message VPN name."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Config Sync Local Database object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSyncLocalDatabaseRowResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Cluster objects.
      description: |-
        Get a list of Cluster objects.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        tlsServerCertEnforceTrustedCommonNameEnabled||x



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusters
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Cluster objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClustersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Cluster object.
      description: |-
        Get a Cluster object.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        tlsServerCertEnforceTrustedCommonNameEnabled||x



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrCluster
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Cluster object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/certMatchingRules:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Certificate Matching Rule objects.
      description: |-
        Get a list of Certificate Matching Rule objects.

        A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        ruleName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.28.
      operationId: getDmrClusterCertMatchingRules
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Certificate Matching Rule objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterCertMatchingRulesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/certMatchingRules/{ruleName}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Certificate Matching Rule object.
      description: |-
        Get a Certificate Matching Rule object.

        A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        ruleName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.28.
      operationId: getDmrClusterCertMatchingRule
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleName
        in: path
        description: The name of the rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Certificate Matching Rule object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterCertMatchingRuleResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/certMatchingRules/{ruleName}/attributeFilters:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Certificate Matching Rule Attribute Filter objects.
      description: |-
        Get a list of Certificate Matching Rule Attribute Filter objects.

        A Cert Matching Rule Attribute Filter compares a link attribute to a string.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        filterName|x|
        ruleName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.28.
      operationId: getDmrClusterCertMatchingRuleAttributeFilters
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleName
        in: path
        description: The name of the rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Certificate Matching Rule Attribute Filter objects'\
            \ attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterCertMatchingRuleAttributeFiltersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/certMatchingRules/{ruleName}/attributeFilters/{filterName}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Certificate Matching Rule Attribute Filter object.
      description: |-
        Get a Certificate Matching Rule Attribute Filter object.

        A Cert Matching Rule Attribute Filter compares a link attribute to a string.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        filterName|x|
        ruleName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.28.
      operationId: getDmrClusterCertMatchingRuleAttributeFilter
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleName
        in: path
        description: The name of the rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filterName
        in: path
        description: The name of the filter.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Certificate Matching Rule Attribute Filter object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterCertMatchingRuleAttributeFilterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/certMatchingRules/{ruleName}/conditions:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Certificate Matching Rule Condition objects.
      description: |-
        Get a list of Certificate Matching Rule Condition objects.

        A Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        ruleName|x|
        source|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.28.
      operationId: getDmrClusterCertMatchingRuleConditions
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleName
        in: path
        description: The name of the rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Certificate Matching Rule Condition objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterCertMatchingRuleConditionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/certMatchingRules/{ruleName}/conditions/{source}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Certificate Matching Rule Condition object.
      description: |-
        Get a Certificate Matching Rule Condition object.

        A Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        ruleName|x|
        source|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.28.
      operationId: getDmrClusterCertMatchingRuleCondition
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleName
        in: path
        description: The name of the rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: source
        in: path
        description: Certificate field to be compared with the Attribute.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Certificate Matching Rule Condition object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterCertMatchingRuleConditionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Link objects.
      description: "Get a list of Link objects.\n\nA Link connects nodes (either within\
        \ a Cluster or between two different Clusters) and allows them to exchange\
        \ topology information, subscriptions and data.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ndmrClusterName|x|\nremoteNodeName|x|\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"global/read-only\" is\
        \ required to perform this operation.\n\nThis has been available since 2.11."
      operationId: getDmrClusterLinks
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Link objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinksResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Link object.
      description: "Get a Link object.\n\nA Link connects nodes (either within a Cluster\
        \ or between two different Clusters) and allows them to exchange topology\
        \ information, subscriptions and data.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ndmrClusterName|x|\nremoteNodeName|x|\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"global/read-only\" is\
        \ required to perform this operation.\n\nThis has been available since 2.11."
      operationId: getDmrClusterLink
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Link object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/attributes:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Link Attribute objects.
      description: "Get a list of Link Attribute objects.\n\nA Link Attribute is a\
        \ key+value pair that can be used to locate a DMR Cluster Link, for example\
        \ when using client certificate mapping.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nattributeName|x|\nattributeValue|x|\ndmrClusterName|x|\n\
        remoteNodeName|x|\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"global/read-only\" is required to perform this operation.\n\nThis has\
        \ been available since 2.28."
      operationId: getDmrClusterLinkAttributes
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Link Attribute objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkAttributesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/attributes/{attributeName},{attributeValue}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Link Attribute object.
      description: "Get a Link Attribute object.\n\nA Link Attribute is a key+value\
        \ pair that can be used to locate a DMR Cluster Link, for example when using\
        \ client certificate mapping.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\n\
        attributeName|x|\nattributeValue|x|\ndmrClusterName|x|\nremoteNodeName|x|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.28."
      operationId: getDmrClusterLinkAttribute
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attributeName
        in: path
        description: The name of the Attribute.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attributeValue
        in: path
        description: The value of the Attribute.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Link Attribute object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkAttributeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/channels:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Cluster Link Channels objects.
      description: |-
        Get a list of Cluster Link Channels objects.

        A Channel is a connection between this broker and a remote node in the Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        msgVpnName|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLinkChannels
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Cluster Link Channels objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkChannelsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/channels/{msgVpnName}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Cluster Link Channels object.
      description: |-
        Get a Cluster Link Channels object.

        A Channel is a connection between this broker and a remote node in the Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        msgVpnName|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLinkChannel
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Cluster Link Channels object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkChannelResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Remote Address objects.
      description: "Get a list of Remote Address objects.\n\nEach Remote Address,\
        \ consisting of a FQDN or IP address and optional port, is used to connect\
        \ to the remote node for this Link. Up to 4 addresses may be provided for\
        \ each Link, and will be tried on a round-robin basis.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ndmrClusterName|x|\nremoteAddress|x|\nremoteNodeName|x|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getDmrClusterLinkRemoteAddresses
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Remote Address objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkRemoteAddressesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses/{remoteAddress}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Remote Address object.
      description: "Get a Remote Address object.\n\nEach Remote Address, consisting\
        \ of a FQDN or IP address and optional port, is used to connect to the remote\
        \ node for this Link. Up to 4 addresses may be provided for each Link, and\
        \ will be tried on a round-robin basis.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ndmrClusterName|x|\nremoteAddress|x|\nremoteNodeName|x|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getDmrClusterLinkRemoteAddress
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteAddress
        in: path
        description: "The FQDN or IP address (and optional port) of the remote node.\
          \ If a port is not provided, it will vary based on the transport encoding:\
          \ 55555 (plain-text), 55443 (encrypted), or 55003 (compressed)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Remote Address object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkRemoteAddressResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Trusted Common Name objects.
      description: "Get a list of Trusted Common Name objects.\n\nThe Trusted Common\
        \ Names for the Link are used by encrypted transports to verify the name in\
        \ the certificate presented by the remote node. They must include the common\
        \ name of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ndmrClusterName|x|x\nremoteNodeName|x|x\ntlsTrustedCommonName|x|x\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.18. Common Name validation has been replaced by Server Certificate Name\
        \ validation."
      operationId: getDmrClusterLinkTlsTrustedCommonNames
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Trusted Common Name objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames/{tlsTrustedCommonName}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Trusted Common Name object.
      description: "Get a Trusted Common Name object.\n\nThe Trusted Common Names\
        \ for the Link are used by encrypted transports to verify the name in the\
        \ certificate presented by the remote node. They must include the common name\
        \ of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ndmrClusterName|x|x\nremoteNodeName|x|x\ntlsTrustedCommonName|x|x\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.18. Common Name validation has been replaced by Server Certificate Name\
        \ validation."
      operationId: getDmrClusterLinkTlsTrustedCommonName
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tlsTrustedCommonName
        in: path
        description: The expected trusted common name of the remote certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Trusted Common Name object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/topologyIssues:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Cluster Topology Issue objects.
      description: |-
        Get a list of Cluster Topology Issue objects.

        A Cluster Topology Issue indicates incorrect or inconsistent configuration within the DMR network. Such issues will cause messages to be misdelivered or lost.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        topologyIssue|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterTopologyIssues
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Cluster Topology Issue objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterTopologyIssuesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/topologyIssues/{topologyIssue}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Cluster Topology Issue object.
      description: |-
        Get a Cluster Topology Issue object.

        A Cluster Topology Issue indicates incorrect or inconsistent configuration within the DMR network. Such issues will cause messages to be misdelivered or lost.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        topologyIssue|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterTopologyIssue
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topologyIssue
        in: path
        description: The topology issue discovered in the Cluster. A topology issue
          indicates incorrect or inconsistent configuration within the DMR network.
          Such issues will cause messages to be misdelivered or lost.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Cluster Topology Issue object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterTopologyIssueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /domainCertAuthorities:
    get:
      tags:
      - all
      - domainCertAuthority
      summary: Get a list of Domain Certificate Authority objects.
      description: |-
        Get a list of Domain Certificate Authority objects.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getDomainCertAuthorities
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Domain Certificate Authority objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthoritiesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /domainCertAuthorities/{certAuthorityName}:
    get:
      tags:
      - all
      - domainCertAuthority
      summary: Get a Domain Certificate Authority object.
      description: |-
        Get a Domain Certificate Authority object.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getDomainCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Domain Certificate Authority object's attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns:
    get:
      tags:
      - all
      - msgVpn
      summary: Get a list of Message VPN objects.
      description: "Get a list of Message VPN objects.\n\nMessage VPNs (Virtual Private\
        \ Networks) allow for the segregation of topic space and clients. They also\
        \ group clients connecting to a network of message brokers, such that messages\
        \ published within a particular group are only visible to that group's clients.\n\
        \n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nauthenticationOauthDefaultProviderName||x\n\
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled||x\nconfigSyncLocalKey||x\n\
        configSyncLocalLastResult||x\nconfigSyncLocalRole||x\nconfigSyncLocalState||x\n\
        configSyncLocalTimeInState||x\ncounter.controlRxByteCount||x\ncounter.controlRxMsgCount||x\n\
        counter.controlTxByteCount||x\ncounter.controlTxMsgCount||x\ncounter.dataRxByteCount||x\n\
        counter.dataRxMsgCount||x\ncounter.dataTxByteCount||x\ncounter.dataTxMsgCount||x\n\
        counter.discardedRxMsgCount||x\ncounter.discardedTxMsgCount||x\ncounter.loginRxMsgCount||x\n\
        counter.loginTxMsgCount||x\ncounter.msgSpoolRxMsgCount||x\ncounter.msgSpoolTxMsgCount||x\n\
        counter.tlsRxByteCount||x\ncounter.tlsTxByteCount||x\ndistributedCacheManagementEnabled||x\n\
        msgVpnName|x|\nrate.averageRxByteRate||x\nrate.averageRxMsgRate||x\nrate.averageTxByteRate||x\n\
        rate.averageTxMsgRate||x\nrate.rxByteRate||x\nrate.rxMsgRate||x\nrate.tlsAverageRxByteRate||x\n\
        rate.tlsAverageTxByteRate||x\nrate.tlsRxByteRate||x\nrate.tlsTxByteRate||x\n\
        rate.txByteRate||x\nrate.txMsgRate||x\nrestTlsServerCertEnforceTrustedCommonNameEnabled||x\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpns
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Message VPN objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}:
    get:
      tags:
      - all
      - msgVpn
      summary: Get a Message VPN object.
      description: "Get a Message VPN object.\n\nMessage VPNs (Virtual Private Networks)\
        \ allow for the segregation of topic space and clients. They also group clients\
        \ connecting to a network of message brokers, such that messages published\
        \ within a particular group are only visible to that group's clients.\n\n\n\
        Attribute|Identifying|Deprecated\n:---|:---:|:---:\nauthenticationOauthDefaultProviderName||x\n\
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled||x\nconfigSyncLocalKey||x\n\
        configSyncLocalLastResult||x\nconfigSyncLocalRole||x\nconfigSyncLocalState||x\n\
        configSyncLocalTimeInState||x\ncounter.controlRxByteCount||x\ncounter.controlRxMsgCount||x\n\
        counter.controlTxByteCount||x\ncounter.controlTxMsgCount||x\ncounter.dataRxByteCount||x\n\
        counter.dataRxMsgCount||x\ncounter.dataTxByteCount||x\ncounter.dataTxMsgCount||x\n\
        counter.discardedRxMsgCount||x\ncounter.discardedTxMsgCount||x\ncounter.loginRxMsgCount||x\n\
        counter.loginTxMsgCount||x\ncounter.msgSpoolRxMsgCount||x\ncounter.msgSpoolTxMsgCount||x\n\
        counter.tlsRxByteCount||x\ncounter.tlsTxByteCount||x\ndistributedCacheManagementEnabled||x\n\
        msgVpnName|x|\nrate.averageRxByteRate||x\nrate.averageRxMsgRate||x\nrate.averageTxByteRate||x\n\
        rate.averageTxMsgRate||x\nrate.rxByteRate||x\nrate.rxMsgRate||x\nrate.tlsAverageRxByteRate||x\n\
        rate.tlsAverageTxByteRate||x\nrate.tlsRxByteRate||x\nrate.tlsTxByteRate||x\n\
        rate.txByteRate||x\nrate.txMsgRate||x\nrestTlsServerCertEnforceTrustedCommonNameEnabled||x\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Message VPN object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of ACL Profile objects.
      description: |-
        Get a list of ACL Profile objects.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnAclProfiles
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of ACL Profile objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get an ACL Profile object.
      description: |-
        Get an ACL Profile object.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnAclProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The ACL Profile object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Client Connect Exception objects.
      description: |-
        Get a list of Client Connect Exception objects.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        clientConnectExceptionAddress|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnAclProfileClientConnectExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Connect Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions/{clientConnectExceptionAddress}:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Client Connect Exception object.
      description: |-
        Get a Client Connect Exception object.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        clientConnectExceptionAddress|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnAclProfileClientConnectException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientConnectExceptionAddress
        in: path
        description: The IP address/netmask of the client connect exception in canonical
          CIDR form.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Connect Exception object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Publish Topic Exception objects.
      description: |-
        Get a list of Publish Topic Exception objects.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|x
        msgVpnName|x|x
        publishExceptionTopic|x|x
        topicSyntax|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: getMsgVpnAclProfilePublishExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Publish Topic Exception objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions/{topicSyntax},{publishExceptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Publish Topic Exception object.
      description: |-
        Get a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|x
        msgVpnName|x|x
        publishExceptionTopic|x|x
        topicSyntax|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: getMsgVpnAclProfilePublishException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publishExceptionTopic
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Publish Topic Exception object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishTopicExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Publish Topic Exception objects.
      description: |-
        Get a list of Publish Topic Exception objects.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        publishTopicException|x|
        publishTopicExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfilePublishTopicExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Publish Topic Exception objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishTopicExceptions/{publishTopicExceptionSyntax},{publishTopicException}:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Publish Topic Exception object.
      description: |-
        Get a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        publishTopicException|x|
        publishTopicExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfilePublishTopicException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publishTopicExceptionSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publishTopicException
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Publish Topic Exception object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Subscribe Topic Exception objects.
      description: |-
        Get a list of Subscribe Topic Exception objects.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|x
        msgVpnName|x|x
        subscribeExceptionTopic|x|x
        topicSyntax|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: getMsgVpnAclProfileSubscribeExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Subscribe Topic Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions/{topicSyntax},{subscribeExceptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Subscribe Topic Exception object.
      description: |-
        Get a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|x
        msgVpnName|x|x
        subscribeExceptionTopic|x|x
        topicSyntax|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: getMsgVpnAclProfileSubscribeException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeExceptionTopic
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Subscribe Topic Exception object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Subscribe Share Name Exception objects.
      description: |-
        Get a list of Subscribe Share Name Exception objects.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        subscribeShareNameException|x|
        subscribeShareNameExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeShareNameExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Subscribe Share Name Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions/{subscribeShareNameExceptionSyntax},{subscribeShareNameException}
  : get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Subscribe Share Name Exception object.
      description: |-
        Get a Subscribe Share Name Exception object.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        subscribeShareNameException|x|
        subscribeShareNameExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeShareNameException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeShareNameExceptionSyntax
        in: path
        description: The syntax of the subscribe share name for the exception to the
          default action taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeShareNameException
        in: path
        description: The subscribe share name exception to the default action taken.
          May include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Subscribe Share Name Exception object's attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeTopicExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Subscribe Topic Exception objects.
      description: |-
        Get a list of Subscribe Topic Exception objects.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        subscribeTopicException|x|
        subscribeTopicExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeTopicExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Subscribe Topic Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeTopicExceptions/{subscribeTopicExceptionSyntax},{subscribeTopicException}
  : get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Subscribe Topic Exception object.
      description: |-
        Get a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        subscribeTopicException|x|
        subscribeTopicExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeTopicException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeTopicExceptionSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeTopicException
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Subscribe Topic Exception object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/authenticationOauthProfiles:
    get:
      tags:
      - all
      - msgVpn
      - authenticationOauthProfile
      summary: Get a list of OAuth Profile objects.
      description: |-
        Get a list of OAuth Profile objects.

        OAuth profiles specify how to securely authenticate to an OAuth provider.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.25.
      operationId: getMsgVpnAuthenticationOauthProfiles
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of OAuth Profile objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfilesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/authenticationOauthProfiles/{oauthProfileName}:
    get:
      tags:
      - all
      - msgVpn
      - authenticationOauthProfile
      summary: Get an OAuth Profile object.
      description: |-
        Get an OAuth Profile object.

        OAuth profiles specify how to securely authenticate to an OAuth provider.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.25.
      operationId: getMsgVpnAuthenticationOauthProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The OAuth Profile object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/authenticationOauthProfiles/{oauthProfileName}/clientRequiredClaims:
    get:
      tags:
      - all
      - msgVpn
      - authenticationOauthProfile
      summary: Get a list of Required Claim objects.
      description: |-
        Get a list of Required Claim objects.

        Additional claims to be verified in the ID token.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientRequiredClaimName|x|
        msgVpnName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.25.
      operationId: getMsgVpnAuthenticationOauthProfileClientRequiredClaims
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Required Claim objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileClientRequiredClaimsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/authenticationOauthProfiles/{oauthProfileName}/clientRequiredClaims/{clientRequiredClaimName}:
    get:
      tags:
      - all
      - msgVpn
      - authenticationOauthProfile
      summary: Get a Required Claim object.
      description: |-
        Get a Required Claim object.

        Additional claims to be verified in the ID token.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientRequiredClaimName|x|
        msgVpnName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.25.
      operationId: getMsgVpnAuthenticationOauthProfileClientRequiredClaim
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientRequiredClaimName
        in: path
        description: The name of the ID token claim to verify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Required Claim object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileClientRequiredClaimResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/authenticationOauthProfiles/{oauthProfileName}/resourceServerRequiredClaims:
    get:
      tags:
      - all
      - msgVpn
      - authenticationOauthProfile
      summary: Get a list of Required Claim objects.
      description: |-
        Get a list of Required Claim objects.

        Additional claims to be verified in the access token.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthProfileName|x|
        resourceServerRequiredClaimName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.25.
      operationId: getMsgVpnAuthenticationOauthProfileResourceServerRequiredClaims
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Required Claim objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/authenticationOauthProfiles/{oauthProfileName}/resourceServerRequiredClaims/{resourceServerRequiredClaimName}
  : get:
      tags:
      - all
      - msgVpn
      - authenticationOauthProfile
      summary: Get a Required Claim object.
      description: |-
        Get a Required Claim object.

        Additional claims to be verified in the access token.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthProfileName|x|
        resourceServerRequiredClaimName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.25.
      operationId: getMsgVpnAuthenticationOauthProfileResourceServerRequiredClaim
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resourceServerRequiredClaimName
        in: path
        description: The name of the access token claim to verify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Required Claim object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/authenticationOauthProviders:
    get:
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      summary: Get a list of OAuth Provider objects.
      description: |-
        Get a list of OAuth Provider objects.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        audienceClaimName||x
        audienceClaimSource||x
        audienceClaimValue||x
        audienceValidationEnabled||x
        authenticationSuccessCount||x
        authorizationGroupClaimName||x
        authorizationGroupClaimSource||x
        authorizationGroupEnabled||x
        disconnectOnTokenExpirationEnabled||x
        enabled||x
        jwksLastRefreshFailureReason||x
        jwksLastRefreshFailureTime||x
        jwksLastRefreshTime||x
        jwksNextScheduledRefreshTime||x
        jwksRefreshFailureCount||x
        jwksRefreshInterval||x
        jwksUri||x
        loginFailureIncorrectAudienceValueCount||x
        loginFailureInvalidAudienceValueCount||x
        loginFailureInvalidAuthorizationGroupValueCount||x
        loginFailureInvalidJwtSignatureCount||x
        loginFailureInvalidUsernameValueCount||x
        loginFailureMismatchedUsernameCount||x
        loginFailureMissingAudienceCount||x
        loginFailureMissingJwkCount||x
        loginFailureMissingOrInvalidTokenCount||x
        loginFailureMissingUsernameCount||x
        loginFailureTokenExpiredCount||x
        loginFailureTokenIntrospectionErroredCount||x
        loginFailureTokenIntrospectionFailureCount||x
        loginFailureTokenIntrospectionHttpsErrorCount||x
        loginFailureTokenIntrospectionInvalidCount||x
        loginFailureTokenIntrospectionTimeoutCount||x
        loginFailureTokenNotValidYetCount||x
        loginFailureUnsupportedAlgCount||x
        missingAuthorizationGroupCount||x
        msgVpnName|x|x
        oauthProviderName|x|x
        tokenIgnoreTimeLimitsEnabled||x
        tokenIntrospectionAverageTime||x
        tokenIntrospectionLastFailureReason||x
        tokenIntrospectionLastFailureTime||x
        tokenIntrospectionParameterName||x
        tokenIntrospectionSuccessCount||x
        tokenIntrospectionTimeout||x
        tokenIntrospectionUri||x
        tokenIntrospectionUsername||x
        usernameClaimName||x
        usernameClaimSource||x
        usernameValidateEnabled||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
      operationId: getMsgVpnAuthenticationOauthProviders
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of OAuth Provider objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvidersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/authenticationOauthProviders/{oauthProviderName}:
    get:
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      summary: Get an OAuth Provider object.
      description: |-
        Get an OAuth Provider object.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        audienceClaimName||x
        audienceClaimSource||x
        audienceClaimValue||x
        audienceValidationEnabled||x
        authenticationSuccessCount||x
        authorizationGroupClaimName||x
        authorizationGroupClaimSource||x
        authorizationGroupEnabled||x
        disconnectOnTokenExpirationEnabled||x
        enabled||x
        jwksLastRefreshFailureReason||x
        jwksLastRefreshFailureTime||x
        jwksLastRefreshTime||x
        jwksNextScheduledRefreshTime||x
        jwksRefreshFailureCount||x
        jwksRefreshInterval||x
        jwksUri||x
        loginFailureIncorrectAudienceValueCount||x
        loginFailureInvalidAudienceValueCount||x
        loginFailureInvalidAuthorizationGroupValueCount||x
        loginFailureInvalidJwtSignatureCount||x
        loginFailureInvalidUsernameValueCount||x
        loginFailureMismatchedUsernameCount||x
        loginFailureMissingAudienceCount||x
        loginFailureMissingJwkCount||x
        loginFailureMissingOrInvalidTokenCount||x
        loginFailureMissingUsernameCount||x
        loginFailureTokenExpiredCount||x
        loginFailureTokenIntrospectionErroredCount||x
        loginFailureTokenIntrospectionFailureCount||x
        loginFailureTokenIntrospectionHttpsErrorCount||x
        loginFailureTokenIntrospectionInvalidCount||x
        loginFailureTokenIntrospectionTimeoutCount||x
        loginFailureTokenNotValidYetCount||x
        loginFailureUnsupportedAlgCount||x
        missingAuthorizationGroupCount||x
        msgVpnName|x|x
        oauthProviderName|x|x
        tokenIgnoreTimeLimitsEnabled||x
        tokenIntrospectionAverageTime||x
        tokenIntrospectionLastFailureReason||x
        tokenIntrospectionLastFailureTime||x
        tokenIntrospectionParameterName||x
        tokenIntrospectionSuccessCount||x
        tokenIntrospectionTimeout||x
        tokenIntrospectionUri||x
        tokenIntrospectionUsername||x
        usernameClaimName||x
        usernameClaimSource||x
        usernameValidateEnabled||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
      operationId: getMsgVpnAuthenticationOauthProvider
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthProviderName
        in: path
        description: The name of the OAuth Provider.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The OAuth Provider object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/authorizationGroups:
    get:
      tags:
      - all
      - msgVpn
      - authorizationGroup
      summary: Get a list of Authorization Group objects.
      description: "Get a list of Authorization Group objects.\n\nTo use client authorization\
        \ groups configured on an external server to provide client authorizations,\
        \ Authorization Group objects must be created on the Message VPN that match\
        \ the authorization groups provisioned on the external server. These objects\
        \ must be configured with the client profiles and ACL profiles that will be\
        \ assigned to the clients that belong to those authorization groups. A newly\
        \ created group is placed at the end of the group list which is the lowest\
        \ priority.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nauthorizationGroupName|x|\n\
        msgVpnName|x|\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-only\" is required to perform this operation.\n\nThis has\
        \ been available since 2.11."
      operationId: getMsgVpnAuthorizationGroups
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Authorization Group objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}:
    get:
      tags:
      - all
      - msgVpn
      - authorizationGroup
      summary: Get an Authorization Group object.
      description: "Get an Authorization Group object.\n\nTo use client authorization\
        \ groups configured on an external server to provide client authorizations,\
        \ Authorization Group objects must be created on the Message VPN that match\
        \ the authorization groups provisioned on the external server. These objects\
        \ must be configured with the client profiles and ACL profiles that will be\
        \ assigned to the clients that belong to those authorization groups. A newly\
        \ created group is placed at the end of the group list which is the lowest\
        \ priority.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nauthorizationGroupName|x|\n\
        msgVpnName|x|\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-only\" is required to perform this operation.\n\nThis has\
        \ been available since 2.11."
      operationId: getMsgVpnAuthorizationGroup
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authorizationGroupName
        in: path
        description: "The name of the Authorization Group. For LDAP groups, special\
          \ care is needed if the group name contains special characters such as '#',\
          \ '+', ';', '=' as the value of the group name returned from the LDAP server\
          \ might prepend those characters with '\\'. For example a group name called\
          \ 'test#,lab,com' will be returned from the LDAP server as 'test\\#,lab,com'."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Authorization Group object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/bridges:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a list of Bridge objects.
      description: |-
        Get a list of Bridge objects.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        counter.controlRxByteCount||x
        counter.controlRxMsgCount||x
        counter.controlTxByteCount||x
        counter.controlTxMsgCount||x
        counter.dataRxByteCount||x
        counter.dataRxMsgCount||x
        counter.dataTxByteCount||x
        counter.dataTxMsgCount||x
        counter.discardedRxMsgCount||x
        counter.discardedTxMsgCount||x
        counter.loginRxMsgCount||x
        counter.loginTxMsgCount||x
        counter.msgSpoolRxMsgCount||x
        counter.rxByteCount||x
        counter.rxMsgCount||x
        counter.txByteCount||x
        counter.txMsgCount||x
        msgVpnName|x|
        rate.averageRxByteRate||x
        rate.averageRxMsgRate||x
        rate.averageTxByteRate||x
        rate.averageTxMsgRate||x
        rate.rxByteRate||x
        rate.rxMsgRate||x
        rate.txByteRate||x
        rate.txMsgRate||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridges
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Bridge objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a Bridge object.
      description: |-
        Get a Bridge object.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        counter.controlRxByteCount||x
        counter.controlRxMsgCount||x
        counter.controlTxByteCount||x
        counter.controlTxMsgCount||x
        counter.dataRxByteCount||x
        counter.dataRxMsgCount||x
        counter.dataTxByteCount||x
        counter.dataTxMsgCount||x
        counter.discardedRxMsgCount||x
        counter.discardedTxMsgCount||x
        counter.loginRxMsgCount||x
        counter.loginTxMsgCount||x
        counter.msgSpoolRxMsgCount||x
        counter.rxByteCount||x
        counter.rxMsgCount||x
        counter.txByteCount||x
        counter.txMsgCount||x
        msgVpnName|x|
        rate.averageRxByteRate||x
        rate.averageRxMsgRate||x
        rate.averageTxByteRate||x
        rate.averageTxMsgRate||x
        rate.rxByteRate||x
        rate.rxMsgRate||x
        rate.txByteRate||x
        rate.txMsgRate||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Bridge object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/localSubscriptions:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a list of Bridge Local Subscriptions objects.
      description: |-
        Get a list of Bridge Local Subscriptions objects.

        A Local Subscription is a topic subscription used by a remote Message VPN Bridge to attract messages from this broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        localSubscriptionTopic|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeLocalSubscriptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Bridge Local Subscriptions objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/localSubscriptions/{localSubscriptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a Bridge Local Subscriptions object.
      description: |-
        Get a Bridge Local Subscriptions object.

        A Local Subscription is a topic subscription used by a remote Message VPN Bridge to attract messages from this broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        localSubscriptionTopic|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeLocalSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: localSubscriptionTopic
        in: path
        description: The topic of the Bridge local subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Bridge Local Subscriptions object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a list of Remote Message VPN objects.
      description: |-
        Get a list of Remote Message VPN objects.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        msgVpnName|x|
        remoteMsgVpnInterface|x|
        remoteMsgVpnLocation|x|
        remoteMsgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeRemoteMsgVpns
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Remote Message VPN objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}
  : get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a Remote Message VPN object.
      description: |-
        Get a Remote Message VPN object.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        msgVpnName|x|
        remoteMsgVpnInterface|x|
        remoteMsgVpnLocation|x|
        remoteMsgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeRemoteMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnName
        in: path
        description: The name of the remote Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnLocation
        in: path
        description: "The location of the remote Message VPN as either an FQDN with\
          \ port, IP address with port, or virtual router name (starting with \"v:\"\
          )."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnInterface
        in: path
        description: "The physical interface on the local Message VPN host for connecting\
          \ to the remote Message VPN. By default, an interface is chosen automatically\
          \ (recommended), but if specified, `remoteMsgVpnLocation` must not be a\
          \ virtual router name."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Remote Message VPN object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a list of Remote Subscription objects.
      description: |-
        Get a list of Remote Subscription objects.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        msgVpnName|x|
        remoteSubscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeRemoteSubscriptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Remote Subscription objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions/{remoteSubscriptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a Remote Subscription object.
      description: |-
        Get a Remote Subscription object.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        msgVpnName|x|
        remoteSubscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeRemoteSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteSubscriptionTopic
        in: path
        description: The topic of the Bridge remote subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Remote Subscription object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a list of Trusted Common Name objects.
      description: "Get a list of Trusted Common Name objects.\n\nThe Trusted Common\
        \ Names for the Bridge are used by encrypted transports to verify the name\
        \ in the certificate presented by the remote node. They must include the common\
        \ name of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nbridgeName|x|x\nbridgeVirtualRouter|x|x\nmsgVpnName|x|x\n\
        tlsTrustedCommonName|x|x\n\n\n\nA SEMP client authorized with a minimum access\
        \ scope/level of \"vpn/read-only\" is required to perform this operation.\n\
        \nThis has been deprecated since 2.18. Common Name validation has been replaced\
        \ by Server Certificate Name validation."
      operationId: getMsgVpnBridgeTlsTrustedCommonNames
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Trusted Common Name objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames/{tlsTrustedCommonName}:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a Trusted Common Name object.
      description: "Get a Trusted Common Name object.\n\nThe Trusted Common Names\
        \ for the Bridge are used by encrypted transports to verify the name in the\
        \ certificate presented by the remote node. They must include the common name\
        \ of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nbridgeName|x|x\nbridgeVirtualRouter|x|x\nmsgVpnName|x|x\n\
        tlsTrustedCommonName|x|x\n\n\n\nA SEMP client authorized with a minimum access\
        \ scope/level of \"vpn/read-only\" is required to perform this operation.\n\
        \nThis has been deprecated since 2.18. Common Name validation has been replaced\
        \ by Server Certificate Name validation."
      operationId: getMsgVpnBridgeTlsTrustedCommonName
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tlsTrustedCommonName
        in: path
        description: The expected trusted common name of the remote certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Trusted Common Name object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/certMatchingRules:
    get:
      tags:
      - all
      - msgVpn
      - certMatchingRule
      summary: Get a list of Certificate Matching Rule objects.
      description: |-
        Get a list of Certificate Matching Rule objects.

        A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        ruleName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.27.
      operationId: getMsgVpnCertMatchingRules
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Certificate Matching Rule objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnCertMatchingRulesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/certMatchingRules/{ruleName}:
    get:
      tags:
      - all
      - msgVpn
      - certMatchingRule
      summary: Get a Certificate Matching Rule object.
      description: |-
        Get a Certificate Matching Rule object.

        A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        ruleName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.27.
      operationId: getMsgVpnCertMatchingRule
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleName
        in: path
        description: The name of the rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Certificate Matching Rule object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnCertMatchingRuleResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/certMatchingRules/{ruleName}/attributeFilters:
    get:
      tags:
      - all
      - msgVpn
      - certMatchingRule
      summary: Get a list of Certificate Matching Rule Attribute Filter objects.
      description: |-
        Get a list of Certificate Matching Rule Attribute Filter objects.

        A Cert Matching Rule Attribute Filter compares a username attribute to a string.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        filterName|x|
        msgVpnName|x|
        ruleName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.28.
      operationId: getMsgVpnCertMatchingRuleAttributeFilters
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleName
        in: path
        description: The name of the rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Certificate Matching Rule Attribute Filter objects'\
            \ attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnCertMatchingRuleAttributeFiltersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/certMatchingRules/{ruleName}/attributeFilters/{filterName}:
    get:
      tags:
      - all
      - msgVpn
      - certMatchingRule
      summary: Get a Certificate Matching Rule Attribute Filter object.
      description: |-
        Get a Certificate Matching Rule Attribute Filter object.

        A Cert Matching Rule Attribute Filter compares a username attribute to a string.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        filterName|x|
        msgVpnName|x|
        ruleName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.28.
      operationId: getMsgVpnCertMatchingRuleAttributeFilter
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleName
        in: path
        description: The name of the rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filterName
        in: path
        description: The name of the filter.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Certificate Matching Rule Attribute Filter object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnCertMatchingRuleAttributeFilterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/certMatchingRules/{ruleName}/conditions:
    get:
      tags:
      - all
      - msgVpn
      - certMatchingRule
      summary: Get a list of Certificate Matching Rule Condition objects.
      description: |-
        Get a list of Certificate Matching Rule Condition objects.

        A Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        ruleName|x|
        source|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.27.
      operationId: getMsgVpnCertMatchingRuleConditions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleName
        in: path
        description: The name of the rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Certificate Matching Rule Condition objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnCertMatchingRuleConditionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/certMatchingRules/{ruleName}/conditions/{source}:
    get:
      tags:
      - all
      - msgVpn
      - certMatchingRule
      summary: Get a Certificate Matching Rule Condition object.
      description: |-
        Get a Certificate Matching Rule Condition object.

        A Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        ruleName|x|
        source|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.27.
      operationId: getMsgVpnCertMatchingRuleCondition
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleName
        in: path
        description: The name of the rule.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: source
        in: path
        description: Certificate field to be compared with the Attribute.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Certificate Matching Rule Condition object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnCertMatchingRuleConditionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clientProfiles:
    get:
      tags:
      - all
      - msgVpn
      - clientProfile
      summary: Get a list of Client Profile objects.
      description: |-
        Get a list of Client Profile objects.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        allowCutThroughForwardingEnabled||x
        apiQueueManagementCopyFromOnCreateName||x
        apiTopicEndpointManagementCopyFromOnCreateName||x
        clientProfileName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnClientProfiles
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Profile objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfilesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}:
    get:
      tags:
      - all
      - msgVpn
      - clientProfile
      summary: Get a Client Profile object.
      description: |-
        Get a Client Profile object.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        allowCutThroughForwardingEnabled||x
        apiQueueManagementCopyFromOnCreateName||x
        apiTopicEndpointManagementCopyFromOnCreateName||x
        clientProfileName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnClientProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientProfileName
        in: path
        description: The name of the Client Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Profile object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clientUsernames:
    get:
      tags:
      - all
      - msgVpn
      - clientUsername
      summary: Get a list of Client Username objects.
      description: |-
        Get a list of Client Username objects.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientUsername|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnClientUsernames
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Username objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}:
    get:
      tags:
      - all
      - msgVpn
      - clientUsername
      summary: Get a Client Username object.
      description: |-
        Get a Client Username object.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientUsername|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnClientUsername
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientUsername
        in: path
        description: The name of the Client Username.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Username object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}/attributes:
    get:
      tags:
      - all
      - msgVpn
      - clientUsername
      summary: Get a list of Client Username Attribute objects.
      description: "Get a list of Client Username Attribute objects.\n\nA ClientUsername\
        \ Attribute is a key+value pair that can be used to locate a client username,\
        \ for example when using client certificate mapping.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nattributeName|x|\nattributeValue|x|\nclientUsername|x|\n\
        msgVpnName|x|\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-only\" is required to perform this operation.\n\nThis has\
        \ been available since 2.27."
      operationId: getMsgVpnClientUsernameAttributes
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientUsername
        in: path
        description: The name of the Client Username.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Username Attribute objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameAttributesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}/attributes/{attributeName},{attributeValue}:
    get:
      tags:
      - all
      - msgVpn
      - clientUsername
      summary: Get a Client Username Attribute object.
      description: "Get a Client Username Attribute object.\n\nA ClientUsername Attribute\
        \ is a key+value pair that can be used to locate a client username, for example\
        \ when using client certificate mapping.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nattributeName|x|\nattributeValue|x|\nclientUsername|x|\n\
        msgVpnName|x|\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-only\" is required to perform this operation.\n\nThis has\
        \ been available since 2.27."
      operationId: getMsgVpnClientUsernameAttribute
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientUsername
        in: path
        description: The name of the Client Username.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attributeName
        in: path
        description: The name of the Attribute.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attributeValue
        in: path
        description: The value of the Attribute.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Username Attribute object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameAttributeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a list of Client objects.
      description: |-
        Get a list of Client objects.

        Applications or devices that connect to message brokers to send and/or receive messages are represented as Clients.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClients
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a Client object.
      description: |-
        Get a Client object.

        Applications or devices that connect to message brokers to send and/or receive messages are represented as Clients.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClient
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}/connections:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a list of Client Connection objects.
      description: |-
        Get a list of Client Connection objects.

        A Client Connection represents the Transmission Control Protocol (TCP) connection the Client uses to communicate with the message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientAddress|x|
        clientName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientConnections
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Connection objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientConnectionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}/connections/{clientAddress}:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a Client Connection object.
      description: |-
        Get a Client Connection object.

        A Client Connection represents the Transmission Control Protocol (TCP) connection the Client uses to communicate with the message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientAddress|x|
        clientName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientConnection
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientAddress
        in: path
        description: The IP address and TCP port on the Client side of the Client
          Connection.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Connection object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientConnectionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}/rxFlows:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a list of Client Receive Flow objects.
      description: |-
        Get a list of Client Receive Flow objects.

        Client Receive Flows are used by clients to publish Guaranteed messages to a message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        flowId|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientRxFlows
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Receive Flow objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientRxFlowsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}/rxFlows/{flowId}:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a Client Receive Flow object.
      description: |-
        Get a Client Receive Flow object.

        Client Receive Flows are used by clients to publish Guaranteed messages to a message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        flowId|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientRxFlow
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: flowId
        in: path
        description: The identifier (ID) of the flow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Receive Flow object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientRxFlowResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}/subscriptions:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a list of Client Subscription objects.
      description: |-
        Get a list of Client Subscription objects.

        Once clients are authenticated on the message broker they can add and remove Client Subscriptions for Direct messages published to the Message VPN to which they have connected.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        msgVpnName|x|
        subscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientSubscriptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Subscription objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientSubscriptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}/subscriptions/{subscriptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a Client Subscription object.
      description: |-
        Get a Client Subscription object.

        Once clients are authenticated on the message broker they can add and remove Client Subscriptions for Direct messages published to the Message VPN to which they have connected.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        msgVpnName|x|
        subscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionTopic
        in: path
        description: The topic of the Subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Subscription object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}/transactedSessions:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a list of Client Transacted Session objects.
      description: "Get a list of Client Transacted Session objects.\n\nTransacted\
        \ Sessions enable clients to group multiple message send and/or receive operations\
        \ together in single, atomic units known as local transactions.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nclientName|x|\nmsgVpnName|x|\nsessionName|x|\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.12."
      operationId: getMsgVpnClientTransactedSessions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Transacted Session objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientTransactedSessionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}/transactedSessions/{sessionName}:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a Client Transacted Session object.
      description: "Get a Client Transacted Session object.\n\nTransacted Sessions\
        \ enable clients to group multiple message send and/or receive operations\
        \ together in single, atomic units known as local transactions.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nclientName|x|\nmsgVpnName|x|\nsessionName|x|\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.12."
      operationId: getMsgVpnClientTransactedSession
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sessionName
        in: path
        description: The name of the Transacted Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Transacted Session object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientTransactedSessionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}/txFlows:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a list of Client Transmit Flow objects.
      description: |-
        Get a list of Client Transmit Flow objects.

        Client Transmit Flows are used by clients to consume Guaranteed messages from a message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        flowId|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientTxFlows
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Transmit Flow objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientTxFlowsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clients/{clientName}/txFlows/{flowId}:
    get:
      tags:
      - all
      - msgVpn
      - client
      summary: Get a Client Transmit Flow object.
      description: |-
        Get a Client Transmit Flow object.

        Client Transmit Flows are used by clients to consume Guaranteed messages from a message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        flowId|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientTxFlow
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientName
        in: path
        description: The name of the Client.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: flowId
        in: path
        description: The identifier (ID) of the flow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Transmit Flow object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientTxFlowResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/configSyncRemoteNodes:
    get:
      tags:
      - all
      - msgVpn
      - configSyncRemoteNode
      summary: Get a list of Config Sync Remote Node objects.
      description: |-
        Get a list of Config Sync Remote Node objects.

        A Config Sync Remote Node object contains information about the status of the table for this Message VPN with respect to a remote node.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        lastMsgRxTime||x
        msgVpnName|x|x
        remoteNodeName|x|x
        role||x
        stale||x
        state||x
        timeInState||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.22. This attribute has been deprecated.
      operationId: getMsgVpnConfigSyncRemoteNodes
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Config Sync Remote Node objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/configSyncRemoteNodes/{remoteNodeName}:
    get:
      tags:
      - all
      - msgVpn
      - configSyncRemoteNode
      summary: Get a Config Sync Remote Node object.
      description: |-
        Get a Config Sync Remote Node object.

        A Config Sync Remote Node object contains information about the status of the table for this Message VPN with respect to a remote node.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        lastMsgRxTime||x
        msgVpnName|x|x
        remoteNodeName|x|x
        role||x
        stale||x
        state||x
        timeInState||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.22. This attribute has been deprecated.
      operationId: getMsgVpnConfigSyncRemoteNode
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the Config Sync Remote Node.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Config Sync Remote Node object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Distributed Cache objects.
      description: "Get a list of Distributed Cache objects.\n\nA Distributed Cache\
        \ is a collection of one or more Cache Clusters that belong to the same Message\
        \ VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe\
        \ to a different set of topics. This effectively divides up the configured\
        \ topic space, to provide scaling to very large topic spaces or very high\
        \ cached message throughput.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\n\
        cacheName|x|\nmsgVpnName|x|\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"vpn/read-only\" is required to perform this operation.\n\
        \nThis has been available since 2.11."
      operationId: getMsgVpnDistributedCaches
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Distributed Cache objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCachesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Distributed Cache object.
      description: "Get a Distributed Cache object.\n\nA Distributed Cache is a collection\
        \ of one or more Cache Clusters that belong to the same Message VPN. Each\
        \ Cache Cluster in a Distributed Cache is configured to subscribe to a different\
        \ set of topics. This effectively divides up the configured topic space, to\
        \ provide scaling to very large topic spaces or very high cached message throughput.\n\
        \n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncacheName|x|\nmsgVpnName|x|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnDistributedCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Distributed Cache object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Cache Cluster objects.
      description: "Get a list of Cache Cluster objects.\n\nA Cache Cluster is a collection\
        \ of one or more Cache Instances that subscribe to exactly the same topics.\
        \ Cache Instances are grouped together in a Cache Cluster for the purpose\
        \ of fault tolerance and load balancing. As published messages are received,\
        \ the message broker message bus sends these live data messages to the Cache\
        \ Instances in the Cache Cluster. This enables client cache requests to be\
        \ served by any of Cache Instances in the Cache Cluster.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ncacheName|x|\nclusterName|x|\nmsgVpnName|x|\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnDistributedCacheClusters
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Cache Cluster objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClustersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Cache Cluster object.
      description: "Get a Cache Cluster object.\n\nA Cache Cluster is a collection\
        \ of one or more Cache Instances that subscribe to exactly the same topics.\
        \ Cache Instances are grouped together in a Cache Cluster for the purpose\
        \ of fault tolerance and load balancing. As published messages are received,\
        \ the message broker message bus sends these live data messages to the Cache\
        \ Instances in the Cache Cluster. This enables client cache requests to be\
        \ served by any of Cache Instances in the Cache Cluster.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ncacheName|x|\nclusterName|x|\nmsgVpnName|x|\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnDistributedCacheCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Cache Cluster object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Home Cache Cluster objects.
      description: |-
        Get a list of Home Cache Cluster objects.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusters
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Home Cache Cluster objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Home Cache Cluster object.
      description: |-
        Get a Home Cache Cluster object.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: homeClusterName
        in: path
        description: The name of the remote Home Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Home Cache Cluster object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes
  : get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Topic Prefix objects.
      description: |-
        Get a list of Topic Prefix objects.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        msgVpnName|x|
        topicPrefix|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixes
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: homeClusterName
        in: path
        description: The name of the remote Home Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic Prefix objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes/{topicPrefix}
  : get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Topic Prefix object.
      description: |-
        Get a Topic Prefix object.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        msgVpnName|x|
        topicPrefix|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: homeClusterName
        in: path
        description: The name of the remote Home Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicPrefix
        in: path
        description: A topic prefix for global topics available from the remote Home
          Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic Prefix object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Cache Instance objects.
      description: |-
        Get a list of Cache Instance objects.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        counter.msgCount||x
        counter.msgPeakCount||x
        counter.requestQueueDepthCount||x
        counter.requestQueueDepthPeakCount||x
        counter.topicCount||x
        counter.topicPeakCount||x
        instanceName|x|
        msgVpnName|x|
        rate.averageDataRxBytePeakRate||x
        rate.averageDataRxByteRate||x
        rate.averageDataRxMsgPeakRate||x
        rate.averageDataRxMsgRate||x
        rate.averageDataTxMsgPeakRate||x
        rate.averageDataTxMsgRate||x
        rate.averageRequestRxPeakRate||x
        rate.averageRequestRxRate||x
        rate.dataRxBytePeakRate||x
        rate.dataRxByteRate||x
        rate.dataRxMsgPeakRate||x
        rate.dataRxMsgRate||x
        rate.dataTxMsgPeakRate||x
        rate.dataTxMsgRate||x
        rate.requestRxPeakRate||x
        rate.requestRxRate||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstances
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Cache Instance objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstancesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Cache Instance object.
      description: |-
        Get a Cache Instance object.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        counter.msgCount||x
        counter.msgPeakCount||x
        counter.requestQueueDepthCount||x
        counter.requestQueueDepthPeakCount||x
        counter.topicCount||x
        counter.topicPeakCount||x
        instanceName|x|
        msgVpnName|x|
        rate.averageDataRxBytePeakRate||x
        rate.averageDataRxByteRate||x
        rate.averageDataRxMsgPeakRate||x
        rate.averageDataRxMsgRate||x
        rate.averageDataTxMsgPeakRate||x
        rate.averageDataTxMsgRate||x
        rate.averageRequestRxPeakRate||x
        rate.averageRequestRxRate||x
        rate.dataRxBytePeakRate||x
        rate.dataRxByteRate||x
        rate.dataRxMsgPeakRate||x
        rate.dataRxMsgRate||x
        rate.dataTxMsgPeakRate||x
        rate.dataTxMsgRate||x
        rate.requestRxPeakRate||x
        rate.requestRxRate||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstance
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: instanceName
        in: path
        description: The name of the Cache Instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Cache Instance object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteGlobalCachingHomeClusters
  : get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Remote Home Cache Cluster objects.
      description: |-
        Get a list of Remote Home Cache Cluster objects.

        A Remote Home Cache Cluster is a Home Cache Cluster that the Cache Instance is communicating with in the context of the Global Caching feature.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        instanceName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusters
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: instanceName
        in: path
        description: The name of the Cache Instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Remote Home Cache Cluster objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClustersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteGlobalCachingHomeClusters/{homeClusterName}
  : get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Remote Home Cache Cluster object.
      description: |-
        Get a Remote Home Cache Cluster object.

        A Remote Home Cache Cluster is a Home Cache Cluster that the Cache Instance is communicating with in the context of the Global Caching feature.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        instanceName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: instanceName
        in: path
        description: The name of the Cache Instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: homeClusterName
        in: path
        description: The name of the remote Home Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Remote Home Cache Cluster object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteTopics:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Remote Topic objects.
      description: |-
        Get a list of Remote Topic objects.

        A Remote Topic is a topic for which the Cache Instance has cached messages.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        instanceName|x|
        msgVpnName|x|
        topic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteTopics
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: instanceName
        in: path
        description: The name of the Cache Instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Remote Topic objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteTopics/{topic}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Remote Topic object.
      description: |-
        Get a Remote Topic object.

        A Remote Topic is a topic for which the Cache Instance has cached messages.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        instanceName|x|
        msgVpnName|x|
        topic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: instanceName
        in: path
        description: The name of the Cache Instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topic
        in: path
        description: The value of the remote Topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Remote Topic object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Topic objects.
      description: |-
        Get a list of Topic objects.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        msgVpnName|x|
        topic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterTopics
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics/{topic}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Topic object.
      description: |-
        Get a Topic object.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        msgVpnName|x|
        topic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topic
        in: path
        description: The value of the Topic in the form a/b/c.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/dmrBridges:
    get:
      tags:
      - all
      - msgVpn
      - dmrBridge
      summary: Get a list of DMR Bridge objects.
      description: "Get a list of DMR Bridge objects.\n\nA DMR Bridge is required\
        \ to establish a data channel over a corresponding external link to the remote\
        \ node for a given Message VPN. Each DMR Bridge identifies which external\
        \ link the Message VPN should use, and what the name of the equivalent Message\
        \ VPN at the remote node is.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\n\
        msgVpnName|x|\nremoteNodeName|x|\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"vpn/read-only\" is required to perform this operation.\n\
        \nThis has been available since 2.11."
      operationId: getMsgVpnDmrBridges
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of DMR Bridge objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/dmrBridges/{remoteNodeName}:
    get:
      tags:
      - all
      - msgVpn
      - dmrBridge
      summary: Get a DMR Bridge object.
      description: "Get a DMR Bridge object.\n\nA DMR Bridge is required to establish\
        \ a data channel over a corresponding external link to the remote node for\
        \ a given Message VPN. Each DMR Bridge identifies which external link the\
        \ Message VPN should use, and what the name of the equivalent Message VPN\
        \ at the remote node is.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\n\
        msgVpnName|x|\nremoteNodeName|x|\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"vpn/read-only\" is required to perform this operation.\n\
        \nThis has been available since 2.11."
      operationId: getMsgVpnDmrBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the DMR Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The DMR Bridge object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/jndiConnectionFactories:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a list of JNDI Connection Factory objects.
      description: |-
        Get a list of JNDI Connection Factory objects.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        connectionFactoryName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiConnectionFactories
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of JNDI Connection Factory objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoriesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a JNDI Connection Factory object.
      description: |-
        Get a JNDI Connection Factory object.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        connectionFactoryName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiConnectionFactory
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connectionFactoryName
        in: path
        description: The name of the JMS Connection Factory.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The JNDI Connection Factory object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/jndiQueues:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a list of JNDI Queue objects.
      description: |-
        Get a list of JNDI Queue objects.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiQueues
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of JNDI Queue objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueuesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/jndiQueues/{queueName}:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a JNDI Queue object.
      description: |-
        Get a JNDI Queue object.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The JNDI name of the JMS Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The JNDI Queue object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/jndiTopics:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a list of JNDI Topic objects.
      description: |-
        Get a list of JNDI Topic objects.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiTopics
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of JNDI Topic objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/jndiTopics/{topicName}:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a JNDI Topic object.
      description: |-
        Get a JNDI Topic object.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicName
        in: path
        description: The JNDI name of the JMS Topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The JNDI Topic object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/mqttRetainCaches:
    get:
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      summary: Get a list of MQTT Retain Cache objects.
      description: |-
        Get a list of MQTT Retain Cache objects.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttRetainCaches
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of MQTT Retain Cache objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCachesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/mqttRetainCaches/{cacheName}:
    get:
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      summary: Get an MQTT Retain Cache object.
      description: |-
        Get an MQTT Retain Cache object.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttRetainCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the MQTT Retain Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The MQTT Retain Cache object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCacheResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/mqttSessions:
    get:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Get a list of MQTT Session objects.
      description: "Get a list of MQTT Session objects.\n\nAn MQTT Session object\
        \ is a virtual representation of an MQTT client connection. An MQTT session\
        \ holds the state of an MQTT client (that is, it is used to contain a client's\
        \ QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).\n\
        \n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\ncounter.mqttConnackErrorTxCount||x\n\
        counter.mqttConnackTxCount||x\ncounter.mqttConnectRxCount||x\ncounter.mqttDisconnectRxCount||x\n\
        counter.mqttPubcompTxCount||x\ncounter.mqttPublishQos0RxCount||x\ncounter.mqttPublishQos0TxCount||x\n\
        counter.mqttPublishQos1RxCount||x\ncounter.mqttPublishQos1TxCount||x\ncounter.mqttPublishQos2RxCount||x\n\
        counter.mqttPubrecTxCount||x\ncounter.mqttPubrelRxCount||x\nmqttSessionClientId|x|\n\
        mqttSessionVirtualRouter|x|\nmsgVpnName|x|\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-only\" is required to perform\
        \ this operation.\n\nThis has been available since 2.11."
      operationId: getMsgVpnMqttSessions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of MQTT Session objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}:
    get:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Get an MQTT Session object.
      description: "Get an MQTT Session object.\n\nAn MQTT Session object is a virtual\
        \ representation of an MQTT client connection. An MQTT session holds the state\
        \ of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS\
        \ 1 subscription sets and any undelivered QoS 1 messages).\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\ncounter.mqttConnackErrorTxCount||x\ncounter.mqttConnackTxCount||x\n\
        counter.mqttConnectRxCount||x\ncounter.mqttDisconnectRxCount||x\ncounter.mqttPubcompTxCount||x\n\
        counter.mqttPublishQos0RxCount||x\ncounter.mqttPublishQos0TxCount||x\ncounter.mqttPublishQos1RxCount||x\n\
        counter.mqttPublishQos1TxCount||x\ncounter.mqttPublishQos2RxCount||x\ncounter.mqttPubrecTxCount||x\n\
        counter.mqttPubrelRxCount||x\nmqttSessionClientId|x|\nmqttSessionVirtualRouter|x|\n\
        msgVpnName|x|\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-only\" is required to perform this operation.\n\nThis has\
        \ been available since 2.11."
      operationId: getMsgVpnMqttSession
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The MQTT Session object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions:
    get:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Get a list of Subscription objects.
      description: "Get a list of Subscription objects.\n\nAn MQTT session contains\
        \ a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription\
        \ defaults to QoS 0.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\n\
        mqttSessionClientId|x|\nmqttSessionVirtualRouter|x|\nmsgVpnName|x|\nsubscriptionTopic|x|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnMqttSessionSubscriptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Subscription objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Get a Subscription object.
      description: "Get a Subscription object.\n\nAn MQTT session contains a client's\
        \ QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults\
        \ to QoS 0.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nmqttSessionClientId|x|\n\
        mqttSessionVirtualRouter|x|\nmsgVpnName|x|\nsubscriptionTopic|x|\n\n\n\nA\
        \ SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnMqttSessionSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionTopic
        in: path
        description: The MQTT subscription topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Subscription object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queueTemplates:
    get:
      tags:
      - all
      - msgVpn
      - queueTemplate
      summary: Get a list of Queue Template objects.
      description: |-
        Get a list of Queue Template objects.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueTemplateName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnQueueTemplates
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue Template objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplatesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queueTemplates/{queueTemplateName}:
    get:
      tags:
      - all
      - msgVpn
      - queueTemplate
      summary: Get a Queue Template object.
      description: |-
        Get a Queue Template object.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueTemplateName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnQueueTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueTemplateName
        in: path
        description: The name of the Queue Template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue Template object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplateResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queues:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a list of Queue objects.
      description: "Get a list of Queue objects.\n\nA Queue acts as both a destination\
        \ that clients can publish messages to, and as an endpoint that clients can\
        \ bind consumers to and consume messages from.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nmsgVpnName|x|\nqueueName|x|\nvirtualRouter||x\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.12."
      operationId: getMsgVpnQueues
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueuesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queues/{queueName}:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a Queue object.
      description: "Get a Queue object.\n\nA Queue acts as both a destination that\
        \ clients can publish messages to, and as an endpoint that clients can bind\
        \ consumers to and consume messages from.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nmsgVpnName|x|\nqueueName|x|\nvirtualRouter||x\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.12."
      operationId: getMsgVpnQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queues/{queueName}/msgs:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a list of Queue Message objects.
      description: |-
        Get a list of Queue Message objects.

        A Queue Message is a packet of information sent from producers to consumers using the Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueMsgs
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue Message objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueMsgsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queues/{queueName}/msgs/{msgId}:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a Queue Message object.
      description: |-
        Get a Queue Message object.

        A Queue Message is a packet of information sent from producers to consumers using the Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueMsg
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: msgId
        in: path
        description: The identifier (ID) of the Message.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue Message object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueMsgResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queues/{queueName}/priorities:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a list of Queue Priority objects.
      description: |-
        Get a list of Queue Priority objects.

        Queues can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        priority|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueuePriorities
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue Priority objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueuePrioritiesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queues/{queueName}/priorities/{priority}:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a Queue Priority object.
      description: |-
        Get a Queue Priority object.

        Queues can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        priority|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueuePriority
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: priority
        in: path
        description: "The level of the Priority, from 9 (highest) to 0 (lowest)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue Priority object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueuePriorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a list of Queue Subscription objects.
      description: |-
        Get a list of Queue Subscription objects.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueName|x|
        subscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueSubscriptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue Subscription objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueSubscriptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions/{subscriptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a Queue Subscription object.
      description: |-
        Get a Queue Subscription object.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueName|x|
        subscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionTopic
        in: path
        description: The topic of the Subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue Subscription object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queues/{queueName}/txFlows:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a list of Queue Transmit Flow objects.
      description: |-
        Get a list of Queue Transmit Flow objects.

        Queue Transmit Flows are used by clients to consume Guaranteed messages from a Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        flowId|x|
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueTxFlows
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue Transmit Flow objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTxFlowsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/queues/{queueName}/txFlows/{flowId}:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a Queue Transmit Flow object.
      description: |-
        Get a Queue Transmit Flow object.

        Queue Transmit Flows are used by clients to consume Guaranteed messages from a Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        flowId|x|
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueTxFlow
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: flowId
        in: path
        description: The identifier (ID) of the Flow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue Transmit Flow object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTxFlowResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/replayLogs:
    get:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Get a list of Replay Log objects.
      description: "Get a list of Replay Log objects.\n\nWhen the Message Replay feature\
        \ is enabled, message brokers store persistent messages in a Replay Log. These\
        \ messages are kept until the log is full, after which the oldest messages\
        \ are removed to free up space for new messages.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nmsgVpnName|x|\nreplayLogName|x|\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-only\" is required to perform\
        \ this operation.\n\nThis has been available since 2.11."
      operationId: getMsgVpnReplayLogs
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Replay Log objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}:
    get:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Get a Replay Log object.
      description: "Get a Replay Log object.\n\nWhen the Message Replay feature is\
        \ enabled, message brokers store persistent messages in a Replay Log. These\
        \ messages are kept until the log is full, after which the oldest messages\
        \ are removed to free up space for new messages.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nmsgVpnName|x|\nreplayLogName|x|\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-only\" is required to perform\
        \ this operation.\n\nThis has been available since 2.11."
      operationId: getMsgVpnReplayLog
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replayLogName
        in: path
        description: The name of the Replay Log.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Replay Log object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}/msgs:
    get:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Get a list of Message objects.
      description: |-
        Get a list of Message objects.

        A Message is a packet of information sent from producers to consumers. Messages are the central units of information that clients exchange using the message broker and which are cached in the Replay Log.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        replayLogName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnReplayLogMsgs
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replayLogName
        in: path
        description: The name of the Replay Log.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Message objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogMsgsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}/msgs/{msgId}:
    get:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Get a Message object.
      description: |-
        Get a Message object.

        A Message is a packet of information sent from producers to consumers. Messages are the central units of information that clients exchange using the message broker and which are cached in the Replay Log.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        replayLogName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnReplayLogMsg
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replayLogName
        in: path
        description: The name of the Replay Log.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: msgId
        in: path
        description: The identifier (ID) of the message.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Message object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogMsgResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}/topicFilterSubscriptions:
    get:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Get a list of Topic Filter Subscription objects.
      description: |-
        Get a list of Topic Filter Subscription objects.

        One or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        replayLogName|x|
        topicFilterSubscription|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.27.
      operationId: getMsgVpnReplayLogTopicFilterSubscriptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replayLogName
        in: path
        description: The name of the Replay Log.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic Filter Subscription objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogTopicFilterSubscriptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}/topicFilterSubscriptions/{topicFilterSubscription}:
    get:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Get a Topic Filter Subscription object.
      description: |-
        Get a Topic Filter Subscription object.

        One or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        replayLogName|x|
        topicFilterSubscription|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.27.
      operationId: getMsgVpnReplayLogTopicFilterSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replayLogName
        in: path
        description: The name of the Replay Log.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicFilterSubscription
        in: path
        description: The topic of the Subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic Filter Subscription object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogTopicFilterSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/replicatedTopics:
    get:
      tags:
      - all
      - msgVpn
      - replicatedTopic
      summary: Get a list of Replicated Topic objects.
      description: "Get a list of Replicated Topic objects.\n\nTo indicate which messages\
        \ should be replicated between the active and standby site, a Replicated Topic\
        \ subscription must be configured on a Message VPN. If a published message\
        \ matches both a replicated topic and an endpoint on the active site, then\
        \ the message is replicated to the standby site.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nmsgVpnName|x|\nreplicatedTopic|x|\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-only\" is required to perform\
        \ this operation.\n\nThis has been available since 2.12."
      operationId: getMsgVpnReplicatedTopics
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Replicated Topic objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}:
    get:
      tags:
      - all
      - msgVpn
      - replicatedTopic
      summary: Get a Replicated Topic object.
      description: "Get a Replicated Topic object.\n\nTo indicate which messages should\
        \ be replicated between the active and standby site, a Replicated Topic subscription\
        \ must be configured on a Message VPN. If a published message matches both\
        \ a replicated topic and an endpoint on the active site, then the message\
        \ is replicated to the standby site.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nmsgVpnName|x|\nreplicatedTopic|x|\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-only\" is required to perform\
        \ this operation.\n\nThis has been available since 2.12."
      operationId: getMsgVpnReplicatedTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replicatedTopic
        in: path
        description: The topic for applying replication. Published messages matching
          this topic will be replicated to the standby site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Replicated Topic object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of REST Delivery Point objects.
      description: |-
        Get a list of REST Delivery Point objects.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnRestDeliveryPoints
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of REST Delivery Point objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a REST Delivery Point object.
      description: |-
        Get a REST Delivery Point object.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnRestDeliveryPoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The REST Delivery Point object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of Queue Binding objects.
      description: "Get a list of Queue Binding objects.\n\nA Queue Binding for a\
        \ REST Delivery Point attracts messages to be delivered to REST consumers.\
        \ If the queue does not exist it can be created subsequently, and once the\
        \ queue is operational the broker performs the queue binding. Removing the\
        \ queue binding does not delete the queue itself. Similarly, removing the\
        \ queue does not remove the queue binding, which fails until the queue is\
        \ recreated or the queue binding is deleted.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nmsgVpnName|x|\nqueueBindingName|x|\nrestDeliveryPointName|x|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnRestDeliveryPointQueueBindings
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue Binding objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a Queue Binding object.
      description: "Get a Queue Binding object.\n\nA Queue Binding for a REST Delivery\
        \ Point attracts messages to be delivered to REST consumers. If the queue\
        \ does not exist it can be created subsequently, and once the queue is operational\
        \ the broker performs the queue binding. Removing the queue binding does not\
        \ delete the queue itself. Similarly, removing the queue does not remove the\
        \ queue binding, which fails until the queue is recreated or the queue binding\
        \ is deleted.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\nmsgVpnName|x|\n\
        queueBindingName|x|\nrestDeliveryPointName|x|\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-only\" is required to perform\
        \ this operation.\n\nThis has been available since 2.11."
      operationId: getMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueBindingName
        in: path
        description: The name of a queue in the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue Binding object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}/protectedRequestHeaders:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of Protected Request Header objects.
      description: "Get a list of Protected Request Header objects.\n\nA protected\
        \ request header to be added to the HTTP request. Unlike a non-protected request\
        \ header, the header value cannot be displayed after it is set.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nheaderName|x|\nmsgVpnName|x|\nqueueBindingName|x|\nrestDeliveryPointName|x|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.30."
      operationId: getMsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaders
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueBindingName
        in: path
        description: The name of a queue in the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Protected Request Header objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeadersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}/protectedRequestHeaders/{headerName}
  : get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a Protected Request Header object.
      description: "Get a Protected Request Header object.\n\nA protected request\
        \ header to be added to the HTTP request. Unlike a non-protected request header,\
        \ the header value cannot be displayed after it is set.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nheaderName|x|\nmsgVpnName|x|\nqueueBindingName|x|\nrestDeliveryPointName|x|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.30."
      operationId: getMsgVpnRestDeliveryPointQueueBindingProtectedRequestHeader
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueBindingName
        in: path
        description: The name of a queue in the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: headerName
        in: path
        description: The name of the protected HTTP request header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Protected Request Header object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}/requestHeaders:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of Request Header objects.
      description: |-
        Get a list of Request Header objects.

        A request header to be added to the HTTP request.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        headerName|x|
        msgVpnName|x|
        queueBindingName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.23.
      operationId: getMsgVpnRestDeliveryPointQueueBindingRequestHeaders
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueBindingName
        in: path
        description: The name of a queue in the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Request Header objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingRequestHeadersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}/requestHeaders/{headerName}:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a Request Header object.
      description: |-
        Get a Request Header object.

        A request header to be added to the HTTP request.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        headerName|x|
        msgVpnName|x|
        queueBindingName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.23.
      operationId: getMsgVpnRestDeliveryPointQueueBindingRequestHeader
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueBindingName
        in: path
        description: The name of a queue in the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: headerName
        in: path
        description: The name of the HTTP request header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Request Header object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of REST Consumer objects.
      description: |-
        Get a list of REST Consumer objects.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        counter.httpRequestConnectionCloseTxMsgCount||x
        counter.httpRequestOutstandingTxMsgCount||x
        counter.httpRequestTimedOutTxMsgCount||x
        counter.httpRequestTxByteCount||x
        counter.httpRequestTxMsgCount||x
        counter.httpResponseErrorRxMsgCount||x
        counter.httpResponseRxByteCount||x
        counter.httpResponseRxMsgCount||x
        counter.httpResponseSuccessRxMsgCount||x
        msgVpnName|x|
        restConsumerName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnRestDeliveryPointRestConsumers
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of REST Consumer objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a REST Consumer object.
      description: |-
        Get a REST Consumer object.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        counter.httpRequestConnectionCloseTxMsgCount||x
        counter.httpRequestOutstandingTxMsgCount||x
        counter.httpRequestTimedOutTxMsgCount||x
        counter.httpRequestTxByteCount||x
        counter.httpRequestTxMsgCount||x
        counter.httpResponseErrorRxMsgCount||x
        counter.httpResponseRxByteCount||x
        counter.httpResponseRxMsgCount||x
        counter.httpResponseSuccessRxMsgCount||x
        msgVpnName|x|
        restConsumerName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The REST Consumer object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/oauthJwtClaims:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of Claim objects.
      description: |-
        Get a list of Claim objects.

        A Claim is added to the JWT sent to the OAuth token request endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthJwtClaimName|x|
        restConsumerName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaims
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Claim objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/oauthJwtClaims/{oauthJwtClaimName}
  : get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a Claim object.
      description: |-
        Get a Claim object.

        A Claim is added to the JWT sent to the OAuth token request endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthJwtClaimName|x|
        restConsumerName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthJwtClaimName
        in: path
        description: "The name of the additional claim. Cannot be \"exp\", \"iat\"\
          , or \"jti\"."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Claim object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of Trusted Common Name objects.
      description: |-
        Get a list of Trusted Common Name objects.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|x
        restConsumerName|x|x
        restDeliveryPointName|x|x
        tlsTrustedCommonName|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNames
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Trusted Common Name objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames/{tlsTrustedCommonName}
  : get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a Trusted Common Name object.
      description: |-
        Get a Trusted Common Name object.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|x
        restConsumerName|x|x
        restDeliveryPointName|x|x
        tlsTrustedCommonName|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tlsTrustedCommonName
        in: path
        description: The expected trusted common name of the remote certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Trusted Common Name object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/telemetryProfiles:
    get:
      tags:
      - all
      - msgVpn
      - telemetryProfile
      summary: Get a list of Telemetry Profile objects.
      description: |-
        Get a list of Telemetry Profile objects.

        Using the Telemetry Profile allows trace spans to be generated as messages are processed by the broker. The generated spans are stored persistently on the broker and may be consumed by the Solace receiver component of an OpenTelemetry Collector.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        telemetryProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.31.
      operationId: getMsgVpnTelemetryProfiles
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Telemetry Profile objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTelemetryProfilesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}:
    get:
      tags:
      - all
      - msgVpn
      - telemetryProfile
      summary: Get a Telemetry Profile object.
      description: |-
        Get a Telemetry Profile object.

        Using the Telemetry Profile allows trace spans to be generated as messages are processed by the broker. The generated spans are stored persistently on the broker and may be consumed by the Solace receiver component of an OpenTelemetry Collector.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        telemetryProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.31.
      operationId: getMsgVpnTelemetryProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: telemetryProfileName
        in: path
        description: The name of the Telemetry Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Telemetry Profile object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTelemetryProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/receiverAclConnectExceptions:
    get:
      tags:
      - all
      - msgVpn
      - telemetryProfile
      summary: Get a list of Receiver ACL Connect Exception objects.
      description: |-
        Get a list of Receiver ACL Connect Exception objects.

        A Receiver ACL Connect Exception is an exception to the default action to take when a receiver connects to the broker. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        receiverAclConnectExceptionAddress|x|
        telemetryProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.31.
      operationId: getMsgVpnTelemetryProfileReceiverAclConnectExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: telemetryProfileName
        in: path
        description: The name of the Telemetry Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Receiver ACL Connect Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTelemetryProfileReceiverAclConnectExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/receiverAclConnectExceptions/{receiverAclConnectExceptionAddress}
  : get:
      tags:
      - all
      - msgVpn
      - telemetryProfile
      summary: Get a Receiver ACL Connect Exception object.
      description: |-
        Get a Receiver ACL Connect Exception object.

        A Receiver ACL Connect Exception is an exception to the default action to take when a receiver connects to the broker. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        receiverAclConnectExceptionAddress|x|
        telemetryProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.31.
      operationId: getMsgVpnTelemetryProfileReceiverAclConnectException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: telemetryProfileName
        in: path
        description: The name of the Telemetry Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: receiverAclConnectExceptionAddress
        in: path
        description: The IP address/netmask of the receiver connect exception in CIDR
          form.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Receiver ACL Connect Exception object's attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTelemetryProfileReceiverAclConnectExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/traceFilters:
    get:
      tags:
      - all
      - msgVpn
      - telemetryProfile
      summary: Get a list of Trace Filter objects.
      description: "Get a list of Trace Filter objects.\n\nA Trace Filter controls\
        \ which messages received by the broker will be traced. If an incoming message\
        \ matches an enabled tracing filter's subscription, the message will be traced\
        \ as it passes through the broker.\n\n\nAttribute|Identifying|Deprecated\n\
        :---|:---:|:---:\nmsgVpnName|x|\ntelemetryProfileName|x|\ntraceFilterName|x|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.31."
      operationId: getMsgVpnTelemetryProfileTraceFilters
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: telemetryProfileName
        in: path
        description: The name of the Telemetry Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Trace Filter objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFiltersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/traceFilters/{traceFilterName}:
    get:
      tags:
      - all
      - msgVpn
      - telemetryProfile
      summary: Get a Trace Filter object.
      description: "Get a Trace Filter object.\n\nA Trace Filter controls which messages\
        \ received by the broker will be traced. If an incoming message matches an\
        \ enabled tracing filter's subscription, the message will be traced as it\
        \ passes through the broker.\n\n\nAttribute|Identifying|Deprecated\n:---|:---:|:---:\n\
        msgVpnName|x|\ntelemetryProfileName|x|\ntraceFilterName|x|\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"vpn/read-only\" is required\
        \ to perform this operation.\n\nThis has been available since 2.31."
      operationId: getMsgVpnTelemetryProfileTraceFilter
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: telemetryProfileName
        in: path
        description: The name of the Telemetry Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: traceFilterName
        in: path
        description: "A name used to identify the trace filter. Consider a name that\
          \ describes the subscriptions contained within the filter, such as the name\
          \ of the application and/or the scenario in which the trace filter might\
          \ be enabled, such as \"appNameDebug\"."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Trace Filter object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/traceFilters/{traceFilterName}/subscriptions:
    get:
      tags:
      - all
      - msgVpn
      - telemetryProfile
      summary: Get a list of Telemetry Trace Filter Subscription objects.
      description: |-
        Get a list of Telemetry Trace Filter Subscription objects.

        Trace filter subscriptions control which messages will be attracted by the tracing filter.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        subscription|x|
        subscriptionSyntax|x|
        telemetryProfileName|x|
        traceFilterName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.31.
      operationId: getMsgVpnTelemetryProfileTraceFilterSubscriptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: telemetryProfileName
        in: path
        description: The name of the Telemetry Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: traceFilterName
        in: path
        description: "A name used to identify the trace filter. Consider a name that\
          \ describes the subscriptions contained within the filter, such as the name\
          \ of the application and/or the scenario in which the trace filter might\
          \ be enabled, such as \"appNameDebug\"."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Telemetry Trace Filter Subscription objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterSubscriptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/telemetryProfiles/{telemetryProfileName}/traceFilters/{traceFilterName}/subscriptions/{subscription},{subscriptionSyntax}
  : get:
      tags:
      - all
      - msgVpn
      - telemetryProfile
      summary: Get a Telemetry Trace Filter Subscription object.
      description: |-
        Get a Telemetry Trace Filter Subscription object.

        Trace filter subscriptions control which messages will be attracted by the tracing filter.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        subscription|x|
        subscriptionSyntax|x|
        telemetryProfileName|x|
        traceFilterName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.31.
      operationId: getMsgVpnTelemetryProfileTraceFilterSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: telemetryProfileName
        in: path
        description: The name of the Telemetry Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: traceFilterName
        in: path
        description: "A name used to identify the trace filter. Consider a name that\
          \ describes the subscriptions contained within the filter, such as the name\
          \ of the application and/or the scenario in which the trace filter might\
          \ be enabled, such as \"appNameDebug\"."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscription
        in: path
        description: Messages matching this subscription will follow this filter's
          configuration.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionSyntax
        in: path
        description: The syntax of the trace filter subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Telemetry Trace Filter Subscription object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpointTemplates:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      summary: Get a list of Topic Endpoint Template objects.
      description: |-
        Get a list of Topic Endpoint Template objects.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicEndpointTemplateName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnTopicEndpointTemplates
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic Endpoint Template objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplatesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpointTemplates/{topicEndpointTemplateName}:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      summary: Get a Topic Endpoint Template object.
      description: |-
        Get a Topic Endpoint Template object.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicEndpointTemplateName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnTopicEndpointTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointTemplateName
        in: path
        description: The name of the Topic Endpoint Template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic Endpoint Template object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpoints:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Get a list of Topic Endpoint objects.
      description: |-
        Get a list of Topic Endpoint objects.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicEndpointName|x|
        virtualRouter||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpoints
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic Endpoint objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Get a Topic Endpoint object.
      description: |-
        Get a Topic Endpoint object.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicEndpointName|x|
        virtualRouter||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic Endpoint object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/msgs:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Get a list of Topic Endpoint Message objects.
      description: |-
        Get a list of Topic Endpoint Message objects.

        A Topic Endpoint Message is a packet of information sent from producers to consumers using the Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointMsgs
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic Endpoint Message objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointMsgsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/msgs/{msgId}:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Get a Topic Endpoint Message object.
      description: |-
        Get a Topic Endpoint Message object.

        A Topic Endpoint Message is a packet of information sent from producers to consumers using the Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointMsg
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: msgId
        in: path
        description: The identifier (ID) of the Message.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic Endpoint Message object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointMsgResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/priorities:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Get a list of Topic Endpoint Priority objects.
      description: |-
        Get a list of Topic Endpoint Priority objects.

        Topic Endpoints can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        priority|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointPriorities
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic Endpoint Priority objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointPrioritiesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/priorities/{priority}:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Get a Topic Endpoint Priority object.
      description: |-
        Get a Topic Endpoint Priority object.

        Topic Endpoints can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        priority|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointPriority
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: priority
        in: path
        description: "The level of the Priority, from 9 (highest) to 0 (lowest)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic Endpoint Priority object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointPriorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/txFlows:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Get a list of Topic Endpoint Transmit Flow objects.
      description: |-
        Get a list of Topic Endpoint Transmit Flow objects.

        Topic Endpoint Transmit Flows are used by clients to consume Guaranteed messages from a Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        flowId|x|
        msgVpnName|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointTxFlows
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic Endpoint Transmit Flow objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/txFlows/{flowId}:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Get a Topic Endpoint Transmit Flow object.
      description: |-
        Get a Topic Endpoint Transmit Flow object.

        Topic Endpoint Transmit Flows are used by clients to consume Guaranteed messages from a Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        flowId|x|
        msgVpnName|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointTxFlow
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: flowId
        in: path
        description: The identifier (ID) of the Flow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic Endpoint Transmit Flow object's attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/transactions:
    get:
      tags:
      - all
      - msgVpn
      - transaction
      summary: Get a list of Replicated Local Transaction or XA Transaction objects.
      description: |-
        Get a list of Replicated Local Transaction or XA Transaction objects.

        Transactions can be used to group a set of Guaranteed messages to be published or consumed or both as an atomic unit of work.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransactions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Replicated Local Transaction or XA Transaction\
            \ objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/transactions/{xid}:
    get:
      tags:
      - all
      - msgVpn
      - transaction
      summary: Get a Replicated Local Transaction or XA Transaction object.
      description: |-
        Get a Replicated Local Transaction or XA Transaction object.

        Transactions can be used to group a set of Guaranteed messages to be published or consumed or both as an atomic unit of work.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransaction
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: xid
        in: path
        description: The identifier (ID) of the Transaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Replicated Local Transaction or XA Transaction object's\
            \ attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/transactions/{xid}/consumerMsgs:
    get:
      tags:
      - all
      - msgVpn
      - transaction
      summary: Get a list of Transaction Consumer Message objects.
      description: |-
        Get a list of Transaction Consumer Message objects.

        A Transaction Consumer Message is a message that will be consumed as part of this Transaction once the Transaction is committed.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransactionConsumerMsgs
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: xid
        in: path
        description: The identifier (ID) of the Transaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Transaction Consumer Message objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/transactions/{xid}/consumerMsgs/{msgId}:
    get:
      tags:
      - all
      - msgVpn
      - transaction
      summary: Get a Transaction Consumer Message object.
      description: |-
        Get a Transaction Consumer Message object.

        A Transaction Consumer Message is a message that will be consumed as part of this Transaction once the Transaction is committed.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransactionConsumerMsg
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: xid
        in: path
        description: The identifier (ID) of the Transaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: msgId
        in: path
        description: The identifier (ID) of the Message.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Transaction Consumer Message object's attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/transactions/{xid}/publisherMsgs:
    get:
      tags:
      - all
      - msgVpn
      - transaction
      summary: Get a list of Transaction Publisher Message objects.
      description: |-
        Get a list of Transaction Publisher Message objects.

        A Transaction Publisher Message is a message that will be published as part of this Transaction once the Transaction is committed.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransactionPublisherMsgs
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: xid
        in: path
        description: The identifier (ID) of the Transaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Transaction Publisher Message objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/transactions/{xid}/publisherMsgs/{msgId}:
    get:
      tags:
      - all
      - msgVpn
      - transaction
      summary: Get a Transaction Publisher Message object.
      description: |-
        Get a Transaction Publisher Message object.

        A Transaction Publisher Message is a message that will be published as part of this Transaction once the Transaction is committed.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransactionPublisherMsg
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: xid
        in: path
        description: The identifier (ID) of the Transaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: msgId
        in: path
        description: The identifier (ID) of the Message.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Transaction Publisher Message object's attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a list of OAuth Profile objects.
      description: |-
        Get a list of OAuth Profile objects.

        OAuth profiles specify how to securely authenticate to an OAuth provider.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfiles
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of OAuth Profile objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfilesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get an OAuth Profile object.
      description: |-
        Get an OAuth Profile object.

        OAuth profiles specify how to securely authenticate to an OAuth provider.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfile
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The OAuth Profile object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/accessLevelGroups:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a list of Group Access Level objects.
      description: |-
        Get a list of Group Access Level objects.

        The name of a group as it exists on the OAuth server being used to authenticate SEMP users.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        groupName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileAccessLevelGroups
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Group Access Level objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileAccessLevelGroupsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/accessLevelGroups/{groupName}:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a Group Access Level object.
      description: |-
        Get a Group Access Level object.

        The name of a group as it exists on the OAuth server being used to authenticate SEMP users.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        groupName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileAccessLevelGroup
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupName
        in: path
        description: The name of the group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Group Access Level object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileAccessLevelGroupResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/accessLevelGroups/{groupName}/msgVpnAccessLevelExceptions:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a list of Message VPN Access-Level Exception objects.
      description: |-
        Get a list of Message VPN Access-Level Exception objects.

        Message VPN access-level exceptions for members of this group.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        groupName|x|
        msgVpnName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileAccessLevelGroupMsgVpnAccessLevelExceptions
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupName
        in: path
        description: The name of the group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Message VPN Access-Level Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/accessLevelGroups/{groupName}/msgVpnAccessLevelExceptions/{msgVpnName}:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a Message VPN Access-Level Exception object.
      description: |-
        Get a Message VPN Access-Level Exception object.

        Message VPN access-level exceptions for members of this group.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        groupName|x|
        msgVpnName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileAccessLevelGroupMsgVpnAccessLevelException
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupName
        in: path
        description: The name of the group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: msgVpnName
        in: path
        description: The name of the message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Message VPN Access-Level Exception object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/clientAllowedHosts:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a list of Allowed Host Value objects.
      description: |-
        Get a list of Allowed Host Value objects.

        A valid hostname for this broker in OAuth redirects.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        allowedHost|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileClientAllowedHosts
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Allowed Host Value objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileClientAllowedHostsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/clientAllowedHosts/{allowedHost}:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get an Allowed Host Value object.
      description: |-
        Get an Allowed Host Value object.

        A valid hostname for this broker in OAuth redirects.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        allowedHost|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileClientAllowedHost
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: allowedHost
        in: path
        description: An allowed value for the Host header.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Allowed Host Value object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileClientAllowedHostResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/clientAuthorizationParameters:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a list of Authorization Parameter objects.
      description: |-
        Get a list of Authorization Parameter objects.

        Additional parameters to be passed to the OAuth authorization endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        authorizationParameterName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileClientAuthorizationParameters
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Authorization Parameter objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileClientAuthorizationParametersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/clientAuthorizationParameters/{authorizationParameterName}:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get an Authorization Parameter object.
      description: |-
        Get an Authorization Parameter object.

        Additional parameters to be passed to the OAuth authorization endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        authorizationParameterName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileClientAuthorizationParameter
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authorizationParameterName
        in: path
        description: The name of the authorization parameter.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Authorization Parameter object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileClientAuthorizationParameterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/clientRequiredClaims:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a list of Required Claim objects.
      description: |-
        Get a list of Required Claim objects.

        Additional claims to be verified in the ID token.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientRequiredClaimName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileClientRequiredClaims
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Required Claim objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileClientRequiredClaimsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/clientRequiredClaims/{clientRequiredClaimName}:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a Required Claim object.
      description: |-
        Get a Required Claim object.

        Additional claims to be verified in the ID token.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientRequiredClaimName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileClientRequiredClaim
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientRequiredClaimName
        in: path
        description: The name of the ID token claim to verify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Required Claim object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileClientRequiredClaimResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/defaultMsgVpnAccessLevelExceptions:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a list of Message VPN Access-Level Exception objects.
      description: |-
        Get a list of Message VPN Access-Level Exception objects.

        Default message VPN access-level exceptions.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileDefaultMsgVpnAccessLevelExceptions
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Message VPN Access-Level Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileDefaultMsgVpnAccessLevelExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/defaultMsgVpnAccessLevelExceptions/{msgVpnName}:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a Message VPN Access-Level Exception object.
      description: |-
        Get a Message VPN Access-Level Exception object.

        Default message VPN access-level exceptions.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthProfileName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileDefaultMsgVpnAccessLevelException
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: msgVpnName
        in: path
        description: The name of the message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Message VPN Access-Level Exception object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileDefaultMsgVpnAccessLevelExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/resourceServerRequiredClaims:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a list of Required Claim objects.
      description: |-
        Get a list of Required Claim objects.

        Additional claims to be verified in the access token.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        oauthProfileName|x|
        resourceServerRequiredClaimName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileResourceServerRequiredClaims
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Required Claim objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileResourceServerRequiredClaimsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /oauthProfiles/{oauthProfileName}/resourceServerRequiredClaims/{resourceServerRequiredClaimName}:
    get:
      tags:
      - all
      - oauthProfile
      summary: Get a Required Claim object.
      description: |-
        Get a Required Claim object.

        Additional claims to be verified in the access token.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        oauthProfileName|x|
        resourceServerRequiredClaimName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.24.
      operationId: getOauthProfileResourceServerRequiredClaim
      parameters:
      - name: oauthProfileName
        in: path
        description: The name of the OAuth profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resourceServerRequiredClaimName
        in: path
        description: The name of the access token claim to verify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Required Claim object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthProfileResourceServerRequiredClaimResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /sessions:
    get:
      tags:
      - all
      - session
      summary: Get a list of SEMP Session objects.
      description: |-
        Get a list of SEMP Session objects.

        Administrative sessions for configuration and monitoring.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        sessionId|x|
        sessionUsername|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getSessions
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of SEMP Session objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /sessions/{sessionUsername},{sessionId}:
    get:
      tags:
      - all
      - session
      summary: Get a SEMP Session object.
      description: |-
        Get a SEMP Session object.

        Administrative sessions for configuration and monitoring.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        sessionId|x|
        sessionUsername|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getSession
      parameters:
      - name: sessionUsername
        in: path
        description: The username used for authorization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sessionId
        in: path
        description: The unique identifier for the session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The SEMP Session object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /standardDomainCertAuthorities:
    get:
      tags:
      - all
      - standardDomainCertAuthority
      summary: Get a list of Standard Domain Certificate Authority objects.
      description: |-
        Get a list of Standard Domain Certificate Authority objects.

        Standard Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getStandardDomainCertAuthorities
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Standard Domain Certificate Authority objects'\
            \ attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardDomainCertAuthoritiesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /standardDomainCertAuthorities/{certAuthorityName}:
    get:
      tags:
      - all
      - standardDomainCertAuthority
      summary: Get a Standard Domain Certificate Authority object.
      description: |-
        Get a Standard Domain Certificate Authority object.

        Standard Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getStandardDomainCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Standard Domain Certificate Authority object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardDomainCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /virtualHostnames:
    get:
      tags:
      - all
      - virtualHostname
      summary: Get a list of Virtual Hostname objects.
      description: |-
        Get a list of Virtual Hostname objects.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        virtualHostname|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.17.
      operationId: getVirtualHostnames
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Virtual Hostname objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /virtualHostnames/{virtualHostname}:
    get:
      tags:
      - all
      - virtualHostname
      summary: Get a Virtual Hostname object.
      description: |-
        Get a Virtual Hostname object.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        virtualHostname|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.17.
      operationId: getVirtualHostname
      parameters:
      - name: virtualHostname
        in: path
        description: The virtual hostname.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Virtual Hostname object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
components:
  schemas:
    About:
      type: object
    AboutApi:
      type: object
      properties:
        platform:
          type: string
          description: The platform running the SEMP API.
        sempVersion:
          type: string
          description: The version of the SEMP API.
      example:
        sempVersion: sempVersion
        platform: platform
    AboutApiCollections:
      type: object
    AboutApiLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this API Description object.
      example:
        uri: uri
    AboutApiResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/AboutApiCollections'
        data:
          $ref: '#/components/schemas/AboutApi'
        links:
          $ref: '#/components/schemas/AboutApiLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          sempVersion: sempVersion
          platform: platform
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    AboutCollections:
      type: object
    AboutLinks:
      type: object
      properties:
        apiUri:
          type: string
          description: The URI of this About's API Description object. Available since
            2.11.
        uri:
          type: string
          description: The URI of this About object.
        userUri:
          type: string
          description: The URI of this About's User object. Available since 2.11.
      example:
        apiUri: apiUri
        userUri: userUri
        uri: uri
    AboutResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/AboutCollections'
        data:
          $ref: '#/components/schemas/About'
        links:
          $ref: '#/components/schemas/AboutLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data: {}
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          apiUri: apiUri
          userUri: userUri
          uri: uri
    AboutUser:
      type: object
      properties:
        globalAccessLevel:
          type: string
          description: |
            The global access level of the User. The allowed values and their meaning are:

            <pre>
            "admin" - Full administrative access.
            "none" - No access.
            "read-only" - Read only access.
            "read-write" - Read and write access.
            </pre>
          enum:
          - admin
          - none
          - read-only
          - read-write
        sessionActive:
          type: boolean
          description: Indicates whether a session is active for this request. Available
            since 2.24.
        sessionCreateTime:
          type: integer
          description: The timestamp of when the session was created. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available
            since 2.21.
          format: int32
        sessionCurrentTime:
          type: integer
          description: The current server timestamp. This is provided as a reference
            point for the other timestamps provided. This value represents the number
            of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since
            2.21.
          format: int32
        sessionHardExpiryTime:
          type: integer
          description: "The hard expiry time for the session. After this time the\
            \ session will be invalid, regardless of activity. This value represents\
            \ the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available\
            \ since 2.21."
          format: int32
        sessionId:
          type: string
          description: An identifier for the session to differentiate this session
            from other sessions for the same user. This value is not guaranteed to
            be unique between active sessions for different users. Available since
            2.21.
        sessionIdleExpiryTime:
          type: integer
          description: The session idle expiry time. After this time the session will
            be invalid if there has been no activity. This value represents the number
            of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since
            2.21.
          format: int32
        username:
          type: string
          description: The username of the User. Available since 2.17.
      example:
        sessionCurrentTime: 1
        sessionIdleExpiryTime: 5
        sessionHardExpiryTime: 5
        sessionCreateTime: 6
        sessionId: sessionId
        globalAccessLevel: admin
        sessionActive: true
        username: username
    AboutUserCollections:
      type: object
      properties:
        msgVpns:
          $ref: '#/components/schemas/AboutUserCollectionsMsgVpns'
      example:
        msgVpns:
          count: 0
    AboutUserCollectionsMsgVpns:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the msgVpns collection.
          format: int64
      example:
        count: 0
    AboutUserLinks:
      type: object
      properties:
        msgVpnsUri:
          type: string
          description: The URI of this User's collection of User Message VPN objects.
        uri:
          type: string
          description: The URI of this User object.
      example:
        msgVpnsUri: msgVpnsUri
        uri: uri
    AboutUserMsgVpn:
      type: object
      properties:
        accessLevel:
          type: string
          description: |
            The Message VPN access level of the User. The allowed values and their meaning are:

            <pre>
            "none" - No access.
            "read-only" - Read only access.
            "read-write" - Read and write access.
            </pre>
          enum:
          - none
          - read-only
          - read-write
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        accessLevel: none
        msgVpnName: msgVpnName
    AboutUserMsgVpnCollections:
      type: object
    AboutUserMsgVpnLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this User Message VPN object.
      example:
        uri: uri
    AboutUserMsgVpnResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/AboutUserMsgVpnCollections'
        data:
          $ref: '#/components/schemas/AboutUserMsgVpn'
        links:
          $ref: '#/components/schemas/AboutUserMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          accessLevel: none
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    AboutUserMsgVpnsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/AboutUserMsgVpnCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/AboutUserMsgVpn'
        links:
          type: array
          items:
            $ref: '#/components/schemas/AboutUserMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - accessLevel: none
          msgVpnName: msgVpnName
        - accessLevel: none
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    AboutUserResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/AboutUserCollections'
        data:
          $ref: '#/components/schemas/AboutUser'
        links:
          $ref: '#/components/schemas/AboutUserLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          sessionCurrentTime: 1
          sessionIdleExpiryTime: 5
          sessionHardExpiryTime: 5
          sessionCreateTime: 6
          sessionId: sessionId
          globalAccessLevel: admin
          sessionActive: true
          username: username
        collections:
          msgVpns:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          msgVpnsUri: msgVpnsUri
          uri: uri
    Broker:
      type: object
      properties:
        authClientCertRevocationCheckMode:
          type: string
          description: "The client certificate revocation checking mode used when\
            \ a client authenticates with a client certificate. The allowed values\
            \ and their meaning are:\n\n<pre>\n\"none\" - Do not perform any certificate\
            \ revocation checking.\n\"ocsp\" - Use the Open Certificate Status Protcol\
            \ (OCSP) for certificate revocation checking.\n\"crl\" - Use Certificate\
            \ Revocation Lists (CRL) for certificate revocation checking.\n\"ocsp-crl\"\
            \ - Use OCSP first, but if OCSP fails to return an unambiguous result,\
            \ then check via CRL.\n</pre>\n"
          enum:
          - none
          - ocsp
          - crl
          - ocsp-crl
        averageBindRequestRate:
          type: integer
          description: "The one minute average of the bind request rate received by\
            \ the Broker, in binds per second (binds/sec). Available since 2.25."
          format: int64
        averageRxByteRate:
          type: integer
          description: "The one minute average of the message rate received by the\
            \ Broker, in bytes per second (B/sec). Available since 2.14."
          format: int64
        averageRxCompressedByteRate:
          type: integer
          description: "The one minute average of the compressed message rate received\
            \ by the Broker, in bytes per second (B/sec). Available since 2.14."
          format: int64
        averageRxMsgRate:
          type: integer
          description: "The one minute average of the message rate received by the\
            \ Broker, in messages per second (msg/sec). Available since 2.14."
          format: int64
        averageRxUncompressedByteRate:
          type: integer
          description: "The one minute average of the uncompressed message rate received\
            \ by the Broker, in bytes per second (B/sec). Available since 2.14."
          format: int64
        averageTxByteRate:
          type: integer
          description: "The one minute average of the message rate transmitted by\
            \ the Broker, in bytes per second (B/sec). Available since 2.14."
          format: int64
        averageTxCompressedByteRate:
          type: integer
          description: "The one minute average of the compressed message rate transmitted\
            \ by the Broker, in bytes per second (B/sec). Available since 2.14."
          format: int64
        averageTxMsgRate:
          type: integer
          description: "The one minute average of the message rate transmitted by\
            \ the Broker, in messages per second (msg/sec). Available since 2.14."
          format: int64
        averageTxUncompressedByteRate:
          type: integer
          description: "The one minute average of the uncompressed message rate transmitted\
            \ by the Broker, in bytes per second (B/sec). Available since 2.14."
          format: int64
        bindRequestRate:
          type: integer
          description: "The current bind request rate received by the Broker, in binds\
            \ per second (binds/sec). Available since 2.25."
          format: int64
        configSyncAuthenticationClientCertMaxChainDepth:
          type: integer
          description: The maximum depth for a client certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
            Available since 2.22.
          format: int64
        configSyncAuthenticationClientCertValidateDateEnabled:
          type: boolean
          description: Enable or disable validation of the "Not Before" and "Not After"
            validity dates in the authentication certificate(s). Available since 2.22.
        configSyncClientProfileTcpInitialCongestionWindow:
          type: integer
          description: "The TCP initial congestion window size for Config Sync clients,\
            \ in multiples of the TCP Maximum Segment Size (MSS). Changing the value\
            \ from its default of 2 results in non-compliance with RFC 2581. Contact\
            \ support before changing this value. Available since 2.22."
          format: int64
        configSyncClientProfileTcpKeepaliveCount:
          type: integer
          description: The number of TCP keepalive retransmissions to a client using
            the Client Profile before declaring that it is not available. Available
            since 2.22.
          format: int64
        configSyncClientProfileTcpKeepaliveIdle:
          type: integer
          description: "The amount of time a client connection using the Client Profile\
            \ must remain idle before TCP begins sending keepalive probes, in seconds.\
            \ Available since 2.22."
          format: int64
        configSyncClientProfileTcpKeepaliveInterval:
          type: integer
          description: "The amount of time between TCP keepalive retransmissions to\
            \ a client using the Client Profile when no acknowledgement is received,\
            \ in seconds. Available since 2.22."
          format: int64
        configSyncClientProfileTcpMaxWindow:
          type: integer
          description: "The TCP maximum window size for clients using the Client Profile,\
            \ in kilobytes. Changes are applied to all existing connections. Available\
            \ since 2.22."
          format: int64
        configSyncClientProfileTcpMss:
          type: integer
          description: "The TCP maximum segment size for clients using the Client\
            \ Profile, in bytes. Changes are applied to all existing connections.\
            \ Available since 2.22."
          format: int64
        configSyncEnabled:
          type: boolean
          description: Enable or disable configuration synchronization for High Availability
            or Disaster Recovery. Available since 2.22.
        configSyncLastFailureReason:
          type: string
          description: The reason for the last transition to a "Down" operational
            status. On transitions to the "Up" operational status this value is cleared.
            Available since 2.22.
        configSyncSynchronizeUsernameEnabled:
          type: boolean
          description: "Enable or disable the synchronizing of usernames within High\
            \ Availability groups. The transition from not synchronizing to synchronizing\
            \ will cause the High Availability mate to fall out of sync. Recommendation:\
            \ leave this as enabled. Available since 2.22."
        configSyncTlsEnabled:
          type: boolean
          description: Enable or disable the use of TLS encryption of the configuration
            synchronization communications between brokers in High Availability groups
            and/or Disaster Recovery sites. Available since 2.22.
        configSyncUp:
          type: boolean
          description: "Indicates whether the configuration synchronization facility\
            \ is operational. \"True\" indicates the facility is Up, otherwise it\
            \ is Down. When \"False\" the configSyncLastFailureReason will provide\
            \ further detail. Available since 2.22."
        cspfVersion:
          type: integer
          description: The current CSPF version. Available since 2.17.
          format: int32
        guaranteedMsgingDefragmentationEstimatedFragmentation:
          type: integer
          description: "An approximation of the amount of disk space consumed, but\
            \ not used, by the persisted data. Calculated as a percentage of total\
            \ space. Available since 2.18."
          format: int64
        guaranteedMsgingDefragmentationEstimatedRecoverableSpace:
          type: integer
          description: An approximation of the amount of disk space recovered upon
            a successfully completed execution of a defragmentation operation. Expressed
            in MB. Available since 2.18.
          format: int32
        guaranteedMsgingDefragmentationLastCompletedOn:
          type: integer
          description: A timestamp reflecting when the last defragmentation completed.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Available since 2.18.
          format: int32
        guaranteedMsgingDefragmentationLastCompletionPercentage:
          type: integer
          description: "How much of the message spool was visited during the last\
            \ defragmentation operation. This number reflects the percentage of the\
            \ message spool visited in terms of disk space (as opposed to, for example,\
            \ spool files). Available since 2.18."
          format: int64
        guaranteedMsgingDefragmentationLastExitCondition:
          type: string
          description: |-
            Reflects how the last defragmentation operation completed. The allowed values and their meaning are:

            <pre>
            "success" - Defragmentation completed successfully.
            "unmovable-local-transaction" - Defragmentation stopped after encountering an unmovable local transaction.
            "unmovable-xa-transaction" - Defragmentation stopped after encountering an unmovable XA transaction.
            "incomplete" - Defragmentation stopped prematurely.
            "stopped-by-administrator" - Defragmentation stopped by administrator.
            </pre>
             Available since 2.18.
        guaranteedMsgingDefragmentationLastExitConditionInformation:
          type: string
          description: Optional additional information regarding the exit condition
            of the last defragmentation operation. Available since 2.18.
        guaranteedMsgingDefragmentationScheduleDayList:
          type: string
          description: "The days of the week to schedule defragmentation runs, specified\
            \ as \"daily\" or as a comma-separated list of days. Days must be specified\
            \ as \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri, or \"Sat\", with\
            \ no spaces, and in sorted order from Sunday to Saturday. Please note\
            \ \"Sun,Mon,Tue,Wed,Thu,Fri,Sat\" is not allowed, use \"daily\" instead.\
            \ Available since 2.25."
        guaranteedMsgingDefragmentationScheduleEnabled:
          type: boolean
          description: Enable or disable schedule-based defragmentation of Guaranteed
            Messaging spool files. Available since 2.25.
        guaranteedMsgingDefragmentationScheduleTimeList:
          type: string
          description: "The times of the day to schedule defragmentation runs, specified\
            \ as \"hourly\" or as a comma-separated list of 24-hour times in the form\
            \ hh:mm, or h:mm. There must be no spaces, and times (up to 4) must be\
            \ in sorted order from 0:00 to 23:59. Available since 2.25."
        guaranteedMsgingDefragmentationStatus:
          type: string
          description: |-
            Defragmentation status of guaranteed messaging. The allowed values and their meaning are:

            <pre>
            "idle" - Defragmentation is not currently running.
            "pending" - Degfragmentation is preparing to run.
            "active" - Defragmentation is in progress.
            </pre>
             Available since 2.18.
        guaranteedMsgingDefragmentationStatusActiveCompletionPercentage:
          type: integer
          description: The estimated completion percentage of a defragmentation operation
            currently in progress. Only valid if the defragmentation status is "Active".
            Available since 2.18.
          format: int64
        guaranteedMsgingDefragmentationThresholdEnabled:
          type: boolean
          description: Enable or disable threshold-based defragmentation of Guaranteed
            Messaging spool files. Available since 2.25.
        guaranteedMsgingDefragmentationThresholdFragmentationPercentage:
          type: integer
          description: Percentage of spool fragmentation needed to trigger defragmentation
            run. The minimum value allowed is 30%. Available since 2.25.
          format: int64
        guaranteedMsgingDefragmentationThresholdMinInterval:
          type: integer
          description: Minimum interval of time (in minutes) between defragmentation
            runs triggered by thresholds. Available since 2.25.
          format: int64
        guaranteedMsgingDefragmentationThresholdUsagePercentage:
          type: integer
          description: Percentage of spool usage needed to trigger defragmentation
            run. The minimum value allowed is 30%. Available since 2.25.
          format: int64
        guaranteedMsgingEnabled:
          type: boolean
          description: Enable or disable Guaranteed Messaging. Available since 2.18.
        guaranteedMsgingEventCacheUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventDeliveredUnackedThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventDiskUsageThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventEndpointCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventMsgCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventMsgSpoolFileCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventTransactedSessionResourceCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingMaxCacheUsage:
          type: integer
          description: Guaranteed messaging cache usage limit. Expressed as a maximum
            percentage of the NAB's egress queueing. resources that the guaranteed
            message cache is allowed to use. Available since 2.18.
          format: int32
        guaranteedMsgingMaxMsgSpoolUsage:
          type: integer
          description: "The maximum total message spool usage allowed across all VPNs\
            \ on this broker, in megabytes. Recommendation: the maximum value should\
            \ be less than 90% of the disk space allocated for the guaranteed message\
            \ spool. Available since 2.18."
          format: int64
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout:
          type: integer
          description: "The maximum time, in milliseconds, that can be tolerated for\
            \ remote acknowledgement of synchronization messages before which the\
            \ remote system will be considered out of sync. Available since 2.18."
          format: int64
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout:
          type: integer
          description: "The maximum time, in milliseconds, that can be tolerated for\
            \ remote disk writes before which the remote system will be considered\
            \ out of sync. Available since 2.18."
          format: int64
        guaranteedMsgingOperationalStatus:
          type: string
          description: |-
            Operational status of guaranteed messaging. The allowed values and their meaning are:

            <pre>
            "disabled" - The operational status of guaranteed messaging is Disabled.
            "not-ready" - The operational status of guaranteed messaging is NotReady.
            "standby" - The operational status of guaranteed messaging is Standby.
            "activating" - The operational status of guaranteed messaging is Activating.
            "active" - The operational status of guaranteed messaging is Active.
            </pre>
             Available since 2.18.
        guaranteedMsgingTransactionReplicationCompatibilityMode:
          type: string
          description: |-
            The replication compatibility mode for the router. The default value is `"legacy"`. The allowed values and their meaning are:"legacy" - All transactions originated by clients are replicated to the standby site without using transactions."transacted" - All transactions originated by clients are replicated to the standby site using transactions. The allowed values and their meaning are:

            <pre>
            "legacy" - All transactions originated by clients are replicated to the standby site without using transactions.
            "transacted" - All transactions originated by clients are replicated to the standby site using transactions.
            </pre>
             Available since 2.18.
          enum:
          - legacy
          - transacted
        oauthProfileDefault:
          type: string
          description: The default OAuth profile for OAuth authenticated SEMP requests.
            Available since 2.24.
        rxByteCount:
          type: integer
          description: "The amount of messages received from clients by the Broker,\
            \ in bytes (B). Available since 2.14."
          format: int64
        rxByteRate:
          type: integer
          description: "The current message rate received by the Broker, in bytes\
            \ per second (B/sec). Available since 2.14."
          format: int64
        rxCompressedByteCount:
          type: integer
          description: "The amount of compressed messages received by the Broker,\
            \ in bytes (B). Available since 2.14."
          format: int64
        rxCompressedByteRate:
          type: integer
          description: "The current compressed message rate received by the Broker,\
            \ in bytes per second (B/sec). Available since 2.14."
          format: int64
        rxCompressionRatio:
          type: string
          description: The compression ratio for messages received by the Broker.
            Available since 2.14.
        rxMsgCount:
          type: integer
          description: The number of messages received from clients by the Broker.
            Available since 2.14.
          format: int64
        rxMsgRate:
          type: integer
          description: "The current message rate received by the Broker, in messages\
            \ per second (msg/sec). Available since 2.14."
          format: int64
        rxUncompressedByteCount:
          type: integer
          description: "The amount of uncompressed messages received by the Broker,\
            \ in bytes (B). Available since 2.14."
          format: int64
        rxUncompressedByteRate:
          type: integer
          description: "The current uncompressed message rate received by the Broker,\
            \ in bytes per second (B/sec). Available since 2.14."
          format: int64
        serviceAmqpEnabled:
          type: boolean
          description: "Enable or disable the AMQP service. When disabled new AMQP\
            \ Clients may not connect through the global or per-VPN AMQP listen-ports,\
            \ and all currently connected AMQP Clients are immediately disconnected.\
            \ Available since 2.17."
        serviceAmqpTlsListenPort:
          type: integer
          description: TCP port number that AMQP clients can use to connect to the
            broker using raw TCP over TLS. Available since 2.17.
          format: int64
        serviceEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceHealthCheckEnabled:
          type: boolean
          description: Enable or disable the plain-text health-check service. Available
            since 2.17.
        serviceHealthCheckListenPort:
          type: integer
          description: The port number for the plain-text health-check service. The
            port must be unique across the message backbone. The health-check service
            must be disabled to change the port. Available since 2.17.
          format: int64
        serviceHealthCheckTlsEnabled:
          type: boolean
          description: Enable or disable the TLS health-check service. Available since
            2.34.
        serviceHealthCheckTlsListenPort:
          type: integer
          description: The port number for the TLS health-check service. The port
            must be unique across the message backbone. The health-check service must
            be disabled to change the port. Available since 2.34.
          format: int64
        serviceMateLinkEnabled:
          type: boolean
          description: Enable or disable the mate-link service. Available since 2.17.
        serviceMateLinkListenPort:
          type: integer
          description: The port number for the mate-link service. The port must be
            unique across the message backbone. The mate-link service must be disabled
            to change the port. Available since 2.17.
          format: int64
        serviceMqttEnabled:
          type: boolean
          description: "Enable or disable the MQTT service. When disabled new MQTT\
            \ Clients may not connect through the per-VPN MQTT listen-ports, and all\
            \ currently connected MQTT Clients are immediately disconnected. Available\
            \ since 2.17."
        serviceMsgBackboneEnabled:
          type: boolean
          description: "Enable or disable the msg-backbone service. When disabled\
            \ new Clients may not connect through global or per-VPN listen-ports,\
            \ and all currently connected Clients are immediately disconnected. Available\
            \ since 2.17."
        serviceRedundancyEnabled:
          type: boolean
          description: Enable or disable the redundancy service. Available since 2.17.
        serviceRedundancyFirstListenPort:
          type: integer
          description: The first listen-port used for the redundancy service. Redundancy
            uses this port and the subsequent 2 ports. These port must be unique across
            the message backbone. The redundancy service must be disabled to change
            this port. Available since 2.17.
          format: int64
        serviceRestEventOutgoingConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceRestIncomingEnabled:
          type: boolean
          description: Enable or disable the REST service incoming connections on
            the router. Available since 2.17.
        serviceRestOutgoingEnabled:
          type: boolean
          description: Enable or disable the REST service outgoing connections on
            the router. Available since 2.17.
        serviceSempCorsAllowAnyHostEnabled:
          type: boolean
          description: Enable or disable cross origin resource requests for the SEMP
            service. Available since 2.24.
        serviceSempLegacyTimeoutEnabled:
          type: boolean
          description: "Enable or disable extended SEMP timeouts for paged GETs. When\
            \ a request times out, it returns the current page of content, even if\
            \ the page is not full.  When enabled, the timeout is 60 seconds. When\
            \ disabled, the timeout is 5 seconds.  The recommended setting is disabled\
            \ (no legacy-timeout).  This parameter is intended as a temporary workaround\
            \ to be used until SEMP clients can handle short pages.  This setting\
            \ will be removed in a future release. Available since 2.18."
        serviceSempPlainTextEnabled:
          type: boolean
          description: Enable or disable plain-text SEMP service. Available since
            2.17.
        serviceSempPlainTextListenPort:
          type: integer
          description: The TCP port for plain-text SEMP client connections. Available
            since 2.17.
          format: int64
        serviceSempSessionIdleTimeout:
          type: integer
          description: "The session idle timeout, in minutes. Sessions will be invalidated\
            \ if there is no activity in this period of time. Available since 2.21."
          format: int32
        serviceSempSessionMaxLifetime:
          type: integer
          description: "The maximum lifetime of a session, in minutes. Sessions will\
            \ be invalidated after this period of time, regardless of activity. Available\
            \ since 2.21."
          format: int32
        serviceSempTlsEnabled:
          type: boolean
          description: Enable or disable TLS SEMP service. Available since 2.17.
        serviceSempTlsListenPort:
          type: integer
          description: The TCP port for TLS SEMP client connections. Available since
            2.17.
          format: int64
        serviceSmfCompressionListenPort:
          type: integer
          description: TCP port number that SMF clients can use to connect to the
            broker using raw compression TCP. Available since 2.17.
          format: int64
        serviceSmfEnabled:
          type: boolean
          description: "Enable or disable the SMF service. When disabled new SMF Clients\
            \ may not connect through the global listen-ports, and all currently connected\
            \ SMF Clients are immediately disconnected. Available since 2.17."
        serviceSmfEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceSmfPlainTextListenPort:
          type: integer
          description: TCP port number that SMF clients can use to connect to the
            broker using raw TCP. Available since 2.17.
          format: int64
        serviceSmfRoutingControlListenPort:
          type: integer
          description: TCP port number that SMF clients can use to connect to the
            broker using raw routing control TCP. Available since 2.17.
          format: int64
        serviceSmfTlsListenPort:
          type: integer
          description: TCP port number that SMF clients can use to connect to the
            broker using raw TCP over TLS. Available since 2.17.
          format: int64
        serviceTlsEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceWebTransportEnabled:
          type: boolean
          description: "Enable or disable the web-transport service. When disabled\
            \ new web-transport Clients may not connect through the global listen-ports,\
            \ and all currently connected web-transport Clients are immediately disconnected.\
            \ Available since 2.17."
        serviceWebTransportPlainTextListenPort:
          type: integer
          description: The TCP port for plain-text WEB client connections. Available
            since 2.17.
          format: int64
        serviceWebTransportTlsListenPort:
          type: integer
          description: The TCP port for TLS WEB client connections. Available since
            2.17.
          format: int64
        serviceWebTransportWebUrlSuffix:
          type: string
          description: Used to specify the Web URL suffix that will be used by Web
            clients when communicating with the broker. Available since 2.17.
        telemetryTraceDemoExpiryTime:
          type: integer
          description: "Indicates when the tracing demo will expire or has expired.\
            \ When the tracing demo expires, tracing becomes inactive. For more details\
            \ related to terms, demo mode extension, and purchase, please see: https://solace.com/dt-demo-mode.\
            \ This value represents the number of seconds since 1970-01-01 00:00:00\
            \ UTC (Unix time). Available since 2.31."
          format: int32
        telemetryTraceDemoState:
          type: string
          description: "Indicates whether the tracing demo is ready to be activated,\
            \ active, or inactive. For more details related to the tracing demo, please\
            \ see: https://solace.com/dt-demo-mode. The allowed values and their meaning\
            \ are:\n\n<pre>\n\"active\" - The tracing demo is active. The demo expiry\
            \ time indicates when tracing will become inactive if tracing is not licensed\
            \ or the broker is not restarted before then. For more details related\
            \ to terms, demo mode extension, and purchase, please see: https://solace.com/dt-demo-mode.\n\
            \"inactive\" - The tracing demo is not active either because tracing is\
            \ licensed, thereby enabling continuous tracing operation; or the tracing\
            \ demo mode is not available on this broker.\n\"inactive-restart-required\"\
            \ - The tracing demo mode was active, but the expiry time was reached\
            \ without the installation of a tracing product key or a broker restart.\
            \ Obtain a license and install the provided product key to enable continuous\
            \ operation of tracing. Alternatively, restart the broker to reactivate\
            \ tracing in demo mode. For more details related to terms, demo mode extension,\
            \ and purchase, please see: https://solace.com/dt-demo-mode.\n\"ready\"\
            \ - The broker is capable of providing tracing functionality in demo mode.\
            \ To activate the demo, simply enable tracing. For more details related\
            \ to terms, demo mode extension, and purchase, please see: https://solace.com/dt-demo-mode.\n\
            </pre>\n Available since 2.31."
        telemetryTraceMode:
          type: string
          description: "Indicates whether tracing is licensed, requires a license,\
            \ or is in demo mode. Installing a tracing product key results in licensed\
            \ mode. The allowed values and their meaning are:\n\n<pre>\n\"demo\" -\
            \ The free tracing demo mode allows for evaluation of tracing before purchasing\
            \ a license. Please see https://solace.com/dt-demo-mode for more details.\n\
            \"inactive-license-required\" - A tracing license is required for tracing\
            \ to become operational.\n\"licensed\" - A tracing product key has been\
            \ installed, enabling continuous operation of tracing.\n</pre>\n Available\
            \ since 2.31."
        tlsBlockVersion11Enabled:
          type: boolean
          description: "Indicates whether TLS version 1.1 connections are blocked.\
            \ When blocked, all existing incoming and outgoing TLS 1.1 connections\
            \ with Clients, SEMP users, and LDAP servers remain connected while new\
            \ connections are blocked. Note that support for TLS 1.1 will eventually\
            \ be discontinued, at which time TLS 1.1 connections will be blocked regardless\
            \ of this setting."
        tlsCipherSuiteManagementDefaultList:
          type: string
          description: The colon-separated list of default cipher suites for TLS management
            connections.
        tlsCipherSuiteManagementList:
          type: string
          description: "The colon-separated list of cipher suites used for TLS management\
            \ connections (e.g. SEMP, LDAP). The value \"default\" implies all supported\
            \ suites ordered from most secure to least secure."
        tlsCipherSuiteManagementSupportedList:
          type: string
          description: The colon-separated list of supported cipher suites for TLS
            management connections.
        tlsCipherSuiteMsgBackboneDefaultList:
          type: string
          description: The colon-separated list of default cipher suites for TLS data
            connections.
        tlsCipherSuiteMsgBackboneList:
          type: string
          description: The colon-separated list of cipher suites used for TLS data
            connections (e.g. client pub/sub). The value "default" implies all supported
            suites ordered from most secure to least secure.
        tlsCipherSuiteMsgBackboneSupportedList:
          type: string
          description: The colon-separated list of supported cipher suites for TLS
            data connections.
        tlsCipherSuiteSecureShellDefaultList:
          type: string
          description: The colon-separated list of default cipher suites for TLS secure
            shell connections.
        tlsCipherSuiteSecureShellList:
          type: string
          description: "The colon-separated list of cipher suites used for TLS secure\
            \ shell connections (e.g. SSH, SFTP, SCP). The value \"default\" implies\
            \ all supported suites ordered from most secure to least secure."
        tlsCipherSuiteSecureShellSupportedList:
          type: string
          description: The colon-separated list of supported cipher suites for TLS
            secure shell connections.
        tlsCrimeExploitProtectionEnabled:
          type: boolean
          description: "Indicates whether protection against the CRIME exploit is\
            \ enabled. When enabled, TLS+compressed messaging performance is degraded.\
            \ This protection should only be disabled if sufficient ACL and authentication\
            \ features are being employed such that a potential attacker does not\
            \ have sufficient access to trigger the exploit."
        tlsStandardDomainCertificateAuthoritiesEnabled:
          type: boolean
          description: Enable or disable the standard domain certificate authority
            list. Available since 2.19.
        tlsTicketLifetime:
          type: integer
          description: "The TLS ticket lifetime in seconds. When a client connects\
            \ with TLS, a session with a session ticket is created using the TLS ticket\
            \ lifetime which determines how long the client has to resume the session."
          format: int32
        tlsVersionSupportedList:
          type: string
          description: The comma-separated list of supported TLS versions.
        txByteCount:
          type: integer
          description: "The amount of messages transmitted to clients by the Broker,\
            \ in bytes (B). Available since 2.14."
          format: int64
        txByteRate:
          type: integer
          description: "The current message rate transmitted by the Broker, in bytes\
            \ per second (B/sec). Available since 2.14."
          format: int64
        txCompressedByteCount:
          type: integer
          description: "The amount of compressed messages transmitted by the Broker,\
            \ in bytes (B). Available since 2.14."
          format: int64
        txCompressedByteRate:
          type: integer
          description: "The current compressed message rate transmitted by the Broker,\
            \ in bytes per second (B/sec). Available since 2.14."
          format: int64
        txCompressionRatio:
          type: string
          description: The compression ratio for messages transmitted by the Broker.
            Available since 2.14.
        txMsgCount:
          type: integer
          description: The number of messages transmitted to clients by the Broker.
            Available since 2.14.
          format: int64
        txMsgRate:
          type: integer
          description: "The current message rate transmitted by the Broker, in messages\
            \ per second (msg/sec). Available since 2.14."
          format: int64
        txUncompressedByteCount:
          type: integer
          description: "The amount of uncompressed messages transmitted by the Broker,\
            \ in bytes (B). Available since 2.14."
          format: int64
        txUncompressedByteRate:
          type: integer
          description: "The current uncompressed message rate transmitted by the Broker,\
            \ in bytes per second (B/sec). Available since 2.14."
          format: int64
        version:
          type: string
          description: The version of the broker. Available since 2.29.
        webManagerAllowUnencryptedWizardsEnabled:
          type: boolean
          description: "Enable or disable the use of unencrypted wizards in the Web-based\
            \ Manager UI. This setting should be left at its default on all production\
            \ systems or other systems that need to be secure.  Enabling this option\
            \ will permit the broker to forward plain-text data to other brokers,\
            \ making important information or credentials available for snooping.\
            \ Available since 2.28."
        webManagerCustomization:
          type: string
          description: Reserved for internal use by Solace. Available since 2.25.
        webManagerRedirectHttpEnabled:
          type: boolean
          description: Enable or disable redirection of HTTP requests for the broker
            manager to HTTPS. Available since 2.24.
        webManagerRedirectHttpLastFailureReason:
          type: string
          description: The reason for the last transition to a "Down" operational
            status. On transitions to the "Up" operational status this value is cleared.
            Available since 2.24.
        webManagerRedirectHttpOverrideTlsPort:
          type: integer
          description: The HTTPS port that HTTP requests will be redirected towards
            in a HTTP 301 redirect response. Zero is a special value that means use
            the value specified for the SEMP TLS port value. Available since 2.24.
          format: int32
        webManagerRedirectHttpUp:
          type: boolean
          description: "Indicates whether the HTTP redirects will operationally occur.\
            \ \"True\" indicates the facility is Up and redirects will occur, otherwise\
            \ it is Down. When \"False\" the webManagerRedirectLastFailureReason will\
            \ provide further detail. Available since 2.24."
      example:
        averageRxByteRate: 7
        txMsgRate: 3
        txUncompressedByteRate: 8
        guaranteedMsgingDefragmentationLastCompletedOn: 6
        guaranteedMsgingEventMsgSpoolFileCountThreshold: null
        bindRequestRate: 5
        serviceSmfCompressionListenPort: 6
        txCompressedByteRate: 9
        serviceWebTransportWebUrlSuffix: serviceWebTransportWebUrlSuffix
        guaranteedMsgingDefragmentationStatus: guaranteedMsgingDefragmentationStatus
        guaranteedMsgingDefragmentationStatusActiveCompletionPercentage: 5
        guaranteedMsgingDefragmentationLastExitCondition: guaranteedMsgingDefragmentationLastExitCondition
        configSyncClientProfileTcpInitialCongestionWindow: 9
        webManagerRedirectHttpOverrideTlsPort: 0
        rxCompressedByteCount: 3
        averageRxUncompressedByteRate: 1
        tlsTicketLifetime: 8
        serviceSmfRoutingControlListenPort: 4
        authClientCertRevocationCheckMode: none
        serviceRestIncomingEnabled: true
        serviceSempSessionIdleTimeout: 7
        version: version
        tlsCipherSuiteSecureShellList: tlsCipherSuiteSecureShellList
        guaranteedMsgingDefragmentationThresholdFragmentationPercentage: 6
        serviceAmqpEnabled: true
        guaranteedMsgingEventDiskUsageThreshold: null
        configSyncClientProfileTcpKeepaliveInterval: 9
        serviceSempTlsEnabled: true
        averageRxCompressedByteRate: 1
        txUncompressedByteCount: 9
        oauthProfileDefault: oauthProfileDefault
        serviceEventConnectionCountThreshold: null
        rxByteRate: 5
        webManagerRedirectHttpUp: true
        guaranteedMsgingOperationalStatus: guaranteedMsgingOperationalStatus
        guaranteedMsgingEventMsgCountThreshold: null
        serviceHealthCheckListenPort: 7
        serviceRestEventOutgoingConnectionCountThreshold: null
        serviceHealthCheckEnabled: true
        serviceMateLinkEnabled: true
        configSyncClientProfileTcpMaxWindow: 6
        txByteRate: 4
        configSyncTlsEnabled: true
        guaranteedMsgingDefragmentationEstimatedFragmentation: 1
        configSyncUp: true
        guaranteedMsgingMaxCacheUsage: 8
        serviceAmqpTlsListenPort: 4
        averageTxByteRate: 6
        serviceSempTlsListenPort: 4
        rxUncompressedByteCount: 4
        serviceSempSessionMaxLifetime: 5
        tlsCipherSuiteMsgBackboneList: tlsCipherSuiteMsgBackboneList
        guaranteedMsgingDefragmentationScheduleDayList: guaranteedMsgingDefragmentationScheduleDayList
        guaranteedMsgingTransactionReplicationCompatibilityMode: legacy
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout: 3
        averageRxMsgRate: 1
        serviceRedundancyEnabled: true
        serviceMqttEnabled: true
        tlsBlockVersion11Enabled: true
        tlsCrimeExploitProtectionEnabled: true
        configSyncClientProfileTcpKeepaliveCount: 6
        webManagerAllowUnencryptedWizardsEnabled: true
        serviceSempPlainTextListenPort: 0
        txByteCount: 6
        guaranteedMsgingEnabled: true
        configSyncLastFailureReason: configSyncLastFailureReason
        webManagerCustomization: webManagerCustomization
        guaranteedMsgingEventMsgSpoolUsageThreshold: null
        guaranteedMsgingEventCacheUsageThreshold:
          clearPercent: 7
          setPercent: 7
          setValue: 6
          clearValue: 0
        tlsCipherSuiteMsgBackboneSupportedList: tlsCipherSuiteMsgBackboneSupportedList
        serviceSempPlainTextEnabled: true
        guaranteedMsgingEventDeliveredUnackedThreshold:
          clearPercent: 0
          setPercent: 4
        guaranteedMsgingEventTransactedSessionResourceCountThreshold: null
        guaranteedMsgingDefragmentationEstimatedRecoverableSpace: 2
        serviceSmfEnabled: true
        guaranteedMsgingDefragmentationLastCompletionPercentage: 6
        tlsCipherSuiteManagementList: tlsCipherSuiteManagementList
        serviceMsgBackboneEnabled: true
        rxMsgRate: 6
        guaranteedMsgingDefragmentationThresholdEnabled: true
        guaranteedMsgingEventTransactionCountThreshold: null
        tlsCipherSuiteSecureShellDefaultList: tlsCipherSuiteSecureShellDefaultList
        serviceSmfPlainTextListenPort: 8
        rxCompressedByteRate: 4
        serviceSempCorsAllowAnyHostEnabled: true
        serviceSmfTlsListenPort: 3
        guaranteedMsgingDefragmentationScheduleEnabled: true
        serviceMateLinkListenPort: 0
        serviceSempLegacyTimeoutEnabled: true
        txCompressionRatio: txCompressionRatio
        txMsgCount: 1
        averageTxMsgRate: 1
        serviceHealthCheckTlsEnabled: true
        serviceWebTransportPlainTextListenPort: 0
        serviceWebTransportTlsListenPort: 2
        telemetryTraceDemoExpiryTime: 1
        configSyncAuthenticationClientCertMaxChainDepth: 9
        rxByteCount: 7
        configSyncSynchronizeUsernameEnabled: true
        serviceWebTransportEnabled: true
        tlsCipherSuiteSecureShellSupportedList: tlsCipherSuiteSecureShellSupportedList
        webManagerRedirectHttpEnabled: true
        averageTxCompressedByteRate: 7
        telemetryTraceDemoState: telemetryTraceDemoState
        guaranteedMsgingDefragmentationLastExitConditionInformation: guaranteedMsgingDefragmentationLastExitConditionInformation
        serviceRedundancyFirstListenPort: 9
        guaranteedMsgingDefragmentationScheduleTimeList: guaranteedMsgingDefragmentationScheduleTimeList
        guaranteedMsgingEventEgressFlowCountThreshold: null
        guaranteedMsgingEventEndpointCountThreshold: null
        webManagerRedirectHttpLastFailureReason: webManagerRedirectHttpLastFailureReason
        serviceSmfEventConnectionCountThreshold: null
        guaranteedMsgingDefragmentationThresholdMinInterval: 3
        telemetryTraceMode: telemetryTraceMode
        tlsCipherSuiteManagementDefaultList: tlsCipherSuiteManagementDefaultList
        serviceRestOutgoingEnabled: true
        tlsCipherSuiteMsgBackboneDefaultList: tlsCipherSuiteMsgBackboneDefaultList
        configSyncClientProfileTcpMss: 3
        txCompressedByteCount: 8
        tlsVersionSupportedList: tlsVersionSupportedList
        cspfVersion: 6
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout: 3
        guaranteedMsgingEventIngressFlowCountThreshold: null
        rxMsgCount: 0
        rxCompressionRatio: rxCompressionRatio
        guaranteedMsgingMaxMsgSpoolUsage: 7
        configSyncEnabled: true
        configSyncAuthenticationClientCertValidateDateEnabled: true
        guaranteedMsgingDefragmentationThresholdUsagePercentage: 3
        tlsCipherSuiteManagementSupportedList: tlsCipherSuiteManagementSupportedList
        averageTxUncompressedByteRate: 4
        serviceTlsEventConnectionCountThreshold: null
        rxUncompressedByteRate: 1
        configSyncClientProfileTcpKeepaliveIdle: 8
        averageBindRequestRate: 4
        guaranteedMsgingEventTransactedSessionCountThreshold: null
        tlsStandardDomainCertificateAuthoritiesEnabled: true
        serviceHealthCheckTlsListenPort: 9
    BrokerCollections:
      type: object
      properties:
        certAuthorities:
          $ref: '#/components/schemas/BrokerCollectionsCertAuthorities'
        clientCertAuthorities:
          $ref: '#/components/schemas/BrokerCollectionsClientCertAuthorities'
        configSyncLocalDatabaseRows:
          $ref: '#/components/schemas/BrokerCollectionsConfigSyncLocalDatabaseRows'
        dmrClusters:
          $ref: '#/components/schemas/BrokerCollectionsDmrClusters'
        domainCertAuthorities:
          $ref: '#/components/schemas/BrokerCollectionsDomainCertAuthorities'
        msgVpns:
          $ref: '#/components/schemas/BrokerCollectionsMsgVpns'
        oauthProfiles:
          $ref: '#/components/schemas/BrokerCollectionsOauthProfiles'
        sessions:
          $ref: '#/components/schemas/BrokerCollectionsSessions'
        standardDomainCertAuthorities:
          $ref: '#/components/schemas/BrokerCollectionsStandardDomainCertAuthorities'
        virtualHostnames:
          $ref: '#/components/schemas/BrokerCollectionsVirtualHostnames'
      example:
        sessions:
          count: 9
        clientCertAuthorities:
          count: 6
        certAuthorities:
          count: 0
        dmrClusters:
          count: 5
        oauthProfiles:
          count: 7
        msgVpns:
          count: 2
        virtualHostnames:
          count: 2
        configSyncLocalDatabaseRows:
          count: 1
        domainCertAuthorities:
          count: 5
        standardDomainCertAuthorities:
          count: 3
    BrokerCollectionsCertAuthorities:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the certAuthorities collection.
            Deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
          format: int64
      example:
        count: 0
    BrokerCollectionsClientCertAuthorities:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the clientCertAuthorities collection.
            Available since 2.19.
          format: int64
      example:
        count: 6
    BrokerCollectionsConfigSyncLocalDatabaseRows:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the configSyncLocalDatabaseRows
            collection. Available since 2.22.
          format: int64
      example:
        count: 1
    BrokerCollectionsDmrClusters:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the dmrClusters collection.
            Available since 2.11.
          format: int64
      example:
        count: 5
    BrokerCollectionsDomainCertAuthorities:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the domainCertAuthorities collection.
            Available since 2.19.
          format: int64
      example:
        count: 5
    BrokerCollectionsMsgVpns:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the msgVpns collection. Available
            since 2.11.
          format: int64
      example:
        count: 2
    BrokerCollectionsOauthProfiles:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the oauthProfiles collection.
            Available since 2.24.
          format: int64
      example:
        count: 7
    BrokerCollectionsSessions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the sessions collection. Available
            since 2.21.
          format: int64
      example:
        count: 9
    BrokerCollectionsStandardDomainCertAuthorities:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the standardDomainCertAuthorities
            collection. Available since 2.19.
          format: int64
      example:
        count: 3
    BrokerCollectionsVirtualHostnames:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the virtualHostnames collection.
            Available since 2.17.
          format: int64
      example:
        count: 2
    BrokerLinks:
      type: object
      properties:
        aboutUri:
          type: string
          description: The URI of this Broker's About object.
        certAuthoritiesUri:
          type: string
          description: The URI of this Broker's collection of Certificate Authority
            objects. Deprecated since 2.19. Replaced by clientCertAuthorities and
            domainCertAuthorities.
        clientCertAuthoritiesUri:
          type: string
          description: The URI of this Broker's collection of Client Certificate Authority
            objects. Available since 2.19.
        configSyncLocalDatabaseRowsUri:
          type: string
          description: The URI of this Broker's collection of Config Sync Local Database
            objects. Available since 2.22.
        dmrClustersUri:
          type: string
          description: The URI of this Broker's collection of Cluster objects. Available
            since 2.11.
        domainCertAuthoritiesUri:
          type: string
          description: The URI of this Broker's collection of Domain Certificate Authority
            objects. Available since 2.19.
        msgVpnsUri:
          type: string
          description: The URI of this Broker's collection of Message VPN objects.
            Available since 2.11.
        oauthProfilesUri:
          type: string
          description: The URI of this Broker's collection of OAuth Profile objects.
            Available since 2.24.
        sessionsUri:
          type: string
          description: The URI of this Broker's collection of SEMP Session objects.
            Available since 2.21.
        standardDomainCertAuthoritiesUri:
          type: string
          description: The URI of this Broker's collection of Standard Domain Certificate
            Authority objects. Available since 2.19.
        uri:
          type: string
          description: The URI of this Broker object.
        virtualHostnamesUri:
          type: string
          description: The URI of this Broker's collection of Virtual Hostname objects.
            Available since 2.17.
      example:
        virtualHostnamesUri: virtualHostnamesUri
        standardDomainCertAuthoritiesUri: standardDomainCertAuthoritiesUri
        oauthProfilesUri: oauthProfilesUri
        certAuthoritiesUri: certAuthoritiesUri
        sessionsUri: sessionsUri
        aboutUri: aboutUri
        msgVpnsUri: msgVpnsUri
        domainCertAuthoritiesUri: domainCertAuthoritiesUri
        clientCertAuthoritiesUri: clientCertAuthoritiesUri
        configSyncLocalDatabaseRowsUri: configSyncLocalDatabaseRowsUri
        uri: uri
        dmrClustersUri: dmrClustersUri
    BrokerResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/BrokerCollections'
        data:
          $ref: '#/components/schemas/Broker'
        links:
          $ref: '#/components/schemas/BrokerLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          averageRxByteRate: 7
          txMsgRate: 3
          txUncompressedByteRate: 8
          guaranteedMsgingDefragmentationLastCompletedOn: 6
          guaranteedMsgingEventMsgSpoolFileCountThreshold: null
          bindRequestRate: 5
          serviceSmfCompressionListenPort: 6
          txCompressedByteRate: 9
          serviceWebTransportWebUrlSuffix: serviceWebTransportWebUrlSuffix
          guaranteedMsgingDefragmentationStatus: guaranteedMsgingDefragmentationStatus
          guaranteedMsgingDefragmentationStatusActiveCompletionPercentage: 5
          guaranteedMsgingDefragmentationLastExitCondition: guaranteedMsgingDefragmentationLastExitCondition
          configSyncClientProfileTcpInitialCongestionWindow: 9
          webManagerRedirectHttpOverrideTlsPort: 0
          rxCompressedByteCount: 3
          averageRxUncompressedByteRate: 1
          tlsTicketLifetime: 8
          serviceSmfRoutingControlListenPort: 4
          authClientCertRevocationCheckMode: none
          serviceRestIncomingEnabled: true
          serviceSempSessionIdleTimeout: 7
          version: version
          tlsCipherSuiteSecureShellList: tlsCipherSuiteSecureShellList
          guaranteedMsgingDefragmentationThresholdFragmentationPercentage: 6
          serviceAmqpEnabled: true
          guaranteedMsgingEventDiskUsageThreshold: null
          configSyncClientProfileTcpKeepaliveInterval: 9
          serviceSempTlsEnabled: true
          averageRxCompressedByteRate: 1
          txUncompressedByteCount: 9
          oauthProfileDefault: oauthProfileDefault
          serviceEventConnectionCountThreshold: null
          rxByteRate: 5
          webManagerRedirectHttpUp: true
          guaranteedMsgingOperationalStatus: guaranteedMsgingOperationalStatus
          guaranteedMsgingEventMsgCountThreshold: null
          serviceHealthCheckListenPort: 7
          serviceRestEventOutgoingConnectionCountThreshold: null
          serviceHealthCheckEnabled: true
          serviceMateLinkEnabled: true
          configSyncClientProfileTcpMaxWindow: 6
          txByteRate: 4
          configSyncTlsEnabled: true
          guaranteedMsgingDefragmentationEstimatedFragmentation: 1
          configSyncUp: true
          guaranteedMsgingMaxCacheUsage: 8
          serviceAmqpTlsListenPort: 4
          averageTxByteRate: 6
          serviceSempTlsListenPort: 4
          rxUncompressedByteCount: 4
          serviceSempSessionMaxLifetime: 5
          tlsCipherSuiteMsgBackboneList: tlsCipherSuiteMsgBackboneList
          guaranteedMsgingDefragmentationScheduleDayList: guaranteedMsgingDefragmentationScheduleDayList
          guaranteedMsgingTransactionReplicationCompatibilityMode: legacy
          guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout: 3
          averageRxMsgRate: 1
          serviceRedundancyEnabled: true
          serviceMqttEnabled: true
          tlsBlockVersion11Enabled: true
          tlsCrimeExploitProtectionEnabled: true
          configSyncClientProfileTcpKeepaliveCount: 6
          webManagerAllowUnencryptedWizardsEnabled: true
          serviceSempPlainTextListenPort: 0
          txByteCount: 6
          guaranteedMsgingEnabled: true
          configSyncLastFailureReason: configSyncLastFailureReason
          webManagerCustomization: webManagerCustomization
          guaranteedMsgingEventMsgSpoolUsageThreshold: null
          guaranteedMsgingEventCacheUsageThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          tlsCipherSuiteMsgBackboneSupportedList: tlsCipherSuiteMsgBackboneSupportedList
          serviceSempPlainTextEnabled: true
          guaranteedMsgingEventDeliveredUnackedThreshold:
            clearPercent: 0
            setPercent: 4
          guaranteedMsgingEventTransactedSessionResourceCountThreshold: null
          guaranteedMsgingDefragmentationEstimatedRecoverableSpace: 2
          serviceSmfEnabled: true
          guaranteedMsgingDefragmentationLastCompletionPercentage: 6
          tlsCipherSuiteManagementList: tlsCipherSuiteManagementList
          serviceMsgBackboneEnabled: true
          rxMsgRate: 6
          guaranteedMsgingDefragmentationThresholdEnabled: true
          guaranteedMsgingEventTransactionCountThreshold: null
          tlsCipherSuiteSecureShellDefaultList: tlsCipherSuiteSecureShellDefaultList
          serviceSmfPlainTextListenPort: 8
          rxCompressedByteRate: 4
          serviceSempCorsAllowAnyHostEnabled: true
          serviceSmfTlsListenPort: 3
          guaranteedMsgingDefragmentationScheduleEnabled: true
          serviceMateLinkListenPort: 0
          serviceSempLegacyTimeoutEnabled: true
          txCompressionRatio: txCompressionRatio
          txMsgCount: 1
          averageTxMsgRate: 1
          serviceHealthCheckTlsEnabled: true
          serviceWebTransportPlainTextListenPort: 0
          serviceWebTransportTlsListenPort: 2
          telemetryTraceDemoExpiryTime: 1
          configSyncAuthenticationClientCertMaxChainDepth: 9
          rxByteCount: 7
          configSyncSynchronizeUsernameEnabled: true
          serviceWebTransportEnabled: true
          tlsCipherSuiteSecureShellSupportedList: tlsCipherSuiteSecureShellSupportedList
          webManagerRedirectHttpEnabled: true
          averageTxCompressedByteRate: 7
          telemetryTraceDemoState: telemetryTraceDemoState
          guaranteedMsgingDefragmentationLastExitConditionInformation: guaranteedMsgingDefragmentationLastExitConditionInformation
          serviceRedundancyFirstListenPort: 9
          guaranteedMsgingDefragmentationScheduleTimeList: guaranteedMsgingDefragmentationScheduleTimeList
          guaranteedMsgingEventEgressFlowCountThreshold: null
          guaranteedMsgingEventEndpointCountThreshold: null
          webManagerRedirectHttpLastFailureReason: webManagerRedirectHttpLastFailureReason
          serviceSmfEventConnectionCountThreshold: null
          guaranteedMsgingDefragmentationThresholdMinInterval: 3
          telemetryTraceMode: telemetryTraceMode
          tlsCipherSuiteManagementDefaultList: tlsCipherSuiteManagementDefaultList
          serviceRestOutgoingEnabled: true
          tlsCipherSuiteMsgBackboneDefaultList: tlsCipherSuiteMsgBackboneDefaultList
          configSyncClientProfileTcpMss: 3
          txCompressedByteCount: 8
          tlsVersionSupportedList: tlsVersionSupportedList
          cspfVersion: 6
          guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout: 3
          guaranteedMsgingEventIngressFlowCountThreshold: null
          rxMsgCount: 0
          rxCompressionRatio: rxCompressionRatio
          guaranteedMsgingMaxMsgSpoolUsage: 7
          configSyncEnabled: true
          configSyncAuthenticationClientCertValidateDateEnabled: true
          guaranteedMsgingDefragmentationThresholdUsagePercentage: 3
          tlsCipherSuiteManagementSupportedList: tlsCipherSuiteManagementSupportedList
          averageTxUncompressedByteRate: 4
          serviceTlsEventConnectionCountThreshold: null
          rxUncompressedByteRate: 1
          configSyncClientProfileTcpKeepaliveIdle: 8
          averageBindRequestRate: 4
          guaranteedMsgingEventTransactedSessionCountThreshold: null
          tlsStandardDomainCertificateAuthoritiesEnabled: true
          serviceHealthCheckTlsListenPort: 9
        collections:
          sessions:
            count: 9
          clientCertAuthorities:
            count: 6
          certAuthorities:
            count: 0
          dmrClusters:
            count: 5
          oauthProfiles:
            count: 7
          msgVpns:
            count: 2
          virtualHostnames:
            count: 2
          configSyncLocalDatabaseRows:
            count: 1
          domainCertAuthorities:
            count: 5
          standardDomainCertAuthorities:
            count: 3
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          virtualHostnamesUri: virtualHostnamesUri
          standardDomainCertAuthoritiesUri: standardDomainCertAuthoritiesUri
          oauthProfilesUri: oauthProfilesUri
          certAuthoritiesUri: certAuthoritiesUri
          sessionsUri: sessionsUri
          aboutUri: aboutUri
          msgVpnsUri: msgVpnsUri
          domainCertAuthoritiesUri: domainCertAuthoritiesUri
          clientCertAuthoritiesUri: clientCertAuthoritiesUri
          configSyncLocalDatabaseRowsUri: configSyncLocalDatabaseRowsUri
          uri: uri
          dmrClustersUri: dmrClustersUri
    CertAuthoritiesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/CertAuthorityCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/CertAuthority'
        links:
          type: array
          items:
            $ref: '#/components/schemas/CertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        collections:
        - ocspTlsTrustedCommonNames:
            count: 0
        - ocspTlsTrustedCommonNames:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
    CertAuthority:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority. Deprecated since 2.19.
            Replaced by clientCertAuthorities and domainCertAuthorities.
        certContent:
          type: string
          description: The PEM formatted content for the trusted root certificate
            of a Certificate Authority. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
        crlDayList:
          type: string
          description: "The scheduled CRL refresh day(s), specified as \"daily\" or\
            \ a comma-separated list of days. Days must be specified as \"Sun\", \"\
            Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", or \"Sat\", with no spaces,\
            \ and in sorted order from Sunday to Saturday. Deprecated since 2.19.\
            \ certAuthorities replaced by clientCertAuthorities and domainCertAuthorities."
        crlLastDownloadTime:
          type: integer
          description: The timestamp of the last successful CRL download. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
            Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
          format: int32
        crlLastFailureReason:
          type: string
          description: The reason for the last CRL failure. Deprecated since 2.19.
            certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
        crlLastFailureTime:
          type: integer
          description: The timestamp of the last CRL failure. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated
            since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          format: int32
        crlNextDownloadTime:
          type: integer
          description: The scheduled time of the next CRL download. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated
            since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          format: int32
        crlTimeList:
          type: string
          description: "The scheduled CRL refresh time(s), specified as \"hourly\"\
            \ or a comma-separated list of 24-hour times in the form hh:mm, or h:mm.\
            \ There must be no spaces, and times must be in sorted order from 0:00\
            \ to 23:59. Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities\
            \ and domainCertAuthorities."
        crlUp:
          type: boolean
          description: Indicates whether CRL revocation checking is operationally
            up. Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
        crlUrl:
          type: string
          description: The URL for the CRL source. This is a required attribute for
            CRL to be operational and the URL must be complete with http:// included.
            IPv6 addresses must be enclosed in square-brackets. Deprecated since 2.19.
            certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
        ocspLastFailureReason:
          type: string
          description: The reason for the last OCSP failure. Deprecated since 2.19.
            certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
        ocspLastFailureTime:
          type: integer
          description: The timestamp of the last OCSP failure. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated
            since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          format: int32
        ocspLastFailureUrl:
          type: string
          description: The URL involved in the last OCSP failure. Deprecated since
            2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
        ocspNonResponderCertEnabled:
          type: boolean
          description: Indicates whether a non-responder certificate is allowed to
            sign an OCSP response. Typically used with an OCSP override URL in cases
            where a single certificate is used to sign client certificates and OCSP
            responses. Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
        ocspOverrideUrl:
          type: string
          description: The OCSP responder URL to use for overriding the one supplied
            in the client certificate. The URL must be complete with http:// included.
            Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
        ocspTimeout:
          type: integer
          description: The timeout in seconds to receive a response from the OCSP
            responder after sending a request or making the initial connection attempt.
            Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
          format: int64
        revocationCheckEnabled:
          type: boolean
          description: Indicates whether Certificate Authority revocation checking
            is enabled. Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
      example:
        crlTimeList: crlTimeList
        ocspOverrideUrl: ocspOverrideUrl
        crlLastFailureTime: 1
        revocationCheckEnabled: true
        ocspLastFailureReason: ocspLastFailureReason
        crlDayList: crlDayList
        crlLastFailureReason: crlLastFailureReason
        crlNextDownloadTime: 5
        ocspLastFailureTime: 5
        certContent: certContent
        ocspTimeout: 2
        crlUp: true
        ocspLastFailureUrl: ocspLastFailureUrl
        certAuthorityName: certAuthorityName
        crlLastDownloadTime: 6
        ocspNonResponderCertEnabled: true
        crlUrl: crlUrl
    CertAuthorityCollections:
      type: object
      properties:
        ocspTlsTrustedCommonNames:
          $ref: '#/components/schemas/CertAuthorityCollectionsOcspTlsTrustedCommonNames'
      example:
        ocspTlsTrustedCommonNames:
          count: 0
    CertAuthorityCollectionsOcspTlsTrustedCommonNames:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the ocspTlsTrustedCommonNames
            collection. Deprecated since 2.19. Replaced by clientCertAuthorities.
          format: int64
      example:
        count: 0
    CertAuthorityLinks:
      type: object
      properties:
        ocspTlsTrustedCommonNamesUri:
          type: string
          description: The URI of this Certificate Authority's collection of OCSP
            Responder Trusted Common Name objects. Deprecated since 2.19. Replaced
            by clientCertAuthorities.
        uri:
          type: string
          description: The URI of this Certificate Authority object.
      example:
        ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
        uri: uri
    CertAuthorityOcspTlsTrustedCommonName:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority. Deprecated since 2.19.
            Replaced by clientCertAuthorities.
        ocspTlsTrustedCommonName:
          type: string
          description: The expected Trusted Common Name of the OCSP responder remote
            certificate. Deprecated since 2.19. Replaced by clientCertAuthorities.
      example:
        certAuthorityName: certAuthorityName
        ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
    CertAuthorityOcspTlsTrustedCommonNameCollections:
      type: object
    CertAuthorityOcspTlsTrustedCommonNameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this OCSP Responder Trusted Common Name object.
      example:
        uri: uri
    CertAuthorityOcspTlsTrustedCommonNameResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameCollections'
        data:
          $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    CertAuthorityOcspTlsTrustedCommonNamesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonName'
        links:
          type: array
          items:
            $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    CertAuthorityResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/CertAuthorityCollections'
        data:
          $ref: '#/components/schemas/CertAuthority'
        links:
          $ref: '#/components/schemas/CertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        collections:
          ocspTlsTrustedCommonNames:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
    ClientCertAuthoritiesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertAuthorityCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertAuthority'
        links:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        collections:
        - ocspTlsTrustedCommonNames:
            count: 0
        - ocspTlsTrustedCommonNames:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
    ClientCertAuthority:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority.
        certContent:
          type: string
          description: The PEM formatted content for the trusted root certificate
            of a client Certificate Authority.
        crlDayList:
          type: string
          description: "The scheduled CRL refresh day(s), specified as \"daily\" or\
            \ a comma-separated list of days. Days must be specified as \"Sun\", \"\
            Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", or \"Sat\", with no spaces,\
            \ and in sorted order from Sunday to Saturday. The empty-string (\"\"\
            ) can also be specified, indicating no schedule is configured (\"crlTimeList\"\
            \ must also be configured to the empty-string)."
        crlLastDownloadTime:
          type: integer
          description: The timestamp of the last successful CRL download. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        crlLastFailureReason:
          type: string
          description: The reason for the last CRL failure.
        crlLastFailureTime:
          type: integer
          description: The timestamp of the last CRL failure. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        crlNextDownloadTime:
          type: integer
          description: The scheduled time of the next CRL download. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        crlTimeList:
          type: string
          description: "The scheduled CRL refresh time(s), specified as \"hourly\"\
            \ or a comma-separated list of 24-hour times in the form hh:mm, or h:mm.\
            \ There must be no spaces, and times (up to 4) must be in sorted order\
            \ from 0:00 to 23:59. The empty-string (\"\") can also be specified, indicating\
            \ no schedule is configured (\"crlDayList\" must also be configured to\
            \ the empty-string)."
        crlUp:
          type: boolean
          description: Indicates whether CRL revocation checking is operationally
            up.
        crlUrl:
          type: string
          description: The URL for the CRL source. This is a required attribute for
            CRL to be operational and the URL must be complete with http:// included.
            IPv6 addresses must be enclosed in square-brackets.
        ocspLastFailureReason:
          type: string
          description: The reason for the last OCSP failure.
        ocspLastFailureTime:
          type: integer
          description: The timestamp of the last OCSP failure. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        ocspLastFailureUrl:
          type: string
          description: The URL involved in the last OCSP failure.
        ocspNonResponderCertEnabled:
          type: boolean
          description: Indicates whether a non-responder certificate is allowed to
            sign an OCSP response. Typically used with an OCSP override URL in cases
            where a single certificate is used to sign client certificates and OCSP
            responses.
        ocspOverrideUrl:
          type: string
          description: The OCSP responder URL to use for overriding the one supplied
            in the client certificate. The URL must be complete with http:// included.
        ocspTimeout:
          type: integer
          description: The timeout in seconds to receive a response from the OCSP
            responder after sending a request or making the initial connection attempt.
          format: int64
        revocationCheckEnabled:
          type: boolean
          description: Indicates whether Certificate Authority revocation checking
            is enabled.
      example:
        crlTimeList: crlTimeList
        ocspOverrideUrl: ocspOverrideUrl
        crlLastFailureTime: 1
        revocationCheckEnabled: true
        ocspLastFailureReason: ocspLastFailureReason
        crlDayList: crlDayList
        crlLastFailureReason: crlLastFailureReason
        crlNextDownloadTime: 5
        ocspLastFailureTime: 5
        certContent: certContent
        ocspTimeout: 2
        crlUp: true
        ocspLastFailureUrl: ocspLastFailureUrl
        certAuthorityName: certAuthorityName
        crlLastDownloadTime: 6
        ocspNonResponderCertEnabled: true
        crlUrl: crlUrl
    ClientCertAuthorityCollections:
      type: object
      properties:
        ocspTlsTrustedCommonNames:
          $ref: '#/components/schemas/ClientCertAuthorityCollectionsOcspTlsTrustedCommonNames'
      example:
        ocspTlsTrustedCommonNames:
          count: 0
    ClientCertAuthorityCollectionsOcspTlsTrustedCommonNames:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the ocspTlsTrustedCommonNames
            collection.
          format: int64
      example:
        count: 0
    ClientCertAuthorityLinks:
      type: object
      properties:
        ocspTlsTrustedCommonNamesUri:
          type: string
          description: The URI of this Client Certificate Authority's collection of
            OCSP Responder Trusted Common Name objects.
        uri:
          type: string
          description: The URI of this Client Certificate Authority object.
      example:
        ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
        uri: uri
    ClientCertAuthorityOcspTlsTrustedCommonName:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority.
        ocspTlsTrustedCommonName:
          type: string
          description: The expected Trusted Common Name of the OCSP responder remote
            certificate.
      example:
        certAuthorityName: certAuthorityName
        ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
    ClientCertAuthorityOcspTlsTrustedCommonNameCollections:
      type: object
    ClientCertAuthorityOcspTlsTrustedCommonNameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this OCSP Responder Trusted Common Name object.
      example:
        uri: uri
    ClientCertAuthorityOcspTlsTrustedCommonNameResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameCollections'
        data:
          $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    ClientCertAuthorityOcspTlsTrustedCommonNamesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonName'
        links:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    ClientCertAuthorityResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/ClientCertAuthorityCollections'
        data:
          $ref: '#/components/schemas/ClientCertAuthority'
        links:
          $ref: '#/components/schemas/ClientCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        collections:
          ocspTlsTrustedCommonNames:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
    ConfigSyncLocalDatabaseRow:
      type: object
      properties:
        lastRequest:
          type: string
          description: The last series of commands exchanged between Config Sync sites.
            Note that this value is only updated during transitions to any syncStatus
            that is not "in-sync".
        lastResult:
          type: string
          description: The result of the last exchange between Config Sync sites.
        name:
          type: string
          description: "The name is \"site\" when the row type is \"router\", otherwise\
            \ it is the Message VPN name."
        role:
          type: string
          description: "The row's role relative to the local broker. The allowed values\
            \ and their meaning are:\n\n<pre>\n\"unknown\" - The role is unknown.\n\
            \"leader\" - In HA deployments, the role of the event broker and Message\
            \ VPNs in the Config Sync database of both HA mates is always Leader.\n\
            \"follower\" - Only replication-enabled Message VPNs on standby replication\
            \ mates can have a Follower role.\n</pre>\n"
        syncStatus:
          type: string
          description: |
            The synchronization status of the row. The allowed values and their meaning are:

            <pre>
            "unknown" - The state is unknown.
            "in-sync" - The config data is synchronized between Message VPNs.
            "reconciling" - The config data is reconciling between Message VPNs.
            "blocked" - The config data is blocked from reconciling due to an error.
            "out-of-sync" - The config data is out of sync between Message VPNs.
            "down" - The state is down due to configuration.
            </pre>
        timeInState:
          type: integer
          description: "The amount of time this row has remained in the shown syncStatus,\
            \ in seconds."
          format: int32
        type:
          type: string
          description: |
            The type of the row. Can be one of "router" or "vpn". There is one "router" row and one row for each configured "vpn". Each row represents a table of information that is synchronized between Config Sync and replication mates. The allowed values and their meaning are:

            <pre>
            "router" - The Config Sync database row is for the Router.
            "vpn" - The Config Sync database row is for a Message VPN.
            </pre>
          enum:
          - router
          - vpn
      example:
        timeInState: 0
        role: role
        lastRequest: lastRequest
        lastResult: lastResult
        name: name
        type: router
        syncStatus: syncStatus
    ConfigSyncLocalDatabaseRowCollections:
      type: object
    ConfigSyncLocalDatabaseRowLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Config Sync Local Database object.
      example:
        uri: uri
    ConfigSyncLocalDatabaseRowResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/ConfigSyncLocalDatabaseRowCollections'
        data:
          $ref: '#/components/schemas/ConfigSyncLocalDatabaseRow'
        links:
          $ref: '#/components/schemas/ConfigSyncLocalDatabaseRowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          timeInState: 0
          role: role
          lastRequest: lastRequest
          lastResult: lastResult
          name: name
          type: router
          syncStatus: syncStatus
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    ConfigSyncLocalDatabaseRowsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/ConfigSyncLocalDatabaseRowCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConfigSyncLocalDatabaseRow'
        links:
          type: array
          items:
            $ref: '#/components/schemas/ConfigSyncLocalDatabaseRowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - timeInState: 0
          role: role
          lastRequest: lastRequest
          lastResult: lastResult
          name: name
          type: router
          syncStatus: syncStatus
        - timeInState: 0
          role: role
          lastRequest: lastRequest
          lastResult: lastResult
          name: name
          type: router
          syncStatus: syncStatus
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    DmrCluster:
      type: object
      properties:
        authenticationBasicEnabled:
          type: boolean
          description: Indicates whether basic authentication is enabled for Cluster
            Links.
        authenticationBasicType:
          type: string
          description: |
            The type of basic authentication to use for Cluster Links. The allowed values and their meaning are:

            <pre>
            "internal" - Use locally configured password.
            "none" - No authentication.
            </pre>
          enum:
          - internal
          - none
        authenticationClientCertEnabled:
          type: boolean
          description: Indicates whether client certificate authentication is enabled
            for Cluster Links.
        directOnlyEnabled:
          type: boolean
          description: "Indicates whether this cluster only supports direct messaging.\
            \ If true, guaranteed messages will not be transmitted through the cluster."
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        enabled:
          type: boolean
          description: Indicates whether the Cluster is enabled.
        failureReason:
          type: string
          description: The failure reason for the Cluster being down.
        nodeName:
          type: string
          description: "The name of this node in the Cluster. This is the name that\
            \ this broker (or redundant group of brokers) is know by to other nodes\
            \ in the Cluster. The name is chosen automatically to be either this broker's\
            \ Router Name or Mate Router Name, depending on which Active Standby Role\
            \ (primary or backup) this broker plays in its redundancy group."
        subscriptionDbBuildPercentage:
          type: integer
          description: Cluster Subscription Database build completion percentage.
            Available since 2.20.
          format: int64
        tlsServerCertEnforceTrustedCommonNameEnabled:
          type: boolean
          description: "Indicates whether the common name provided by the remote broker\
            \ is enforced against the list of trusted common names configured for\
            \ the Link. If enabled, the certificate's common name must match one of\
            \ the trusted common names for the Link to be accepted. Deprecated since\
            \ 2.18. Common Name validation has been replaced by Server Certificate\
            \ Name validation."
        tlsServerCertMaxChainDepth:
          type: integer
          description: The maximum allowed depth of a certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
          format: int64
        tlsServerCertValidateDateEnabled:
          type: boolean
          description: "Indicates whether validation of the \"Not Before\" and \"\
            Not After\" validity dates in the certificate is enabled. When disabled,\
            \ the certificate is accepted even if the certificate is not valid based\
            \ on these dates."
        tlsServerCertValidateNameEnabled:
          type: boolean
          description: "Enable or disable the standard TLS authentication mechanism\
            \ of verifying the name used to connect to the bridge. If enabled, the\
            \ name used to connect to the bridge is checked against the names specified\
            \ in the certificate returned by the remote router. Legacy Common Name\
            \ validation is not performed if Server Certificate Name Validation is\
            \ enabled, even if Common Name validation is also enabled. Available since\
            \ 2.18."
        up:
          type: boolean
          description: Indicates whether the Cluster is operationally up.
        uptime:
          type: integer
          description: The amount of time in seconds since the Cluster was up.
          format: int64
      example:
        nodeName: nodeName
        directOnlyEnabled: true
        enabled: true
        tlsServerCertValidateNameEnabled: true
        uptime: 2
        tlsServerCertMaxChainDepth: 5
        failureReason: failureReason
        authenticationClientCertEnabled: true
        dmrClusterName: dmrClusterName
        tlsServerCertValidateDateEnabled: true
        authenticationBasicEnabled: true
        subscriptionDbBuildPercentage: 5
        up: true
        authenticationBasicType: internal
        tlsServerCertEnforceTrustedCommonNameEnabled: true
    DmrClusterCertMatchingRule:
      type: object
      properties:
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        enabled:
          type: boolean
          description: Indicates whether a certificate matching rule is enabled.
        ruleName:
          type: string
          description: The name of the rule.
      example:
        dmrClusterName: dmrClusterName
        ruleName: ruleName
        enabled: true
    DmrClusterCertMatchingRuleAttributeFilter:
      type: object
      properties:
        attributeName:
          type: string
          description: Link Attribute to be tested.
        attributeValue:
          type: string
          description: Expected attribute value.
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        filterName:
          type: string
          description: The name of the filter.
        ruleName:
          type: string
          description: The name of the rule.
      example:
        attributeValue: attributeValue
        dmrClusterName: dmrClusterName
        filterName: filterName
        ruleName: ruleName
        attributeName: attributeName
    DmrClusterCertMatchingRuleAttributeFilterCollections:
      type: object
    DmrClusterCertMatchingRuleAttributeFilterLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Certificate Matching Rule Attribute Filter
            object.
      example:
        uri: uri
    DmrClusterCertMatchingRuleAttributeFilterResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterCertMatchingRuleAttributeFilterCollections'
        data:
          $ref: '#/components/schemas/DmrClusterCertMatchingRuleAttributeFilter'
        links:
          $ref: '#/components/schemas/DmrClusterCertMatchingRuleAttributeFilterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          attributeValue: attributeValue
          dmrClusterName: dmrClusterName
          filterName: filterName
          ruleName: ruleName
          attributeName: attributeName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    DmrClusterCertMatchingRuleAttributeFiltersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterCertMatchingRuleAttributeFilterCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterCertMatchingRuleAttributeFilter'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterCertMatchingRuleAttributeFilterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - attributeValue: attributeValue
          dmrClusterName: dmrClusterName
          filterName: filterName
          ruleName: ruleName
          attributeName: attributeName
        - attributeValue: attributeValue
          dmrClusterName: dmrClusterName
          filterName: filterName
          ruleName: ruleName
          attributeName: attributeName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    DmrClusterCertMatchingRuleCollections:
      type: object
      properties:
        attributeFilters:
          $ref: '#/components/schemas/DmrClusterCertMatchingRuleCollectionsAttributeFilters'
        conditions:
          $ref: '#/components/schemas/DmrClusterCertMatchingRuleCollectionsConditions'
      example:
        attributeFilters:
          count: 0
        conditions:
          count: 6
    DmrClusterCertMatchingRuleCollectionsAttributeFilters:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the attributeFilters collection.
          format: int64
      example:
        count: 0
    DmrClusterCertMatchingRuleCollectionsConditions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the conditions collection.
          format: int64
      example:
        count: 6
    DmrClusterCertMatchingRuleCondition:
      type: object
      properties:
        attribute:
          type: string
          description: "Link Attribute to be compared with certificate content. Either\
            \ an attribute or an expression must be provided on creation, but not\
            \ both."
        comparisonMode:
          type: string
          description: |
            The comparison mode to use. The allowed values and their meaning are:

            <pre>
            "matches-attribute" - Certificate field matches an attribute value exactly.
            "matches-expression" - Certificate field matches a glob expression.
            </pre>
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        expression:
          type: string
          description: "Glob expression to be matched with certificate content. Either\
            \ an expression or an attribute must be provided on creation, but not\
            \ both."
        ruleName:
          type: string
          description: The name of the rule.
        source:
          type: string
          description: |
            Certificate field to be compared with the Attribute. The allowed values and their meaning are:

            <pre>
            "certificate-thumbprint" - The attribute is computed as the SHA-1 hash over the entire DER-encoded contents of the client certificate.
            "common-name" - The attribute is extracted from the certificate's first instance of the Common Name attribute in the Subject DN.
            "common-name-last" - The attribute is extracted from the certificate's last instance of the Common Name attribute in the Subject DN.
            "subject-alternate-name-msupn" - The attribute is extracted from the certificate's Other Name type of the Subject Alternative Name and must have the msUPN signature.
            "uid" - The attribute is extracted from the certificate's first instance of the User Identifier attribute in the Subject DN.
            "uid-last" - The attribute is extracted from the certificate's last instance of the User Identifier attribute in the Subject DN.
            "org-unit" - The attribute is extracted from the certificate's first instance of the Org Unit attribute in the Subject DN.
            "org-unit-last" - The attribute is extracted from the certificate's last instance of the Org Unit attribute in the Subject DN.
            "issuer" - The attribute is extracted from the certificate's Issuer DN.
            "subject" - The attribute is extracted from the certificate's Subject DN.
            "serial-number" - The attribute is extracted from the certificate's Serial Number.
            "dns-name" - The attribute is extracted from the certificate's Subject Alt Name DNSName.
            "ip-address" - The attribute is extracted from the certificate's Subject Alt Name IPAddress.
            </pre>
          enum:
          - certificate-thumbprint
          - common-name
          - common-name-last
          - subject-alternate-name-msupn
          - uid
          - uid-last
          - org-unit
          - org-unit-last
          - issuer
          - subject
          - serial-number
          - dns-name
          - ip-address
      example:
        expression: expression
        comparisonMode: comparisonMode
        dmrClusterName: dmrClusterName
        ruleName: ruleName
        attribute: attribute
        source: certificate-thumbprint
    DmrClusterCertMatchingRuleConditionCollections:
      type: object
    DmrClusterCertMatchingRuleConditionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Certificate Matching Rule Condition object.
      example:
        uri: uri
    DmrClusterCertMatchingRuleConditionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterCertMatchingRuleConditionCollections'
        data:
          $ref: '#/components/schemas/DmrClusterCertMatchingRuleCondition'
        links:
          $ref: '#/components/schemas/DmrClusterCertMatchingRuleConditionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          expression: expression
          comparisonMode: comparisonMode
          dmrClusterName: dmrClusterName
          ruleName: ruleName
          attribute: attribute
          source: certificate-thumbprint
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    DmrClusterCertMatchingRuleConditionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterCertMatchingRuleConditionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterCertMatchingRuleCondition'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterCertMatchingRuleConditionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - expression: expression
          comparisonMode: comparisonMode
          dmrClusterName: dmrClusterName
          ruleName: ruleName
          attribute: attribute
          source: certificate-thumbprint
        - expression: expression
          comparisonMode: comparisonMode
          dmrClusterName: dmrClusterName
          ruleName: ruleName
          attribute: attribute
          source: certificate-thumbprint
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    DmrClusterCertMatchingRuleLinks:
      type: object
      properties:
        attributeFiltersUri:
          type: string
          description: The URI of this Certificate Matching Rule's collection of Certificate
            Matching Rule Attribute Filter objects.
        conditionsUri:
          type: string
          description: The URI of this Certificate Matching Rule's collection of Certificate
            Matching Rule Condition objects.
        uri:
          type: string
          description: The URI of this Certificate Matching Rule object.
      example:
        attributeFiltersUri: attributeFiltersUri
        conditionsUri: conditionsUri
        uri: uri
    DmrClusterCertMatchingRuleResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterCertMatchingRuleCollections'
        data:
          $ref: '#/components/schemas/DmrClusterCertMatchingRule'
        links:
          $ref: '#/components/schemas/DmrClusterCertMatchingRuleLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          dmrClusterName: dmrClusterName
          ruleName: ruleName
          enabled: true
        collections:
          attributeFilters:
            count: 0
          conditions:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          attributeFiltersUri: attributeFiltersUri
          conditionsUri: conditionsUri
          uri: uri
    DmrClusterCertMatchingRulesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterCertMatchingRuleCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterCertMatchingRule'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterCertMatchingRuleLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - dmrClusterName: dmrClusterName
          ruleName: ruleName
          enabled: true
        - dmrClusterName: dmrClusterName
          ruleName: ruleName
          enabled: true
        collections:
        - attributeFilters:
            count: 0
          conditions:
            count: 6
        - attributeFilters:
            count: 0
          conditions:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - attributeFiltersUri: attributeFiltersUri
          conditionsUri: conditionsUri
          uri: uri
        - attributeFiltersUri: attributeFiltersUri
          conditionsUri: conditionsUri
          uri: uri
    DmrClusterCollections:
      type: object
      properties:
        certMatchingRules:
          $ref: '#/components/schemas/DmrClusterCollectionsCertMatchingRules'
        links:
          $ref: '#/components/schemas/DmrClusterCollectionsLinks'
        topologyIssues:
          $ref: '#/components/schemas/DmrClusterCollectionsTopologyIssues'
      example:
        certMatchingRules:
          count: 0
        topologyIssues:
          count: 1
        links:
          count: 6
    DmrClusterCollectionsCertMatchingRules:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the certMatchingRules collection.
            Available since 2.28.
          format: int64
      example:
        count: 0
    DmrClusterCollectionsLinks:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the links collection.
          format: int64
      example:
        count: 6
    DmrClusterCollectionsTopologyIssues:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the topologyIssues collection.
          format: int64
      example:
        count: 1
    DmrClusterLink:
      type: object
      properties:
        authenticationScheme:
          type: string
          description: |
            The authentication scheme to be used by the Link which initiates connections to the remote node. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
          enum:
          - basic
          - client-certificate
        authenticationSchemeSecure:
          type: boolean
          description: Indicates whether certificate matching rules are used. Available
            since 2.28.
        clientProfileName:
          type: string
          description: The name of the Client Profile used by the Link.
        clientProfileQueueControl1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Control 1\" (C-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data."
          format: int32
        clientProfileQueueControl1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Control 1\" (C-1) priority queue, regardless of the `clientProfileQueueControl1MaxDepth`\
            \ value."
          format: int32
        clientProfileQueueDirect1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 1\" (D-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data."
          format: int32
        clientProfileQueueDirect1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 1\" (D-1) priority queue, regardless of the `clientProfileQueueDirect1MaxDepth`\
            \ value."
          format: int32
        clientProfileQueueDirect2MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 2\" (D-2) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data."
          format: int32
        clientProfileQueueDirect2MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 2\" (D-2) priority queue, regardless of the `clientProfileQueueDirect2MaxDepth`\
            \ value."
          format: int32
        clientProfileQueueDirect3MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 3\" (D-3) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data."
          format: int32
        clientProfileQueueDirect3MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 3\" (D-3) priority queue, regardless of the `clientProfileQueueDirect3MaxDepth`\
            \ value."
          format: int32
        clientProfileQueueGuaranteed1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Guaranteed 1\" (G-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data."
          format: int32
        clientProfileQueueGuaranteed1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Guaranteed 1\" (G-3) priority queue, regardless of the `clientProfileQueueGuaranteed1MaxDepth`\
            \ value."
          format: int32
        clientProfileTcpCongestionWindowSize:
          type: integer
          description: "The TCP initial congestion window size, in multiples of the\
            \ TCP Maximum Segment Size (MSS). Changing the value from its default\
            \ of 2 results in non-compliance with RFC 2581. Contact support before\
            \ changing this value."
          format: int64
        clientProfileTcpKeepaliveCount:
          type: integer
          description: The number of TCP keepalive retransmissions to be carried out
            before declaring that the remote end is not available.
          format: int64
        clientProfileTcpKeepaliveIdleTime:
          type: integer
          description: "The amount of time a connection must remain idle before TCP\
            \ begins sending keepalive probes, in seconds."
          format: int64
        clientProfileTcpKeepaliveInterval:
          type: integer
          description: "The amount of time between TCP keepalive retransmissions when\
            \ no acknowledgement is received, in seconds."
          format: int64
        clientProfileTcpMaxSegmentSize:
          type: integer
          description: "The TCP maximum segment size, in bytes. Changes are applied\
            \ to all existing connections."
          format: int64
        clientProfileTcpMaxWindowSize:
          type: integer
          description: "The TCP maximum window size, in kilobytes. Changes are applied\
            \ to all existing connections."
          format: int64
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        egressFlowWindowSize:
          type: integer
          description: The number of outstanding guaranteed messages that can be sent
            over the Link before acknowledgement is received by the sender.
          format: int64
        enabled:
          type: boolean
          description: "Indicates whether the Link is enabled. When disabled, subscription\
            \ sets of this and the remote node are not kept up-to-date, and messages\
            \ are not exchanged with the remote node. Published guaranteed messages\
            \ will be queued up for future delivery based on current subscription\
            \ sets."
        failureReason:
          type: string
          description: The failure reason for the Link being down.
        initiator:
          type: string
          description: |
            The initiator of the Link's TCP connections. The allowed values and their meaning are:

            <pre>
            "lexical" - The "higher" node-name initiates.
            "local" - The local node initiates.
            "remote" - The remote node initiates.
            </pre>
          enum:
          - lexical
          - local
          - remote
        queueDeadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ) used by the Queue
            for discarded messages.
        queueEventSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueMaxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Queue.
          format: int64
        queueMaxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage by the Queue (quota), in megabytes\
            \ (MB)."
          format: int64
        queueMaxRedeliveryCount:
          type: integer
          description: The maximum number of times the Queue will attempt redelivery
            of a message prior to it being discarded or moved to the DMQ. A value
            of 0 means to retry forever.
          format: int64
        queueMaxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in the Queue\
            \ when `queueRespectTtlEnabled` is `true`. A message expires when the\
            \ lesser of the sender assigned time-to-live (TTL) in the message and\
            \ the `queueMaxTtl` configured for the Queue, is exceeded. A value of\
            \ 0 disables expiry."
          format: int64
        queueRejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-queue-enabled
          - never
        queueRespectTtlEnabled:
          type: boolean
          description: "Indicates whether the the time-to-live (TTL) for messages\
            \ in the Queue is respected. When enabled, expired messages are discarded\
            \ or moved to the DMQ."
        remoteClusterName:
          type: string
          description: The cluster name of the remote node. Available since 2.17.
        remoteNodeName:
          type: string
          description: The name of the node at the remote end of the Link.
        span:
          type: string
          description: "The span of the Link, either internal or external. Internal\
            \ Links connect nodes within the same Cluster. External Links connect\
            \ nodes within different Clusters. The allowed values and their meaning\
            \ are:\n\n<pre>\n\"internal\" - Link to same cluster.\n\"external\" -\
            \ Link to other cluster.\n</pre>\n"
          enum:
          - internal
          - external
        transportCompressedEnabled:
          type: boolean
          description: Indicates whether compression is enabled on the Link.
        transportTlsEnabled:
          type: boolean
          description: Indicates whether encryption (TLS) is enabled on the Link.
        up:
          type: boolean
          description: Indicates whether the Link is operationally up.
        uptime:
          type: integer
          description: The amount of time in seconds since the Link was up.
          format: int64
      example:
        transportCompressedEnabled: true
        remoteNodeName: remoteNodeName
        clientProfileQueueDirect2MaxDepth: 3
        clientProfileQueueDirect1MaxDepth: 7
        clientProfileQueueDirect3MinMsgBurst: 7
        initiator: lexical
        queueMaxDeliveredUnackedMsgsPerFlow: 9
        clientProfileName: clientProfileName
        clientProfileQueueDirect3MaxDepth: 4
        queueMaxRedeliveryCount: 8
        transportTlsEnabled: true
        enabled: true
        queueDeadMsgQueue: queueDeadMsgQueue
        authenticationSchemeSecure: true
        authenticationScheme: basic
        clientProfileQueueControl1MaxDepth: 5
        clientProfileQueueDirect2MinMsgBurst: 2
        queueEventSpoolUsageThreshold:
          clearPercent: 7
          setPercent: 7
          setValue: 6
          clearValue: 0
        up: true
        clientProfileQueueControl1MinMsgBurst: 2
        queueMaxMsgSpoolUsage: 6
        clientProfileTcpKeepaliveInterval: 1
        egressFlowWindowSize: 9
        clientProfileTcpCongestionWindowSize: 1
        clientProfileQueueDirect1MinMsgBurst: 9
        queueRespectTtlEnabled: true
        remoteClusterName: remoteClusterName
        clientProfileTcpMaxWindowSize: 5
        clientProfileTcpKeepaliveCount: 6
        queueMaxTtl: 9
        uptime: 6
        clientProfileTcpKeepaliveIdleTime: 7
        queueRejectMsgToSenderOnDiscardBehavior: always
        failureReason: failureReason
        dmrClusterName: dmrClusterName
        clientProfileTcpMaxSegmentSize: 4
        clientProfileQueueGuaranteed1MaxDepth: 1
        clientProfileQueueGuaranteed1MinMsgBurst: 1
        span: internal
    DmrClusterLinkAttribute:
      type: object
      properties:
        attributeName:
          type: string
          description: The name of the Attribute.
        attributeValue:
          type: string
          description: The value of the Attribute.
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        remoteNodeName:
          type: string
          description: The name of the node at the remote end of the Link.
      example:
        remoteNodeName: remoteNodeName
        attributeValue: attributeValue
        dmrClusterName: dmrClusterName
        attributeName: attributeName
    DmrClusterLinkAttributeCollections:
      type: object
    DmrClusterLinkAttributeLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Link Attribute object.
      example:
        uri: uri
    DmrClusterLinkAttributeResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterLinkAttributeCollections'
        data:
          $ref: '#/components/schemas/DmrClusterLinkAttribute'
        links:
          $ref: '#/components/schemas/DmrClusterLinkAttributeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          remoteNodeName: remoteNodeName
          attributeValue: attributeValue
          dmrClusterName: dmrClusterName
          attributeName: attributeName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    DmrClusterLinkAttributesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkAttributeCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkAttribute'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkAttributeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - remoteNodeName: remoteNodeName
          attributeValue: attributeValue
          dmrClusterName: dmrClusterName
          attributeName: attributeName
        - remoteNodeName: remoteNodeName
          attributeValue: attributeValue
          dmrClusterName: dmrClusterName
          attributeName: attributeName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    DmrClusterLinkChannel:
      type: object
      properties:
        bridgeName:
          type: string
          description: The name of the Bridge used by the Channel.
        clientName:
          type: string
          description: The name of the Client used by the Channel.
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        establisher:
          type: boolean
          description: Indicates whether the local node established the Channel.
        failureReason:
          type: string
          description: The failure reason for the Channel being down.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        queueName:
          type: string
          description: The name of the Queue used by the Channel.
        remoteAddress:
          type: string
          description: The FQDN or IP address (and optional port) of the remote node.
        remoteNodeName:
          type: string
          description: The name of the node at the remote end of the Link.
        up:
          type: boolean
          description: Indicates whether the Channel is operationally up.
        uptime:
          type: integer
          description: The amount of time in seconds since the Channel was up.
          format: int64
      example:
        remoteNodeName: remoteNodeName
        queueName: queueName
        clientName: clientName
        failureReason: failureReason
        dmrClusterName: dmrClusterName
        msgVpnName: msgVpnName
        up: true
        bridgeName: bridgeName
        establisher: true
        remoteAddress: remoteAddress
        uptime: 0
    DmrClusterLinkChannelCollections:
      type: object
    DmrClusterLinkChannelLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Cluster Link Channels object.
      example:
        uri: uri
    DmrClusterLinkChannelResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterLinkChannelCollections'
        data:
          $ref: '#/components/schemas/DmrClusterLinkChannel'
        links:
          $ref: '#/components/schemas/DmrClusterLinkChannelLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          remoteNodeName: remoteNodeName
          queueName: queueName
          clientName: clientName
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          msgVpnName: msgVpnName
          up: true
          bridgeName: bridgeName
          establisher: true
          remoteAddress: remoteAddress
          uptime: 0
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    DmrClusterLinkChannelsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkChannelCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkChannel'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkChannelLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - remoteNodeName: remoteNodeName
          queueName: queueName
          clientName: clientName
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          msgVpnName: msgVpnName
          up: true
          bridgeName: bridgeName
          establisher: true
          remoteAddress: remoteAddress
          uptime: 0
        - remoteNodeName: remoteNodeName
          queueName: queueName
          clientName: clientName
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          msgVpnName: msgVpnName
          up: true
          bridgeName: bridgeName
          establisher: true
          remoteAddress: remoteAddress
          uptime: 0
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    DmrClusterLinkCollections:
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/DmrClusterLinkCollectionsAttributes'
        channels:
          $ref: '#/components/schemas/DmrClusterLinkCollectionsChannels'
        remoteAddresses:
          $ref: '#/components/schemas/DmrClusterLinkCollectionsRemoteAddresses'
        tlsTrustedCommonNames:
          $ref: '#/components/schemas/DmrClusterLinkCollectionsTlsTrustedCommonNames'
      example:
        channels:
          count: 6
        attributes:
          count: 0
        tlsTrustedCommonNames:
          count: 5
        remoteAddresses:
          count: 1
    DmrClusterLinkCollectionsAttributes:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the attributes collection. Available
            since 2.28.
          format: int64
      example:
        count: 0
    DmrClusterLinkCollectionsChannels:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the channels collection.
          format: int64
      example:
        count: 6
    DmrClusterLinkCollectionsRemoteAddresses:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the remoteAddresses collection.
          format: int64
      example:
        count: 1
    DmrClusterLinkCollectionsTlsTrustedCommonNames:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the tlsTrustedCommonNames collection.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
          format: int64
      example:
        count: 5
    DmrClusterLinkLinks:
      type: object
      properties:
        attributesUri:
          type: string
          description: The URI of this Link's collection of Link Attribute objects.
            Available since 2.28.
        channelsUri:
          type: string
          description: The URI of this Link's collection of Cluster Link Channels
            objects.
        remoteAddressesUri:
          type: string
          description: The URI of this Link's collection of Remote Address objects.
        tlsTrustedCommonNamesUri:
          type: string
          description: The URI of this Link's collection of Trusted Common Name objects.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
        uri:
          type: string
          description: The URI of this Link object.
      example:
        channelsUri: channelsUri
        remoteAddressesUri: remoteAddressesUri
        attributesUri: attributesUri
        uri: uri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    DmrClusterLinkRemoteAddress:
      type: object
      properties:
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        remoteAddress:
          type: string
          description: "The FQDN or IP address (and optional port) of the remote node.\
            \ If a port is not provided, it will vary based on the transport encoding:\
            \ 55555 (plain-text), 55443 (encrypted), or 55003 (compressed)."
        remoteNodeName:
          type: string
          description: The name of the node at the remote end of the Link.
      example:
        remoteNodeName: remoteNodeName
        dmrClusterName: dmrClusterName
        remoteAddress: remoteAddress
    DmrClusterLinkRemoteAddressCollections:
      type: object
    DmrClusterLinkRemoteAddressLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Remote Address object.
      example:
        uri: uri
    DmrClusterLinkRemoteAddressResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterLinkRemoteAddressCollections'
        data:
          $ref: '#/components/schemas/DmrClusterLinkRemoteAddress'
        links:
          $ref: '#/components/schemas/DmrClusterLinkRemoteAddressLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    DmrClusterLinkRemoteAddressesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkRemoteAddressCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkRemoteAddress'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkRemoteAddressLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    DmrClusterLinkResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterLinkCollections'
        data:
          $ref: '#/components/schemas/DmrClusterLink'
        links:
          $ref: '#/components/schemas/DmrClusterLinkLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 3
          clientProfileQueueDirect1MaxDepth: 7
          clientProfileQueueDirect3MinMsgBurst: 7
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 9
          clientProfileName: clientProfileName
          clientProfileQueueDirect3MaxDepth: 4
          queueMaxRedeliveryCount: 8
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationSchemeSecure: true
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 5
          clientProfileQueueDirect2MinMsgBurst: 2
          queueEventSpoolUsageThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          up: true
          clientProfileQueueControl1MinMsgBurst: 2
          queueMaxMsgSpoolUsage: 6
          clientProfileTcpKeepaliveInterval: 1
          egressFlowWindowSize: 9
          clientProfileTcpCongestionWindowSize: 1
          clientProfileQueueDirect1MinMsgBurst: 9
          queueRespectTtlEnabled: true
          remoteClusterName: remoteClusterName
          clientProfileTcpMaxWindowSize: 5
          clientProfileTcpKeepaliveCount: 6
          queueMaxTtl: 9
          uptime: 6
          clientProfileTcpKeepaliveIdleTime: 7
          queueRejectMsgToSenderOnDiscardBehavior: always
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 4
          clientProfileQueueGuaranteed1MaxDepth: 1
          clientProfileQueueGuaranteed1MinMsgBurst: 1
          span: internal
        collections:
          channels:
            count: 6
          attributes:
            count: 0
          tlsTrustedCommonNames:
            count: 5
          remoteAddresses:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          channelsUri: channelsUri
          remoteAddressesUri: remoteAddressesUri
          attributesUri: attributesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    DmrClusterLinkTlsTrustedCommonName:
      type: object
      properties:
        dmrClusterName:
          type: string
          description: The name of the Cluster. Deprecated since 2.18. Common Name
            validation has been replaced by Server Certificate Name validation.
        remoteNodeName:
          type: string
          description: The name of the node at the remote end of the Link. Deprecated
            since 2.18. Common Name validation has been replaced by Server Certificate
            Name validation.
        tlsTrustedCommonName:
          type: string
          description: The expected trusted common name of the remote certificate.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
      example:
        remoteNodeName: remoteNodeName
        dmrClusterName: dmrClusterName
        tlsTrustedCommonName: tlsTrustedCommonName
    DmrClusterLinkTlsTrustedCommonNameCollections:
      type: object
    DmrClusterLinkTlsTrustedCommonNameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Trusted Common Name object.
      example:
        uri: uri
    DmrClusterLinkTlsTrustedCommonNameResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameCollections'
        data:
          $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    DmrClusterLinkTlsTrustedCommonNamesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonName'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    DmrClusterLinks:
      type: object
      properties:
        certMatchingRulesUri:
          type: string
          description: The URI of this Cluster's collection of Certificate Matching
            Rule objects. Available since 2.28.
        linksUri:
          type: string
          description: The URI of this Cluster's collection of Link objects.
        topologyIssuesUri:
          type: string
          description: The URI of this Cluster's collection of Cluster Topology Issue
            objects.
        uri:
          type: string
          description: The URI of this Cluster object.
      example:
        certMatchingRulesUri: certMatchingRulesUri
        linksUri: linksUri
        topologyIssuesUri: topologyIssuesUri
        uri: uri
    DmrClusterLinksResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLink'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 3
          clientProfileQueueDirect1MaxDepth: 7
          clientProfileQueueDirect3MinMsgBurst: 7
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 9
          clientProfileName: clientProfileName
          clientProfileQueueDirect3MaxDepth: 4
          queueMaxRedeliveryCount: 8
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationSchemeSecure: true
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 5
          clientProfileQueueDirect2MinMsgBurst: 2
          queueEventSpoolUsageThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          up: true
          clientProfileQueueControl1MinMsgBurst: 2
          queueMaxMsgSpoolUsage: 6
          clientProfileTcpKeepaliveInterval: 1
          egressFlowWindowSize: 9
          clientProfileTcpCongestionWindowSize: 1
          clientProfileQueueDirect1MinMsgBurst: 9
          queueRespectTtlEnabled: true
          remoteClusterName: remoteClusterName
          clientProfileTcpMaxWindowSize: 5
          clientProfileTcpKeepaliveCount: 6
          queueMaxTtl: 9
          uptime: 6
          clientProfileTcpKeepaliveIdleTime: 7
          queueRejectMsgToSenderOnDiscardBehavior: always
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 4
          clientProfileQueueGuaranteed1MaxDepth: 1
          clientProfileQueueGuaranteed1MinMsgBurst: 1
          span: internal
        - transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 3
          clientProfileQueueDirect1MaxDepth: 7
          clientProfileQueueDirect3MinMsgBurst: 7
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 9
          clientProfileName: clientProfileName
          clientProfileQueueDirect3MaxDepth: 4
          queueMaxRedeliveryCount: 8
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationSchemeSecure: true
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 5
          clientProfileQueueDirect2MinMsgBurst: 2
          queueEventSpoolUsageThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          up: true
          clientProfileQueueControl1MinMsgBurst: 2
          queueMaxMsgSpoolUsage: 6
          clientProfileTcpKeepaliveInterval: 1
          egressFlowWindowSize: 9
          clientProfileTcpCongestionWindowSize: 1
          clientProfileQueueDirect1MinMsgBurst: 9
          queueRespectTtlEnabled: true
          remoteClusterName: remoteClusterName
          clientProfileTcpMaxWindowSize: 5
          clientProfileTcpKeepaliveCount: 6
          queueMaxTtl: 9
          uptime: 6
          clientProfileTcpKeepaliveIdleTime: 7
          queueRejectMsgToSenderOnDiscardBehavior: always
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 4
          clientProfileQueueGuaranteed1MaxDepth: 1
          clientProfileQueueGuaranteed1MinMsgBurst: 1
          span: internal
        collections:
        - channels:
            count: 6
          attributes:
            count: 0
          tlsTrustedCommonNames:
            count: 5
          remoteAddresses:
            count: 1
        - channels:
            count: 6
          attributes:
            count: 0
          tlsTrustedCommonNames:
            count: 5
          remoteAddresses:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - channelsUri: channelsUri
          remoteAddressesUri: remoteAddressesUri
          attributesUri: attributesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - channelsUri: channelsUri
          remoteAddressesUri: remoteAddressesUri
          attributesUri: attributesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    DmrClusterResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterCollections'
        data:
          $ref: '#/components/schemas/DmrCluster'
        links:
          $ref: '#/components/schemas/DmrClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          nodeName: nodeName
          directOnlyEnabled: true
          enabled: true
          tlsServerCertValidateNameEnabled: true
          uptime: 2
          tlsServerCertMaxChainDepth: 5
          failureReason: failureReason
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          subscriptionDbBuildPercentage: 5
          up: true
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        collections:
          certMatchingRules:
            count: 0
          topologyIssues:
            count: 1
          links:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          certMatchingRulesUri: certMatchingRulesUri
          linksUri: linksUri
          topologyIssuesUri: topologyIssuesUri
          uri: uri
    DmrClusterTopologyIssue:
      type: object
      properties:
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        topologyIssue:
          type: string
          description: The topology issue discovered in the Cluster. A topology issue
            indicates incorrect or inconsistent configuration within the DMR network.
            Such issues will cause messages to be misdelivered or lost.
      example:
        dmrClusterName: dmrClusterName
        topologyIssue: topologyIssue
    DmrClusterTopologyIssueCollections:
      type: object
    DmrClusterTopologyIssueLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Cluster Topology Issue object.
      example:
        uri: uri
    DmrClusterTopologyIssueResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterTopologyIssueCollections'
        data:
          $ref: '#/components/schemas/DmrClusterTopologyIssue'
        links:
          $ref: '#/components/schemas/DmrClusterTopologyIssueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          dmrClusterName: dmrClusterName
          topologyIssue: topologyIssue
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    DmrClusterTopologyIssuesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterTopologyIssueCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterTopologyIssue'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterTopologyIssueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - dmrClusterName: dmrClusterName
          topologyIssue: topologyIssue
        - dmrClusterName: dmrClusterName
          topologyIssue: topologyIssue
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    DmrClustersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrCluster'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - nodeName: nodeName
          directOnlyEnabled: true
          enabled: true
          tlsServerCertValidateNameEnabled: true
          uptime: 2
          tlsServerCertMaxChainDepth: 5
          failureReason: failureReason
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          subscriptionDbBuildPercentage: 5
          up: true
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        - nodeName: nodeName
          directOnlyEnabled: true
          enabled: true
          tlsServerCertValidateNameEnabled: true
          uptime: 2
          tlsServerCertMaxChainDepth: 5
          failureReason: failureReason
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          subscriptionDbBuildPercentage: 5
          up: true
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        collections:
        - certMatchingRules:
            count: 0
          topologyIssues:
            count: 1
          links:
            count: 6
        - certMatchingRules:
            count: 0
          topologyIssues:
            count: 1
          links:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - certMatchingRulesUri: certMatchingRulesUri
          linksUri: linksUri
          topologyIssuesUri: topologyIssuesUri
          uri: uri
        - certMatchingRulesUri: certMatchingRulesUri
          linksUri: linksUri
          topologyIssuesUri: topologyIssuesUri
          uri: uri
    DomainCertAuthoritiesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/DomainCertAuthorityCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DomainCertAuthority'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DomainCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - certAuthorityName: certAuthorityName
          certContent: certContent
        - certAuthorityName: certAuthorityName
          certContent: certContent
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    DomainCertAuthority:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority.
        certContent:
          type: string
          description: The PEM formatted content for the trusted root certificate
            of a domain Certificate Authority.
      example:
        certAuthorityName: certAuthorityName
        certContent: certContent
    DomainCertAuthorityCollections:
      type: object
    DomainCertAuthorityLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Domain Certificate Authority object.
      example:
        uri: uri
    DomainCertAuthorityResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/DomainCertAuthorityCollections'
        data:
          $ref: '#/components/schemas/DomainCertAuthority'
        links:
          $ref: '#/components/schemas/DomainCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          certAuthorityName: certAuthorityName
          certContent: certContent
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    EventThreshold:
      type: object
      properties:
        clearPercent:
          type: integer
          description: The clear threshold for the value of this counter as a percentage
            of its maximum value. Falling below this value will trigger a corresponding
            event.
          format: int64
        clearValue:
          type: integer
          description: The clear threshold for the absolute value of this counter.
            Falling below this value will trigger a corresponding event.
          format: int64
        setPercent:
          type: integer
          description: The set threshold for the value of this counter as a percentage
            of its maximum value. Exceeding this value will trigger a corresponding
            event.
          format: int64
        setValue:
          type: integer
          description: The set threshold for the absolute value of this counter. Exceeding
            this value will trigger a corresponding event.
          format: int64
      example:
        clearPercent: 7
        setPercent: 7
        setValue: 6
        clearValue: 0
    EventThresholdByPercent:
      type: object
      properties:
        clearPercent:
          type: integer
          description: The clear threshold for the value of this counter as a percentage
            of its maximum value. Falling below this value will trigger a corresponding
            event.
          format: int64
        setPercent:
          type: integer
          description: The set threshold for the value of this counter as a percentage
            of its maximum value. Exceeding this value will trigger a corresponding
            event.
          format: int64
      example:
        clearPercent: 0
        setPercent: 4
    EventThresholdByValue:
      type: object
      properties:
        clearValue:
          type: integer
          description: The clear threshold for the absolute value of this counter
            or rate. Falling below this value will trigger a corresponding event.
          format: int64
        setValue:
          type: integer
          description: The set threshold for the absolute value of this counter or
            rate. Exceeding this value will trigger a corresponding event.
          format: int64
      example:
        setValue: 3
        clearValue: 4
    MsgVpn:
      type: object
      properties:
        alias:
          type: string
          description: The name of another Message VPN which this Message VPN is an
            alias for. Available since 2.14.
        authenticationBasicEnabled:
          type: boolean
          description: Indicates whether basic authentication is enabled for clients
            connecting to the Message VPN.
        authenticationBasicProfileName:
          type: string
          description: The name of the RADIUS or LDAP Profile to use for basic authentication.
        authenticationBasicRadiusDomain:
          type: string
          description: The RADIUS domain to use for basic authentication.
        authenticationBasicType:
          type: string
          description: |
            The type of basic authentication to use for clients connecting to the Message VPN. The allowed values and their meaning are:

            <pre>
            "internal" - Internal database. Authentication is against Client Usernames.
            "ldap" - LDAP authentication. An LDAP profile name must be provided.
            "radius" - RADIUS authentication. A RADIUS profile name must be provided.
            "none" - No authentication. Anonymous login allowed.
            </pre>
          enum:
          - internal
          - ldap
          - radius
          - none
        authenticationClientCertAllowApiProvidedUsernameEnabled:
          type: boolean
          description: "Indicates whether a client is allowed to specify a Client\
            \ Username via the API connect method. When disabled, the certificate\
            \ CN (Common Name) is always used."
        authenticationClientCertCertificateMatchingRulesEnabled:
          type: boolean
          description: Indicates whether client certificate matching rules are enabled
            in the Message VPN. Available since 2.27.
        authenticationClientCertEnabled:
          type: boolean
          description: Indicates whether client certificate authentication is enabled
            in the Message VPN.
        authenticationClientCertMaxChainDepth:
          type: integer
          description: The maximum depth for a client certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
          format: int64
        authenticationClientCertRevocationCheckMode:
          type: string
          description: "The desired behavior for client certificate revocation checking.\
            \ The allowed values and their meaning are:\n\n<pre>\n\"allow-all\" -\
            \ Allow the client to authenticate, the result of client certificate revocation\
            \ check is ignored.\n\"allow-unknown\" - Allow the client to authenticate\
            \ even if the revocation status of his certificate cannot be determined.\n\
            \"allow-valid\" - Allow the client to authenticate only when the revocation\
            \ check returned an explicit positive response.\n</pre>\n"
          enum:
          - allow-all
          - allow-unknown
          - allow-valid
        authenticationClientCertUsernameSource:
          type: string
          description: |
            The field from the client certificate to use as the client username. The allowed values and their meaning are:

            <pre>
            "certificate-thumbprint" - The username is computed as the SHA-1 hash over the entire DER-encoded contents of the client certificate.
            "common-name" - The username is extracted from the certificate's first instance of the Common Name attribute in the Subject DN.
            "common-name-last" - The username is extracted from the certificate's last instance of the Common Name attribute in the Subject DN.
            "subject-alternate-name-msupn" - The username is extracted from the certificate's Other Name type of the Subject Alternative Name and must have the msUPN signature.
            "uid" - The username is extracted from the certificate's first instance of the User Identifier attribute in the Subject DN.
            "uid-last" - The username is extracted from the certificate's last instance of the User Identifier attribute in the Subject DN.
            </pre>
          enum:
          - certificate-thumbprint
          - common-name
          - common-name-last
          - subject-alternate-name-msupn
          - uid
          - uid-last
        authenticationClientCertValidateDateEnabled:
          type: boolean
          description: Indicates whether the "Not Before" and "Not After" validity
            dates in the client certificate are checked.
        authenticationKerberosAllowApiProvidedUsernameEnabled:
          type: boolean
          description: "Indicates whether a client is allowed to specify a Client\
            \ Username via the API connect method. When disabled, the Kerberos Principal\
            \ name is always used."
        authenticationKerberosEnabled:
          type: boolean
          description: Indicates whether Kerberos authentication is enabled in the
            Message VPN.
        authenticationOauthDefaultProfileName:
          type: string
          description: The name of the profile to use when the client does not supply
            a profile name. Available since 2.25.
        authenticationOauthDefaultProviderName:
          type: string
          description: The name of the provider to use when the client does not supply
            a provider name. Deprecated since 2.25. authenticationOauthDefaultProviderName
            and authenticationOauthProviders replaced by authenticationOauthDefaultProfileName
            and authenticationOauthProfiles.
        authenticationOauthEnabled:
          type: boolean
          description: Indicates whether OAuth authentication is enabled. Available
            since 2.13.
        authorizationLdapGroupMembershipAttributeName:
          type: string
          description: The name of the attribute that is retrieved from the LDAP server
            as part of the LDAP search when authorizing a client connecting to the
            Message VPN.
        authorizationLdapTrimClientUsernameDomainEnabled:
          type: boolean
          description: Indicates whether client-username domain trimming for LDAP
            lookups of client connections is enabled. Available since 2.13.
        authorizationProfileName:
          type: string
          description: The name of the LDAP Profile to use for client authorization.
        authorizationType:
          type: string
          description: |
            The type of authorization to use for clients connecting to the Message VPN. The allowed values and their meaning are:

            <pre>
            "ldap" - LDAP authorization.
            "internal" - Internal authorization.
            </pre>
          enum:
          - ldap
          - internal
        averageBindRequestRate:
          type: integer
          description: "The one minute average of the bind request rate received by\
            \ the MsgVpn, in binds per second (binds/sec). Available since 2.25."
          format: int64
        averageRxByteRate:
          type: integer
          description: "The one minute average of the message rate received by the\
            \ Message VPN, in bytes per second (B/sec). Available since 2.13."
          format: int64
        averageRxCompressedByteRate:
          type: integer
          description: "The one minute average of the compressed message rate received\
            \ by the Message VPN, in bytes per second (B/sec). Available since 2.12."
          format: int64
        averageRxMsgRate:
          type: integer
          description: "The one minute average of the message rate received by the\
            \ Message VPN, in messages per second (msg/sec). Available since 2.13."
          format: int64
        averageRxUncompressedByteRate:
          type: integer
          description: "The one minute average of the uncompressed message rate received\
            \ by the Message VPN, in bytes per second (B/sec). Available since 2.12."
          format: int64
        averageTxByteRate:
          type: integer
          description: "The one minute average of the message rate transmitted by\
            \ the Message VPN, in bytes per second (B/sec). Available since 2.13."
          format: int64
        averageTxCompressedByteRate:
          type: integer
          description: "The one minute average of the compressed message rate transmitted\
            \ by the Message VPN, in bytes per second (B/sec). Available since 2.12."
          format: int64
        averageTxMsgRate:
          type: integer
          description: "The one minute average of the message rate transmitted by\
            \ the Message VPN, in messages per second (msg/sec). Available since 2.13."
          format: int64
        averageTxUncompressedByteRate:
          type: integer
          description: "The one minute average of the uncompressed message rate transmitted\
            \ by the Message VPN, in bytes per second (B/sec). Available since 2.12."
          format: int64
        bindRequestRate:
          type: integer
          description: "The current bind request rate received by the MsgVpn, in binds\
            \ per second (binds/sec). Available since 2.25."
          format: int64
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled:
          type: boolean
          description: Indicates whether the Common Name (CN) in the server certificate
            from the remote broker is validated for the Bridge. Deprecated since 2.18.
            Common Name validation has been replaced by Server Certificate Name validation.
        bridgingTlsServerCertMaxChainDepth:
          type: integer
          description: The maximum depth for a server certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
          format: int64
        bridgingTlsServerCertValidateDateEnabled:
          type: boolean
          description: Indicates whether the "Not Before" and "Not After" validity
            dates in the server certificate are checked.
        bridgingTlsServerCertValidateNameEnabled:
          type: boolean
          description: "Enable or disable the standard TLS authentication mechanism\
            \ of verifying the name used to connect to the bridge. If enabled, the\
            \ name used to connect to the bridge is checked against the names specified\
            \ in the certificate returned by the remote router. Legacy Common Name\
            \ validation is not performed if Server Certificate Name Validation is\
            \ enabled, even if Common Name validation is also enabled. Available since\
            \ 2.18."
        configSyncLocalKey:
          type: string
          description: The key for the config sync table of the local Message VPN.
            Deprecated since 2.22. This attribute has been deprecated.
        configSyncLocalLastResult:
          type: string
          description: The result of the last operation on the config sync table of
            the local Message VPN. Deprecated since 2.22. This attribute has been
            replaced by 'lastResult' in the ConfigSyncLocalDatabaseRow object.
        configSyncLocalRole:
          type: string
          description: |-
            The role of the config sync table of the local Message VPN. The allowed values and their meaning are:

            <pre>
            "unknown" - The role is unknown.
            "primary" - Acts as the primary source of config data.
            "replica" - Acts as a replica of the primary config data.
            </pre>
             Deprecated since 2.22. This attribute has been replaced by 'role' in the ConfigSyncLocalDatabaseRow object.
        configSyncLocalState:
          type: string
          description: |-
            The state of the config sync table of the local Message VPN. The allowed values and their meaning are:

            <pre>
            "unknown" - The state is unknown.
            "in-sync" - The config data is synchronized between Message VPNs.
            "reconciling" - The config data is reconciling between Message VPNs.
            "blocked" - The config data is blocked from reconciling due to an error.
            "out-of-sync" - The config data is out of sync between Message VPNs.
            "down" - The state is down due to configuration.
            </pre>
             Deprecated since 2.22. This attribute has been replaced by 'syncStatus' in the ConfigSyncLocalDatabaseRow object.
        configSyncLocalTimeInState:
          type: integer
          description: The amount of time in seconds the config sync table of the
            local Message VPN has been in the current state. Deprecated since 2.22.
            This attribute has been replaced by 'timeInState' in the ConfigSyncLocalDatabaseRow
            object.
          format: int32
        controlRxByteCount:
          type: integer
          description: "The amount of client control messages received from clients\
            \ by the Message VPN, in bytes (B). Available since 2.13."
          format: int64
        controlRxMsgCount:
          type: integer
          description: The number of client control messages received from clients
            by the Message VPN. Available since 2.13.
          format: int64
        controlTxByteCount:
          type: integer
          description: "The amount of client control messages transmitted to clients\
            \ by the Message VPN, in bytes (B). Available since 2.13."
          format: int64
        controlTxMsgCount:
          type: integer
          description: The number of client control messages transmitted to clients
            by the Message VPN. Available since 2.13.
          format: int64
        counter:
          $ref: '#/components/schemas/MsgVpnCounter'
        dataRxByteCount:
          type: integer
          description: "The amount of client data messages received from clients by\
            \ the Message VPN, in bytes (B). Available since 2.13."
          format: int64
        dataRxMsgCount:
          type: integer
          description: The number of client data messages received from clients by
            the Message VPN. Available since 2.13.
          format: int64
        dataTxByteCount:
          type: integer
          description: "The amount of client data messages transmitted to clients\
            \ by the Message VPN, in bytes (B). Available since 2.13."
          format: int64
        dataTxMsgCount:
          type: integer
          description: The number of client data messages transmitted to clients by
            the Message VPN. Available since 2.13.
          format: int64
        discardedRxMsgCount:
          type: integer
          description: The number of messages discarded during reception by the Message
            VPN. Available since 2.13.
          format: int64
        discardedTxMsgCount:
          type: integer
          description: The number of messages discarded during transmission by the
            Message VPN. Available since 2.13.
          format: int64
        distributedCacheManagementEnabled:
          type: boolean
          description: Indicates whether managing of cache instances over the message
            bus is enabled in the Message VPN. Deprecated since 2.28. Distributed
            cache mangement is now redundancy aware and thus no longer requires administrative
            intervention for operational state.
        dmrEnabled:
          type: boolean
          description: Indicates whether Dynamic Message Routing (DMR) is enabled
            for the Message VPN.
        enabled:
          type: boolean
          description: Indicates whether the Message VPN is enabled.
        eventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventEndpointCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventLargeMsgThreshold:
          type: integer
          description: Exceeding this message size in kilobytes (KB) triggers a corresponding
            Event in the Message VPN.
          format: int64
        eventLogTag:
          type: string
          description: The value of the prefix applied to all published Events in
            the Message VPN.
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventPublishClientEnabled:
          type: boolean
          description: Indicates whether client Events are published in the Message
            VPN.
        eventPublishMsgVpnEnabled:
          type: boolean
          description: Indicates whether Message VPN Events are published in the Message
            VPN.
        eventPublishSubscriptionMode:
          type: string
          description: "The mode of subscription Events published in the Message VPN.\
            \ The allowed values and their meaning are:\n\n<pre>\n\"off\" - Disable\
            \ client level event message publishing.\n\"on-with-format-v1\" - Enable\
            \ client level event message publishing with format v1.\n\"on-with-no-unsubscribe-events-on-disconnect-format-v1\"\
            \ - As \"on-with-format-v1\", but unsubscribe events are not generated\
            \ when a client disconnects. Unsubscribe events are still raised when\
            \ a client explicitly unsubscribes from its subscriptions.\n\"on-with-format-v2\"\
            \ - Enable client level event message publishing with format v2.\n\"on-with-no-unsubscribe-events-on-disconnect-format-v2\"\
            \ - As \"on-with-format-v2\", but unsubscribe events are not generated\
            \ when a client disconnects. Unsubscribe events are still raised when\
            \ a client explicitly unsubscribes from its subscriptions.\n</pre>\n"
          enum:
          - "off"
          - on-with-format-v1
          - on-with-no-unsubscribe-events-on-disconnect-format-v1
          - on-with-format-v2
          - on-with-no-unsubscribe-events-on-disconnect-format-v2
        eventPublishTopicFormatMqttEnabled:
          type: boolean
          description: Indicates whether Message VPN Events are published in the MQTT
            format.
        eventPublishTopicFormatSmfEnabled:
          type: boolean
          description: Indicates whether Message VPN Events are published in the SMF
            format.
        eventServiceAmqpConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceMqttConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceRestIncomingConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceSmfConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceWebConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSubscriptionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        exportSubscriptionsEnabled:
          type: boolean
          description: Indicates whether exports of subscriptions to other routers
            in the network over neighbour links is enabled in the Message VPN.
        failureReason:
          type: string
          description: The reason for the Message VPN failure.
        jndiEnabled:
          type: boolean
          description: Indicates whether the JNDI access for clients is enabled in
            the Message VPN.
        loginRxMsgCount:
          type: integer
          description: The number of login request messages received by the Message
            VPN. Available since 2.13.
          format: int64
        loginTxMsgCount:
          type: integer
          description: The number of login response messages transmitted by the Message
            VPN. Available since 2.13.
          format: int64
        maxConnectionCount:
          type: integer
          description: The maximum number of client connections to the Message VPN.
          format: int64
        maxEffectiveEndpointCount:
          type: integer
          description: The effective maximum number of Queues and Topic Endpoints
            allowed in the Message VPN.
          format: int32
        maxEffectiveRxFlowCount:
          type: integer
          description: The effective maximum number of receive flows allowed in the
            Message VPN.
          format: int32
        maxEffectiveSubscriptionCount:
          type: integer
          description: The effective maximum number of subscriptions allowed in the
            Message VPN.
          format: int64
        maxEffectiveTransactedSessionCount:
          type: integer
          description: The effective maximum number of transacted sessions allowed
            in the Message VPN.
          format: int32
        maxEffectiveTransactionCount:
          type: integer
          description: The effective maximum number of transactions allowed in the
            Message VPN.
          format: int32
        maxEffectiveTxFlowCount:
          type: integer
          description: The effective maximum number of transmit flows allowed in the
            Message VPN.
          format: int32
        maxEgressFlowCount:
          type: integer
          description: The maximum number of transmit flows that can be created in
            the Message VPN.
          format: int64
        maxEndpointCount:
          type: integer
          description: The maximum number of Queues and Topic Endpoints that can be
            created in the Message VPN.
          format: int64
        maxIngressFlowCount:
          type: integer
          description: The maximum number of receive flows that can be created in
            the Message VPN.
          format: int64
        maxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage by the Message VPN, in megabytes."
          format: int64
        maxSubscriptionCount:
          type: integer
          description: "The maximum number of local client subscriptions that can\
            \ be added to the Message VPN. This limit is not enforced when a subscription\
            \ is added using a management interface, such as CLI or SEMP."
          format: int64
        maxTransactedSessionCount:
          type: integer
          description: The maximum number of transacted sessions that can be created
            in the Message VPN.
          format: int64
        maxTransactionCount:
          type: integer
          description: The maximum number of transactions that can be created in the
            Message VPN.
          format: int64
        mqttRetainMaxMemory:
          type: integer
          description: "The maximum total memory usage of the MQTT Retain feature\
            \ for this Message VPN, in MB. If the maximum memory is reached, any arriving\
            \ retain messages that require more memory are discarded. A value of -1\
            \ indicates that the memory is bounded only by the global max memory limit.\
            \ A value of 0 prevents MQTT Retain from becoming operational."
          format: int32
        msgReplayActiveCount:
          type: integer
          description: The number of message replays that are currently active in
            the Message VPN.
          format: int32
        msgReplayFailedCount:
          type: integer
          description: The number of message replays that are currently failed in
            the Message VPN.
          format: int32
        msgReplayInitializingCount:
          type: integer
          description: The number of message replays that are currently initializing
            in the Message VPN.
          format: int32
        msgReplayPendingCompleteCount:
          type: integer
          description: The number of message replays that are pending complete in
            the Message VPN.
          format: int32
        msgSpoolMsgCount:
          type: integer
          description: The current number of messages spooled (persisted in the Message
            Spool) in the Message VPN. Available since 2.14.
          format: int64
        msgSpoolRxMsgCount:
          type: integer
          description: The number of guaranteed messages received by the Message VPN.
            Available since 2.13.
          format: int64
        msgSpoolTxMsgCount:
          type: integer
          description: The number of guaranteed messages transmitted by the Message
            VPN. One message to multiple clients is counted as one message. Available
            since 2.13.
          format: int64
        msgSpoolUsage:
          type: integer
          description: "The current message spool usage by the Message VPN, in bytes\
            \ (B)."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        rate:
          $ref: '#/components/schemas/MsgVpnRate'
        replicationAckPropagationIntervalMsgCount:
          type: integer
          description: "The acknowledgement (ACK) propagation interval for the replication\
            \ Bridge, in number of replicated messages. Available since 2.12."
          format: int64
        replicationActiveAckPropTxMsgCount:
          type: integer
          description: The number of acknowledgement messages propagated to the replication
            standby remote Message VPN. Available since 2.12.
          format: int64
        replicationActiveAsyncQueuedMsgCount:
          type: integer
          description: The number of async messages queued to the replication standby
            remote Message VPN. Available since 2.12.
          format: int64
        replicationActiveLocallyConsumedMsgCount:
          type: integer
          description: The number of messages consumed in the replication active local
            Message VPN. Available since 2.12.
          format: int64
        replicationActiveMateFlowCongestedPeakTime:
          type: integer
          description: The peak amount of time in seconds the message flow has been
            congested to the replication standby remote Message VPN. Available since
            2.12.
          format: int32
        replicationActiveMateFlowNotCongestedPeakTime:
          type: integer
          description: The peak amount of time in seconds the message flow has not
            been congested to the replication standby remote Message VPN. Available
            since 2.12.
          format: int32
        replicationActivePromotedQueuedMsgCount:
          type: integer
          description: The number of promoted messages queued to the replication standby
            remote Message VPN. Available since 2.12.
          format: int64
        replicationActiveReconcileRequestRxMsgCount:
          type: integer
          description: The number of reconcile request messages received from the
            replication standby remote Message VPN. Available since 2.12.
          format: int64
        replicationActiveSyncEligiblePeakTime:
          type: integer
          description: The peak amount of time in seconds sync replication has been
            eligible to the replication standby remote Message VPN. Available since
            2.12.
          format: int32
        replicationActiveSyncIneligiblePeakTime:
          type: integer
          description: The peak amount of time in seconds sync replication has been
            ineligible to the replication standby remote Message VPN. Available since
            2.12.
          format: int32
        replicationActiveSyncQueuedAsAsyncMsgCount:
          type: integer
          description: The number of sync messages queued as async to the replication
            standby remote Message VPN. Available since 2.12.
          format: int64
        replicationActiveSyncQueuedMsgCount:
          type: integer
          description: The number of sync messages queued to the replication standby
            remote Message VPN. Available since 2.12.
          format: int64
        replicationActiveTransitionToSyncIneligibleCount:
          type: integer
          description: The number of sync replication ineligible transitions to the
            replication standby remote Message VPN. Available since 2.12.
          format: int64
        replicationBridgeAuthenticationBasicClientUsername:
          type: string
          description: The Client Username the replication Bridge uses to login to
            the remote Message VPN. Available since 2.12.
        replicationBridgeAuthenticationScheme:
          type: string
          description: |-
            The authentication scheme for the replication Bridge in the Message VPN. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
             Available since 2.12.
          enum:
          - basic
          - client-certificate
        replicationBridgeBoundToQueue:
          type: boolean
          description: Indicates whether the local replication Bridge is bound to
            the Queue in the remote Message VPN. Available since 2.12.
        replicationBridgeCompressedDataEnabled:
          type: boolean
          description: Indicates whether compression is used for the replication Bridge.
            Available since 2.12.
        replicationBridgeEgressFlowWindowSize:
          type: integer
          description: "The size of the window used for guaranteed messages published\
            \ to the replication Bridge, in messages. Available since 2.12."
          format: int64
        replicationBridgeName:
          type: string
          description: The name of the local replication Bridge in the Message VPN.
            Available since 2.12.
        replicationBridgeRetryDelay:
          type: integer
          description: The number of seconds that must pass before retrying the replication
            Bridge connection. Available since 2.12.
          format: int64
        replicationBridgeTlsEnabled:
          type: boolean
          description: Indicates whether encryption (TLS) is enabled for the replication
            Bridge connection. Available since 2.12.
        replicationBridgeUnidirectionalClientProfileName:
          type: string
          description: The Client Profile for the unidirectional replication Bridge
            in the Message VPN. It is used only for the TCP parameters. Available
            since 2.12.
        replicationBridgeUp:
          type: boolean
          description: Indicates whether the local replication Bridge is operationally
            up in the Message VPN. Available since 2.12.
        replicationEnabled:
          type: boolean
          description: Indicates whether replication is enabled for the Message VPN.
            Available since 2.12.
        replicationQueueBound:
          type: boolean
          description: Indicates whether the remote replication Bridge is bound to
            the Queue in the Message VPN. Available since 2.12.
        replicationQueueMaxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage by the replication Bridge\
            \ local Queue (quota), in megabytes. Available since 2.12."
          format: int64
        replicationQueueRejectMsgToSenderOnDiscardEnabled:
          type: boolean
          description: Indicates whether messages discarded on this replication Bridge
            Queue are rejected back to the sender. Available since 2.12.
        replicationRejectMsgWhenSyncIneligibleEnabled:
          type: boolean
          description: Indicates whether guaranteed messages published to synchronously
            replicated Topics are rejected back to the sender when synchronous replication
            becomes ineligible. Available since 2.12.
        replicationRemoteBridgeName:
          type: string
          description: The name of the remote replication Bridge in the Message VPN.
            Available since 2.12.
        replicationRemoteBridgeUp:
          type: boolean
          description: Indicates whether the remote replication Bridge is operationally
            up in the Message VPN. Available since 2.12.
        replicationRole:
          type: string
          description: |-
            The replication role for the Message VPN. The allowed values and their meaning are:

            <pre>
            "active" - Assume the Active role in replication for the Message VPN.
            "standby" - Assume the Standby role in replication for the Message VPN.
            </pre>
             Available since 2.12.
          enum:
          - active
          - standby
        replicationStandbyAckPropOutOfSeqRxMsgCount:
          type: integer
          description: The number of acknowledgement messages received out of sequence
            from the replication active remote Message VPN. Available since 2.12.
          format: int64
        replicationStandbyAckPropRxMsgCount:
          type: integer
          description: The number of acknowledgement messages received from the replication
            active remote Message VPN. Available since 2.12.
          format: int64
        replicationStandbyReconcileRequestTxMsgCount:
          type: integer
          description: The number of reconcile request messages transmitted to the
            replication active remote Message VPN. Available since 2.12.
          format: int64
        replicationStandbyRxMsgCount:
          type: integer
          description: The number of messages received from the replication active
            remote Message VPN. Available since 2.12.
          format: int64
        replicationStandbyTransactionRequestCount:
          type: integer
          description: The number of transaction requests received from the replication
            active remote Message VPN. Available since 2.12.
          format: int64
        replicationStandbyTransactionRequestFailureCount:
          type: integer
          description: The number of transaction requests received from the replication
            active remote Message VPN that failed. Available since 2.12.
          format: int64
        replicationStandbyTransactionRequestSuccessCount:
          type: integer
          description: The number of transaction requests received from the replication
            active remote Message VPN that succeeded. Available since 2.12.
          format: int64
        replicationSyncEligible:
          type: boolean
          description: Indicates whether sync replication is eligible in the Message
            VPN. Available since 2.12.
        replicationTransactionMode:
          type: string
          description: |-
            Indicates whether synchronous or asynchronous replication mode is used for all transactions within the Message VPN. The allowed values and their meaning are:

            <pre>
            "sync" - Messages are acknowledged when replicated (spooled remotely).
            "async" - Messages are acknowledged when pending replication (spooled locally).
            </pre>
             Available since 2.12.
          enum:
          - sync
          - async
        restTlsServerCertEnforceTrustedCommonNameEnabled:
          type: boolean
          description: Indicates whether the Common Name (CN) in the server certificate
            from the remote REST Consumer is validated. Deprecated since 2.17. Common
            Name validation has been replaced by Server Certificate Name validation.
        restTlsServerCertMaxChainDepth:
          type: integer
          description: The maximum depth for a REST Consumer server certificate chain.
            The depth of a chain is defined as the number of signing CA certificates
            that are present in the chain back to a trusted self-signed root CA certificate.
          format: int64
        restTlsServerCertValidateDateEnabled:
          type: boolean
          description: Indicates whether the "Not Before" and "Not After" validity
            dates in the REST Consumer server certificate are checked.
        restTlsServerCertValidateNameEnabled:
          type: boolean
          description: "Enable or disable the standard TLS authentication mechanism\
            \ of verifying the name used to connect to the remote REST Consumer. If\
            \ enabled, the name used to connect to the remote REST Consumer is checked\
            \ against the names specified in the certificate returned by the remote\
            \ router. Legacy Common Name validation is not performed if Server Certificate\
            \ Name Validation is enabled, even if Common Name validation is also enabled.\
            \ Available since 2.17."
        rxByteCount:
          type: integer
          description: "The amount of messages received from clients by the Message\
            \ VPN, in bytes (B). Available since 2.12."
          format: int64
        rxByteRate:
          type: integer
          description: "The current message rate received by the Message VPN, in bytes\
            \ per second (B/sec). Available since 2.13."
          format: int64
        rxCompressedByteCount:
          type: integer
          description: "The amount of compressed messages received by the Message\
            \ VPN, in bytes (B). Available since 2.12."
          format: int64
        rxCompressedByteRate:
          type: integer
          description: "The current compressed message rate received by the Message\
            \ VPN, in bytes per second (B/sec). Available since 2.12."
          format: int64
        rxCompressionRatio:
          type: string
          description: The compression ratio for messages received by the message
            VPN. Available since 2.12.
        rxMsgCount:
          type: integer
          description: The number of messages received from clients by the Message
            VPN. Available since 2.12.
          format: int64
        rxMsgRate:
          type: integer
          description: "The current message rate received by the Message VPN, in messages\
            \ per second (msg/sec). Available since 2.13."
          format: int64
        rxUncompressedByteCount:
          type: integer
          description: "The amount of uncompressed messages received by the Message\
            \ VPN, in bytes (B). Available since 2.12."
          format: int64
        rxUncompressedByteRate:
          type: integer
          description: "The current uncompressed message rate received by the Message\
            \ VPN, in bytes per second (B/sec). Available since 2.12."
          format: int64
        sempOverMsgBusAdminClientEnabled:
          type: boolean
          description: Indicates whether the "admin" level "client" commands are enabled
            for SEMP over the message bus in the Message VPN.
        sempOverMsgBusAdminDistributedCacheEnabled:
          type: boolean
          description: Indicates whether the "admin" level "Distributed Cache" commands
            are enabled for SEMP over the message bus in the Message VPN.
        sempOverMsgBusAdminEnabled:
          type: boolean
          description: Indicates whether the "admin" level commands are enabled for
            SEMP over the message bus in the Message VPN.
        sempOverMsgBusEnabled:
          type: boolean
          description: Indicates whether SEMP over the message bus is enabled in the
            Message VPN.
        sempOverMsgBusShowEnabled:
          type: boolean
          description: Indicates whether the "show" level commands are enabled for
            SEMP over the message bus in the Message VPN.
        serviceAmqpMaxConnectionCount:
          type: integer
          description: The maximum number of AMQP client connections that can be simultaneously
            connected to the Message VPN. This value may be higher than supported
            by the platform.
          format: int64
        serviceAmqpPlainTextCompressed:
          type: boolean
          description: Indicates whether the AMQP Service is compressed in the Message
            VPN.
        serviceAmqpPlainTextEnabled:
          type: boolean
          description: Indicates whether the AMQP Service is enabled in the Message
            VPN.
        serviceAmqpPlainTextFailureReason:
          type: string
          description: The reason for the AMQP Service failure in the Message VPN.
        serviceAmqpPlainTextListenPort:
          type: integer
          description: The port number for plain-text AMQP clients that connect to
            the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
        serviceAmqpPlainTextUp:
          type: boolean
          description: Indicates whether the AMQP Service is operationally up in the
            Message VPN.
        serviceAmqpTlsCompressed:
          type: boolean
          description: Indicates whether the TLS related AMQP Service is compressed
            in the Message VPN.
        serviceAmqpTlsEnabled:
          type: boolean
          description: Indicates whether encryption (TLS) is enabled for AMQP clients
            in the Message VPN.
        serviceAmqpTlsFailureReason:
          type: string
          description: The reason for the TLS related AMQP Service failure in the
            Message VPN.
        serviceAmqpTlsListenPort:
          type: integer
          description: The port number for AMQP clients that connect to the Message
            VPN over TLS. The port must be unique across the message backbone. A value
            of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
        serviceAmqpTlsUp:
          type: boolean
          description: Indicates whether the TLS related AMQP Service is operationally
            up in the Message VPN.
        serviceMqttAuthenticationClientCertRequest:
          type: string
          description: |-
            Determines when to request a client certificate from an incoming MQTT client connecting via a TLS port. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
        serviceMqttMaxConnectionCount:
          type: integer
          description: The maximum number of MQTT client connections that can be simultaneously
            connected to the Message VPN.
          format: int64
        serviceMqttPlainTextCompressed:
          type: boolean
          description: Indicates whether the MQTT Service is compressed in the Message
            VPN.
        serviceMqttPlainTextEnabled:
          type: boolean
          description: Indicates whether the MQTT Service is enabled in the Message
            VPN.
        serviceMqttPlainTextFailureReason:
          type: string
          description: The reason for the MQTT Service failure in the Message VPN.
        serviceMqttPlainTextListenPort:
          type: integer
          description: The port number for plain-text MQTT clients that connect to
            the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
        serviceMqttPlainTextUp:
          type: boolean
          description: Indicates whether the MQTT Service is operationally up in the
            Message VPN.
        serviceMqttTlsCompressed:
          type: boolean
          description: Indicates whether the TLS related MQTT Service is compressed
            in the Message VPN.
        serviceMqttTlsEnabled:
          type: boolean
          description: Indicates whether encryption (TLS) is enabled for MQTT clients
            in the Message VPN.
        serviceMqttTlsFailureReason:
          type: string
          description: The reason for the TLS related MQTT Service failure in the
            Message VPN.
        serviceMqttTlsListenPort:
          type: integer
          description: The port number for MQTT clients that connect to the Message
            VPN over TLS. The port must be unique across the message backbone. A value
            of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
        serviceMqttTlsUp:
          type: boolean
          description: Indicates whether the TLS related MQTT Service is operationally
            up in the Message VPN.
        serviceMqttTlsWebSocketCompressed:
          type: boolean
          description: Indicates whether the TLS related Web transport MQTT Service
            is compressed in the Message VPN.
        serviceMqttTlsWebSocketEnabled:
          type: boolean
          description: Indicates whether encryption (TLS) is enabled for MQTT Web
            clients in the Message VPN.
        serviceMqttTlsWebSocketFailureReason:
          type: string
          description: The reason for the TLS related Web transport MQTT Service failure
            in the Message VPN.
        serviceMqttTlsWebSocketListenPort:
          type: integer
          description: The port number for MQTT clients that connect to the Message
            VPN using WebSocket over TLS. The port must be unique across the message
            backbone. A value of 0 means that the listen-port is unassigned and cannot
            be enabled.
          format: int64
        serviceMqttTlsWebSocketUp:
          type: boolean
          description: Indicates whether the TLS related Web transport MQTT Service
            is operationally up in the Message VPN.
        serviceMqttWebSocketCompressed:
          type: boolean
          description: Indicates whether the Web transport related MQTT Service is
            compressed in the Message VPN.
        serviceMqttWebSocketEnabled:
          type: boolean
          description: Indicates whether the Web transport for the SMF Service is
            enabled in the Message VPN.
        serviceMqttWebSocketFailureReason:
          type: string
          description: The reason for the Web transport related MQTT Service failure
            in the Message VPN.
        serviceMqttWebSocketListenPort:
          type: integer
          description: The port number for plain-text MQTT clients that connect to
            the Message VPN using WebSocket. The port must be unique across the message
            backbone. A value of 0 means that the listen-port is unassigned and cannot
            be enabled.
          format: int64
        serviceMqttWebSocketUp:
          type: boolean
          description: Indicates whether the Web transport related MQTT Service is
            operationally up in the Message VPN.
        serviceRestIncomingAuthenticationClientCertRequest:
          type: string
          description: |-
            Determines when to request a client certificate from an incoming REST Producer connecting via a TLS port. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
        serviceRestIncomingAuthorizationHeaderHandling:
          type: string
          description: "The handling of Authorization headers for incoming REST connections.\
            \ The allowed values and their meaning are:\n\n<pre>\n\"drop\" - Do not\
            \ attach the Authorization header to the message as a user property. This\
            \ configuration is most secure.\n\"forward\" - Forward the Authorization\
            \ header, attaching it to the message as a user property in the same way\
            \ as other headers. For best security, use the drop setting.\n\"legacy\"\
            \ - If the Authorization header was used for authentication to the broker,\
            \ do not attach it to the message. If the Authorization header was not\
            \ used for authentication to the broker, attach it to the message as a\
            \ user property in the same way as other headers. For best security, use\
            \ the drop setting.\n</pre>\n Available since 2.19."
          enum:
          - drop
          - forward
          - legacy
        serviceRestIncomingMaxConnectionCount:
          type: integer
          description: The maximum number of REST incoming client connections that
            can be simultaneously connected to the Message VPN. This value may be
            higher than supported by the platform.
          format: int64
        serviceRestIncomingPlainTextCompressed:
          type: boolean
          description: Indicates whether the incoming REST Service is compressed in
            the Message VPN.
        serviceRestIncomingPlainTextEnabled:
          type: boolean
          description: Indicates whether the REST Service is enabled in the Message
            VPN for incoming clients.
        serviceRestIncomingPlainTextFailureReason:
          type: string
          description: The reason for the incoming REST Service failure in the Message
            VPN.
        serviceRestIncomingPlainTextListenPort:
          type: integer
          description: The port number for incoming plain-text REST clients that connect
            to the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
        serviceRestIncomingPlainTextUp:
          type: boolean
          description: Indicates whether the incoming REST Service is operationally
            up in the Message VPN.
        serviceRestIncomingTlsCompressed:
          type: boolean
          description: Indicates whether the TLS related incoming REST Service is
            compressed in the Message VPN.
        serviceRestIncomingTlsEnabled:
          type: boolean
          description: Indicates whether encryption (TLS) is enabled for incoming
            REST clients in the Message VPN.
        serviceRestIncomingTlsFailureReason:
          type: string
          description: The reason for the TLS related incoming REST Service failure
            in the Message VPN.
        serviceRestIncomingTlsListenPort:
          type: integer
          description: The port number for incoming REST clients that connect to the
            Message VPN over TLS. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
        serviceRestIncomingTlsUp:
          type: boolean
          description: Indicates whether the TLS related incoming REST Service is
            operationally up in the Message VPN.
        serviceRestMode:
          type: string
          description: |
            The REST service mode for incoming REST clients that connect to the Message VPN. The allowed values and their meaning are:

            <pre>
            "gateway" - Act as a message gateway through which REST messages are propagated.
            "messaging" - Act as a message broker on which REST messages are queued.
            </pre>
          enum:
          - gateway
          - messaging
        serviceRestOutgoingMaxConnectionCount:
          type: integer
          description: The maximum number of REST Consumer (outgoing) client connections
            that can be simultaneously connected to the Message VPN.
          format: int64
        serviceSmfMaxConnectionCount:
          type: integer
          description: The maximum number of SMF client connections that can be simultaneously
            connected to the Message VPN. This value may be higher than supported
            by the platform.
          format: int64
        serviceSmfPlainTextEnabled:
          type: boolean
          description: Indicates whether the SMF Service is enabled in the Message
            VPN.
        serviceSmfPlainTextFailureReason:
          type: string
          description: The reason for the SMF Service failure in the Message VPN.
        serviceSmfPlainTextUp:
          type: boolean
          description: Indicates whether the SMF Service is operationally up in the
            Message VPN.
        serviceSmfTlsEnabled:
          type: boolean
          description: Indicates whether encryption (TLS) is enabled for SMF clients
            in the Message VPN.
        serviceSmfTlsFailureReason:
          type: string
          description: The reason for the TLS related SMF Service failure in the Message
            VPN.
        serviceSmfTlsUp:
          type: boolean
          description: Indicates whether the TLS related SMF Service is operationally
            up in the Message VPN.
        serviceWebAuthenticationClientCertRequest:
          type: string
          description: |-
            Determines when to request a client certificate from a Web Transport client connecting via a TLS port. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
        serviceWebMaxConnectionCount:
          type: integer
          description: The maximum number of Web Transport client connections that
            can be simultaneously connected to the Message VPN. This value may be
            higher than supported by the platform.
          format: int64
        serviceWebPlainTextEnabled:
          type: boolean
          description: Indicates whether the Web transport for the SMF Service is
            enabled in the Message VPN.
        serviceWebPlainTextFailureReason:
          type: string
          description: The reason for the Web transport related SMF Service failure
            in the Message VPN.
        serviceWebPlainTextUp:
          type: boolean
          description: Indicates whether the Web transport for the SMF Service is
            operationally up in the Message VPN.
        serviceWebTlsEnabled:
          type: boolean
          description: Indicates whether TLS is enabled for SMF clients in the Message
            VPN that use the Web transport.
        serviceWebTlsFailureReason:
          type: string
          description: The reason for the TLS related Web transport SMF Service failure
            in the Message VPN.
        serviceWebTlsUp:
          type: boolean
          description: Indicates whether the TLS related Web transport SMF Service
            is operationally up in the Message VPN.
        state:
          type: string
          description: |
            The operational state of the local Message VPN. The allowed values and their meaning are:

            <pre>
            "up" - The Message VPN is operationally up.
            "down" - The Message VPN is operationally down.
            "standby" - The Message VPN is operationally replication standby.
            </pre>
        subscriptionExportProgress:
          type: integer
          description: "The progress of the subscription export task, in percent complete."
          format: int64
        systemManager:
          type: boolean
          description: Indicates whether the Message VPN is the system manager for
            handling system level SEMP get requests and system level event publishing.
        tlsAllowDowngradeToPlainTextEnabled:
          type: boolean
          description: Indicates whether SMF clients connected to the Message VPN
            are allowed to downgrade their connections from TLS to plain text.
        tlsAverageRxByteRate:
          type: integer
          description: "The one minute average of the TLS message rate received by\
            \ the Message VPN, in bytes per second (B/sec). Available since 2.13."
          format: int64
        tlsAverageTxByteRate:
          type: integer
          description: "The one minute average of the TLS message rate transmitted\
            \ by the Message VPN, in bytes per second (B/sec). Available since 2.13."
          format: int64
        tlsRxByteCount:
          type: integer
          description: "The amount of TLS messages received by the Message VPN, in\
            \ bytes (B). Available since 2.13."
          format: int64
        tlsRxByteRate:
          type: integer
          description: "The current TLS message rate received by the Message VPN,\
            \ in bytes per second (B/sec). Available since 2.13."
          format: int64
        tlsTxByteCount:
          type: integer
          description: "The amount of TLS messages transmitted by the Message VPN,\
            \ in bytes (B). Available since 2.13."
          format: int64
        tlsTxByteRate:
          type: integer
          description: "The current TLS message rate transmitted by the Message VPN,\
            \ in bytes per second (B/sec). Available since 2.13."
          format: int64
        txByteCount:
          type: integer
          description: "The amount of messages transmitted to clients by the Message\
            \ VPN, in bytes (B). Available since 2.12."
          format: int64
        txByteRate:
          type: integer
          description: "The current message rate transmitted by the Message VPN, in\
            \ bytes per second (B/sec). Available since 2.13."
          format: int64
        txCompressedByteCount:
          type: integer
          description: "The amount of compressed messages transmitted by the Message\
            \ VPN, in bytes (B). Available since 2.12."
          format: int64
        txCompressedByteRate:
          type: integer
          description: "The current compressed message rate transmitted by the Message\
            \ VPN, in bytes per second (B/sec). Available since 2.12."
          format: int64
        txCompressionRatio:
          type: string
          description: The compression ratio for messages transmitted by the message
            VPN. Available since 2.12.
        txMsgCount:
          type: integer
          description: The number of messages transmitted to clients by the Message
            VPN. Available since 2.12.
          format: int64
        txMsgRate:
          type: integer
          description: "The current message rate transmitted by the Message VPN, in\
            \ messages per second (msg/sec). Available since 2.13."
          format: int64
        txUncompressedByteCount:
          type: integer
          description: "The amount of uncompressed messages transmitted by the Message\
            \ VPN, in bytes (B). Available since 2.12."
          format: int64
        txUncompressedByteRate:
          type: integer
          description: "The current uncompressed message rate transmitted by the Message\
            \ VPN, in bytes per second (B/sec). Available since 2.12."
          format: int64
      example:
        replicationRemoteBridgeName: replicationRemoteBridgeName
        averageRxByteRate: 1
        txUncompressedByteRate: 7
        bindRequestRate: 7
        serviceRestIncomingPlainTextEnabled: true
        txCompressedByteRate: 1
        discardedRxMsgCount: 6
        replicationAckPropagationIntervalMsgCount: 6
        state: state
        serviceWebPlainTextUp: true
        replicationStandbyAckPropOutOfSeqRxMsgCount: 7
        restTlsServerCertValidateDateEnabled: true
        serviceWebTlsFailureReason: serviceWebTlsFailureReason
        replicationActivePromotedQueuedMsgCount: 1
        authenticationKerberosEnabled: true
        authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
        serviceRestIncomingPlainTextListenPort: 9
        authenticationClientCertUsernameSource: certificate-thumbprint
        configSyncLocalRole: configSyncLocalRole
        authenticationClientCertMaxChainDepth: 3
        msgSpoolUsage: 3
        serviceMqttWebSocketEnabled: true
        serviceWebPlainTextFailureReason: serviceWebPlainTextFailureReason
        authorizationLdapTrimClientUsernameDomainEnabled: true
        serviceMqttWebSocketFailureReason: serviceMqttWebSocketFailureReason
        authenticationClientCertEnabled: true
        averageRxCompressedByteRate: 2
        serviceSmfPlainTextFailureReason: serviceSmfPlainTextFailureReason
        serviceWebTlsUp: true
        restTlsServerCertEnforceTrustedCommonNameEnabled: true
        serviceRestIncomingPlainTextFailureReason: serviceRestIncomingPlainTextFailureReason
        replicationRejectMsgWhenSyncIneligibleEnabled: true
        serviceMqttPlainTextCompressed: true
        eventPublishTopicFormatSmfEnabled: true
        maxEffectiveEndpointCount: 6
        authenticationBasicProfileName: authenticationBasicProfileName
        replicationBridgeBoundToQueue: true
        serviceRestIncomingMaxConnectionCount: 9
        serviceAmqpTlsListenPort: 0
        averageTxByteRate: 5
        eventServiceAmqpConnectionCountThreshold: null
        serviceRestMode: gateway
        authenticationKerberosAllowApiProvidedUsernameEnabled: true
        replicationBridgeName: replicationBridgeName
        maxSubscriptionCount: 5
        authenticationBasicType: internal
        serviceWebMaxConnectionCount: 4
        replicationBridgeUp: true
        controlTxMsgCount: 8
        serviceAmqpMaxConnectionCount: 2
        serviceMqttTlsUp: true
        maxEgressFlowCount: 9
        serviceMqttWebSocketListenPort: 0
        loginTxMsgCount: 1
        serviceWebTlsEnabled: true
        replicationStandbyTransactionRequestFailureCount: 8
        eventIngressMsgRateThreshold: null
        replicationStandbyTransactionRequestCount: 3
        eventPublishSubscriptionMode: "off"
        eventConnectionCountThreshold:
          clearPercent: 7
          setPercent: 7
          setValue: 6
          clearValue: 0
        serviceSmfTlsEnabled: true
        eventLargeMsgThreshold: 0
        serviceRestIncomingTlsListenPort: 7
        dataRxByteCount: 0
        tlsAverageTxByteRate: 1
        rxCompressedByteRate: 4
        dataTxMsgCount: 4
        eventPublishMsgVpnEnabled: true
        dmrEnabled: true
        txCompressionRatio: txCompressionRatio
        msgVpnName: msgVpnName
        eventEndpointCountThreshold: null
        replicationStandbyTransactionRequestSuccessCount: 2
        sempOverMsgBusAdminEnabled: true
        eventServiceRestIncomingConnectionCountThreshold: null
        serviceSmfMaxConnectionCount: 0
        tlsRxByteCount: 6
        restTlsServerCertValidateNameEnabled: true
        serviceMqttPlainTextEnabled: true
        configSyncLocalState: configSyncLocalState
        replicationStandbyReconcileRequestTxMsgCount: 1
        rxByteCount: 4
        replicationQueueMaxMsgSpoolUsage: 7
        eventServiceMqttConnectionCountThreshold: null
        serviceSmfPlainTextUp: true
        sempOverMsgBusAdminClientEnabled: true
        averageTxCompressedByteRate: 6
        serviceWebAuthenticationClientCertRequest: always
        serviceRestOutgoingMaxConnectionCount: 6
        serviceSmfTlsUp: true
        replicationBridgeTlsEnabled: true
        authenticationClientCertRevocationCheckMode: allow-all
        replicationActiveMateFlowNotCongestedPeakTime: 5
        authenticationClientCertAllowApiProvidedUsernameEnabled: true
        replicationActiveSyncIneligiblePeakTime: 5
        serviceAmqpPlainTextListenPort: 5
        systemManager: true
        authenticationClientCertValidateDateEnabled: true
        replicationTransactionMode: sync
        replicationRole: active
        authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
        serviceRestIncomingTlsFailureReason: serviceRestIncomingTlsFailureReason
        configSyncLocalTimeInState: 7
        eventLogTag: eventLogTag
        rate:
          tlsAverageTxByteRate: 9
          averageRxByteRate: 8
          txMsgRate: 4
          averageTxByteRate: 0
          tlsRxByteRate: 0
          tlsTxByteRate: 2
          averageRxMsgRate: 4
          tlsAverageRxByteRate: 2
          rxByteRate: 7
          rxMsgRate: 4
          averageTxMsgRate: 0
          txByteRate: 6
        distributedCacheManagementEnabled: true
        discardedTxMsgCount: 8
        maxEffectiveTxFlowCount: 3
        serviceRestIncomingTlsCompressed: true
        msgReplayInitializingCount: 5
        bridgingTlsServerCertValidateNameEnabled: true
        rxMsgCount: 8
        replicationActiveSyncQueuedMsgCount: 1
        subscriptionExportProgress: 0
        tlsRxByteRate: 2
        counter:
          loginRxMsgCount: 1
          msgSpoolRxMsgCount: 7
          controlTxMsgCount: 7
          tlsRxByteCount: 0
          controlRxByteCount: 7
          tlsTxByteCount: 9
          dataRxByteCount: 5
          dataRxMsgCount: 3
          controlRxMsgCount: 3
          loginTxMsgCount: 4
          controlTxByteCount: 3
          dataTxByteCount: 4
          msgSpoolTxMsgCount: 9
          dataTxMsgCount: 0
          discardedRxMsgCount: 6
          discardedTxMsgCount: 4
        serviceAmqpPlainTextFailureReason: serviceAmqpPlainTextFailureReason
        averageTxUncompressedByteRate: 3
        controlTxByteCount: 4
        rxUncompressedByteRate: 0
        mqttRetainMaxMemory: 3
        msgSpoolMsgCount: 0
        eventPublishTopicFormatMqttEnabled: true
        authenticationBasicEnabled: true
        msgReplayFailedCount: 9
        eventIngressFlowCountThreshold: null
        serviceMqttMaxConnectionCount: 7
        txMsgRate: 3
        authorizationProfileName: authorizationProfileName
        serviceMqttTlsFailureReason: serviceMqttTlsFailureReason
        replicationActiveReconcileRequestRxMsgCount: 4
        serviceAmqpPlainTextCompressed: true
        serviceMqttPlainTextFailureReason: serviceMqttPlainTextFailureReason
        serviceMqttWebSocketCompressed: true
        replicationActiveSyncQueuedAsAsyncMsgCount: 3
        replicationBridgeEgressFlowWindowSize: 9
        restTlsServerCertMaxChainDepth: 9
        replicationEnabled: true
        eventServiceWebConnectionCountThreshold: null
        bridgingTlsServerCertValidateDateEnabled: true
        maxEffectiveSubscriptionCount: 8
        authorizationType: ldap
        replicationStandbyRxMsgCount: 4
        serviceMqttTlsWebSocketCompressed: true
        msgSpoolRxMsgCount: 3
        bridgingTlsServerCertMaxChainDepth: 0
        replicationBridgeCompressedDataEnabled: true
        rxCompressedByteCount: 6
        serviceAmqpPlainTextEnabled: true
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
        averageRxUncompressedByteRate: 6
        eventTransactedSessionCountThreshold: null
        eventSubscriptionCountThreshold: null
        serviceMqttPlainTextListenPort: 6
        serviceMqttWebSocketUp: true
        dataTxByteCount: 5
        failureReason: failureReason
        serviceRestIncomingAuthorizationHeaderHandling: drop
        txUncompressedByteCount: 8
        rxByteRate: 8
        loginRxMsgCount: 2
        serviceRestIncomingPlainTextCompressed: true
        replicationQueueBound: true
        controlRxMsgCount: 0
        serviceMqttTlsWebSocketUp: true
        enabled: true
        replicationBridgeAuthenticationScheme: basic
        serviceRestIncomingAuthenticationClientCertRequest: always
        replicationActiveMateFlowCongestedPeakTime: 3
        txByteRate: 5
        replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
        sempOverMsgBusEnabled: true
        maxTransactionCount: 7
        serviceMqttTlsListenPort: 4
        rxUncompressedByteCount: 6
        serviceRestIncomingTlsEnabled: true
        sempOverMsgBusAdminDistributedCacheEnabled: true
        tlsAverageRxByteRate: 7
        authenticationOauthEnabled: true
        tlsTxByteCount: 4
        averageRxMsgRate: 6
        dataRxMsgCount: 7
        serviceSmfPlainTextEnabled: true
        maxEndpointCount: 8
        serviceMqttTlsWebSocketEnabled: true
        exportSubscriptionsEnabled: true
        serviceAmqpTlsUp: true
        configSyncLocalLastResult: configSyncLocalLastResult
        authenticationClientCertCertificateMatchingRulesEnabled: true
        replicationActiveLocallyConsumedMsgCount: 1
        txByteCount: 3
        replicationActiveAsyncQueuedMsgCount: 1
        serviceMqttTlsEnabled: true
        maxEffectiveTransactionCount: 1
        serviceMqttPlainTextUp: true
        serviceMqttTlsWebSocketFailureReason: serviceMqttTlsWebSocketFailureReason
        serviceSmfTlsFailureReason: serviceSmfTlsFailureReason
        replicationActiveAckPropTxMsgCount: 9
        replicationQueueRejectMsgToSenderOnDiscardEnabled: true
        eventTransactionCountThreshold: null
        rxMsgRate: 2
        sempOverMsgBusShowEnabled: true
        serviceWebPlainTextEnabled: true
        txMsgCount: 5
        averageTxMsgRate: 3
        eventEgressFlowCountThreshold: null
        serviceAmqpTlsCompressed: true
        eventMsgSpoolUsageThreshold: null
        replicationActiveTransitionToSyncIneligibleCount: 3
        configSyncLocalKey: configSyncLocalKey
        controlRxByteCount: 6
        jndiEnabled: true
        maxEffectiveTransactedSessionCount: 9
        eventPublishClientEnabled: true
        replicationSyncEligible: true
        replicationActiveSyncEligiblePeakTime: 5
        maxEffectiveRxFlowCount: 4
        tlsAllowDowngradeToPlainTextEnabled: true
        replicationStandbyAckPropRxMsgCount: 9
        maxConnectionCount: 8
        msgReplayActiveCount: 3
        eventServiceSmfConnectionCountThreshold: null
        tlsTxByteRate: 2
        serviceAmqpPlainTextUp: true
        serviceAmqpTlsEnabled: true
        eventEgressMsgRateThreshold:
          setValue: 3
          clearValue: 4
        replicationBridgeRetryDelay: 7
        txCompressedByteCount: 3
        serviceAmqpTlsFailureReason: serviceAmqpTlsFailureReason
        alias: alias
        authenticationOauthDefaultProfileName: authenticationOauthDefaultProfileName
        serviceMqttTlsWebSocketListenPort: 0
        replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
        rxCompressionRatio: rxCompressionRatio
        maxIngressFlowCount: 0
        serviceMqttTlsCompressed: true
        serviceMqttAuthenticationClientCertRequest: always
        maxTransactedSessionCount: 8
        msgReplayPendingCompleteCount: 7
        serviceRestIncomingTlsUp: true
        serviceRestIncomingPlainTextUp: true
        averageBindRequestRate: 6
        msgSpoolTxMsgCount: 2
        replicationRemoteBridgeUp: true
        maxMsgSpoolUsage: 5
        authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
    MsgVpnAclProfile:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile.
        clientConnectDefaultAction:
          type: string
          description: |
            The default action to take when a client using the ACL Profile connects to the Message VPN. The allowed values and their meaning are:

            <pre>
            "allow" - Allow client connection unless an exception is found for it.
            "disallow" - Disallow client connection unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        publishTopicDefaultAction:
          type: string
          description: |
            The default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
        subscribeShareNameDefaultAction:
          type: string
          description: |-
            The default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
             Available since 2.14.
          enum:
          - allow
          - disallow
        subscribeTopicDefaultAction:
          type: string
          description: |
            The default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
      example:
        clientConnectDefaultAction: allow
        publishTopicDefaultAction: allow
        subscribeTopicDefaultAction: allow
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        subscribeShareNameDefaultAction: allow
    MsgVpnAclProfileClientConnectException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile.
        clientConnectExceptionAddress:
          type: string
          description: The IP address/netmask of the client connect exception in canonical
            CIDR form.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        clientConnectExceptionAddress: clientConnectExceptionAddress
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
    MsgVpnAclProfileClientConnectExceptionCollections:
      type: object
    MsgVpnAclProfileClientConnectExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Connect Exception object.
      example:
        uri: uri
    MsgVpnAclProfileClientConnectExceptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileClientConnectException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnAclProfileClientConnectExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileClientConnectException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        - clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfileCollections:
      type: object
      properties:
        clientConnectExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsClientConnectExceptions'
        publishExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsPublishExceptions'
        publishTopicExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsPublishTopicExceptions'
        subscribeExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsSubscribeExceptions'
        subscribeShareNameExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsSubscribeShareNameExceptions'
        subscribeTopicExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsSubscribeTopicExceptions'
      example:
        subscribeTopicExceptions:
          count: 2
        subscribeShareNameExceptions:
          count: 5
        publishExceptions:
          count: 6
        subscribeExceptions:
          count: 5
        clientConnectExceptions:
          count: 0
        publishTopicExceptions:
          count: 1
    MsgVpnAclProfileCollectionsClientConnectExceptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the clientConnectExceptions
            collection.
          format: int64
      example:
        count: 0
    MsgVpnAclProfileCollectionsPublishExceptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the publishExceptions collection.
            Deprecated since 2.14. Replaced by publishTopicExceptions.
          format: int64
      example:
        count: 6
    MsgVpnAclProfileCollectionsPublishTopicExceptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the publishTopicExceptions collection.
            Available since 2.14.
          format: int64
      example:
        count: 1
    MsgVpnAclProfileCollectionsSubscribeExceptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the subscribeExceptions collection.
            Deprecated since 2.14. Replaced by subscribeTopicExceptions.
          format: int64
      example:
        count: 5
    MsgVpnAclProfileCollectionsSubscribeShareNameExceptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the subscribeShareNameExceptions
            collection. Available since 2.14.
          format: int64
      example:
        count: 5
    MsgVpnAclProfileCollectionsSubscribeTopicExceptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the subscribeTopicExceptions
            collection. Available since 2.14.
          format: int64
      example:
        count: 2
    MsgVpnAclProfileLinks:
      type: object
      properties:
        clientConnectExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Client Connect
            Exception objects.
        publishExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Publish Topic Exception
            objects. Deprecated since 2.14. Replaced by publishTopicExceptions.
        publishTopicExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Publish Topic Exception
            objects. Available since 2.14.
        subscribeExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Subscribe Topic
            Exception objects. Deprecated since 2.14. Replaced by subscribeTopicExceptions.
        subscribeShareNameExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Subscribe Share
            Name Exception objects. Available since 2.14.
        subscribeTopicExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Subscribe Topic
            Exception objects. Available since 2.14.
        uri:
          type: string
          description: The URI of this ACL Profile object.
      example:
        clientConnectExceptionsUri: clientConnectExceptionsUri
        subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
        subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
        publishExceptionsUri: publishExceptionsUri
        uri: uri
        publishTopicExceptionsUri: publishTopicExceptionsUri
        subscribeExceptionsUri: subscribeExceptionsUri
    MsgVpnAclProfilePublishException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile. Deprecated since 2.14. Replaced
            by publishTopicExceptions.
        msgVpnName:
          type: string
          description: The name of the Message VPN. Deprecated since 2.14. Replaced
            by publishTopicExceptions.
        publishExceptionTopic:
          type: string
          description: The topic for the exception to the default action taken. May
            include wildcard characters. Deprecated since 2.14. Replaced by publishTopicExceptions.
        topicSyntax:
          type: string
          description: |-
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
             Deprecated since 2.14. Replaced by publishTopicExceptions.
          enum:
          - smf
          - mqtt
      example:
        publishExceptionTopic: publishExceptionTopic
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        topicSyntax: smf
    MsgVpnAclProfilePublishExceptionCollections:
      type: object
    MsgVpnAclProfilePublishExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Publish Topic Exception object.
      example:
        uri: uri
    MsgVpnAclProfilePublishExceptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnAclProfilePublishExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        - publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfilePublishTopicException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        publishTopicException:
          type: string
          description: The topic for the exception to the default action taken. May
            include wildcard characters.
        publishTopicExceptionSyntax:
          type: string
          description: |
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
      example:
        publishTopicExceptionSyntax: smf
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        publishTopicException: publishTopicException
    MsgVpnAclProfilePublishTopicExceptionCollections:
      type: object
    MsgVpnAclProfilePublishTopicExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Publish Topic Exception object.
      example:
        uri: uri
    MsgVpnAclProfilePublishTopicExceptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnAclProfilePublishTopicExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        - publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfileResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAclProfileCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAclProfile'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        collections:
          subscribeTopicExceptions:
            count: 2
          subscribeShareNameExceptions:
            count: 5
          publishExceptions:
            count: 6
          subscribeExceptions:
            count: 5
          clientConnectExceptions:
            count: 0
          publishTopicExceptions:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
    MsgVpnAclProfileSubscribeException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile. Deprecated since 2.14. Replaced
            by subscribeTopicExceptions.
        msgVpnName:
          type: string
          description: The name of the Message VPN. Deprecated since 2.14. Replaced
            by subscribeTopicExceptions.
        subscribeExceptionTopic:
          type: string
          description: The topic for the exception to the default action taken. May
            include wildcard characters. Deprecated since 2.14. Replaced by subscribeTopicExceptions.
        topicSyntax:
          type: string
          description: |-
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
             Deprecated since 2.14. Replaced by subscribeTopicExceptions.
          enum:
          - smf
          - mqtt
      example:
        msgVpnName: msgVpnName
        subscribeExceptionTopic: subscribeExceptionTopic
        aclProfileName: aclProfileName
        topicSyntax: smf
    MsgVpnAclProfileSubscribeExceptionCollections:
      type: object
    MsgVpnAclProfileSubscribeExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Subscribe Topic Exception object.
      example:
        uri: uri
    MsgVpnAclProfileSubscribeExceptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnAclProfileSubscribeExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        - msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfileSubscribeShareNameException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        subscribeShareNameException:
          type: string
          description: The subscribe share name exception to the default action taken.
            May include wildcard characters.
        subscribeShareNameExceptionSyntax:
          type: string
          description: |
            The syntax of the subscribe share name for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
      example:
        subscribeShareNameExceptionSyntax: smf
        msgVpnName: msgVpnName
        subscribeShareNameException: subscribeShareNameException
        aclProfileName: aclProfileName
    MsgVpnAclProfileSubscribeShareNameExceptionCollections:
      type: object
    MsgVpnAclProfileSubscribeShareNameExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Subscribe Share Name Exception object.
      example:
        uri: uri
    MsgVpnAclProfileSubscribeShareNameExceptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnAclProfileSubscribeShareNameExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        - subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfileSubscribeTopicException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        subscribeTopicException:
          type: string
          description: The topic for the exception to the default action taken. May
            include wildcard characters.
        subscribeTopicExceptionSyntax:
          type: string
          description: |
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
      example:
        subscribeTopicException: subscribeTopicException
        subscribeTopicExceptionSyntax: smf
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
    MsgVpnAclProfileSubscribeTopicExceptionCollections:
      type: object
    MsgVpnAclProfileSubscribeTopicExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Subscribe Topic Exception object.
      example:
        uri: uri
    MsgVpnAclProfileSubscribeTopicExceptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnAclProfileSubscribeTopicExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        - subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfilesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfile'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        - clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        collections:
        - subscribeTopicExceptions:
            count: 2
          subscribeShareNameExceptions:
            count: 5
          publishExceptions:
            count: 6
          subscribeExceptions:
            count: 5
          clientConnectExceptions:
            count: 0
          publishTopicExceptions:
            count: 1
        - subscribeTopicExceptions:
            count: 2
          subscribeShareNameExceptions:
            count: 5
          publishExceptions:
            count: 6
          subscribeExceptions:
            count: 5
          clientConnectExceptions:
            count: 0
          publishTopicExceptions:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
        - clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
    MsgVpnAuthenticationOauthProfile:
      type: object
      properties:
        active:
          type: boolean
          description: "Indicates whether the profile is active. An enabled profile\
            \ may not be active if discovery is not complete, if there is no issuer\
            \ specified, or if there is another profile with the same issuer. Available\
            \ since 2.26."
        authorizationGroupsClaimName:
          type: string
          description: "The name of the groups claim. If non-empty, the specified\
            \ claim will be used to determine groups for authorization. If empty,\
            \ the authorizationType attribute of the Message VPN will be used to determine\
            \ authorization."
        authorizationGroupsClaimStringFormat:
          type: string
          description: "The format of the authorization groups claim value when it\
            \ is a string. The allowed values and their meaning are:\n\n<pre>\n\"\
            single\" - When the claim is a string, it is interpreted as a single group.\n\
            \"space-delimited\" - When the claim is a string, it is interpreted as\
            \ a space-delimited list of groups, similar to the \"scope\" claim.\n\
            </pre>\n Available since 2.32."
          enum:
          - single
          - space-delimited
        clientId:
          type: string
          description: The OAuth client id.
        clientRequiredType:
          type: string
          description: The required value for the TYP field in the ID token header.
        clientValidateTypeEnabled:
          type: boolean
          description: Enable or disable verification of the TYP field in the ID token
            header.
        disconnectOnTokenExpirationEnabled:
          type: boolean
          description: "Enable or disable the disconnection of clients when their\
            \ tokens expire. Changing this value does not affect existing clients,\
            \ only new client connections."
        discoveryLastRefreshFailureReason:
          type: string
          description: The reason for the last discovery endpoint refresh failure.
        discoveryLastRefreshFailureTime:
          type: integer
          description: The timestamp of the last discovery endpoint refresh failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        discoveryLastRefreshTime:
          type: integer
          description: The timestamp of the last discovery endpoint refresh success.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        discoveryNextScheduledRefreshTime:
          type: integer
          description: The timestamp of the next scheduled discovery endpoint refresh.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        discoveryRefreshFailureCount:
          type: integer
          description: The number of discovery endpoint refresh failures.
          format: int64
        enabled:
          type: boolean
          description: Enable or disable the OAuth profile.
        endpointDiscovery:
          type: string
          description: The OpenID Connect discovery endpoint or OAuth Authorization
            Server Metadata endpoint.
        endpointDiscoveryRefreshInterval:
          type: integer
          description: The number of seconds between discovery endpoint requests.
          format: int32
        endpointIntrospection:
          type: string
          description: The OAuth introspection endpoint.
        endpointIntrospectionOperational:
          type: string
          description: The operational OAuth introspection endpoint.
        endpointIntrospectionTimeout:
          type: integer
          description: The maximum time in seconds a token introspection request is
            allowed to take.
          format: int32
        endpointJwks:
          type: string
          description: The OAuth JWKS endpoint.
        endpointJwksOperational:
          type: string
          description: The operational OAuth JWKS endpoint.
        endpointJwksRefreshInterval:
          type: integer
          description: The number of seconds between JWKS endpoint requests.
          format: int32
        endpointUserinfo:
          type: string
          description: The OpenID Connect Userinfo endpoint.
        endpointUserinfoOperational:
          type: string
          description: The operational OpenID Connect Userinfo endpoint.
        endpointUserinfoTimeout:
          type: integer
          description: The maximum time in seconds a userinfo request is allowed to
            take.
          format: int32
        expiredTokenCount:
          type: integer
          description: The number of requests with an expired OAuth token.
          format: int64
        groupsFoundInTokenCount:
          type: integer
          description: The number of times the groups were successfully found in the
            ID token or access token for request authentication.
          format: int64
        inactiveReason:
          type: string
          description: |-
            The reason the profile is not active. The allowed values and their meaning are:

            <pre>
            "msg-vpn-disabled" - The Message VPN is disabled.
            "oauth-disabled" - OAuth is disabled for the Message VPN.
            "profile-disabled" - The OAuth profile is disabled.
            "missing-issuer" - The issuer has not been discovered or configured.
            "duplicate-issuer" - Another OAuth profile in the Message VPN already has the same issuer.
            "none" - The OAuth profile is active.
            </pre>
             Available since 2.26.
        introspectionAverageTime:
          type: integer
          description: "The one minute average of the time required to complete a\
            \ token introspection, in milliseconds (ms)."
          format: int32
        introspectionLastFailureReason:
          type: string
          description: The reason for the introspection endpoint request failure.
        introspectionLastFailureTime:
          type: integer
          description: The timestamp of the last introspection endpoint request failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        introspectionMissingCount:
          type: integer
          description: The number of failures during request authentication due to
            missing introspection configuration (a introspection request was required
            but no introspection endpoint was configured).
          format: int64
        introspectionMissingGroupsCount:
          type: integer
          description: The number of introspection request made from the broker during
            request authentication for this OAuth profile where the configured groups
            claim wasn't found in the access token or the introspection response.
          format: int64
        introspectionMissingUsernameCount:
          type: integer
          description: The number of introspection requests made from the broker during
            request authentication for this OAuth profile where the configured username
            claim wasn't found in the access token or introspection response.
          format: int64
        introspectionRequestCount:
          type: integer
          description: The number of requests made to the introspection endpoint during
            request authentication.
          format: int64
        introspectionResponseInvalidCount:
          type: integer
          description: The number of introspection responses during request authentication
            that couldn't be parsed.
          format: int64
        introspectionStatusOkCount:
          type: integer
          description: The number of introspection requests made from the broker during
            request authentication for this OAuth profile with 200 status responses.
          format: int64
        introspectionStatusOtherCount:
          type: integer
          description: The number of introspection requests made from the broker during
            request authentication for this OAuth profile with status responses other
            than 200.
          format: int64
        introspectionTokenNotActiveCount:
          type: integer
          description: The number of introspection responses indicating that the provided
            token was not active.
          format: int64
        invalidTokenCount:
          type: integer
          description: The number of requests with an invalid OAuth token.
          format: int64
        issuer:
          type: string
          description: The Issuer Identifier for the OAuth provider.
        issuerOperational:
          type: string
          description: The operational Issuer Identifier for the OAuth provider.
        jwksLastRefreshFailureReason:
          type: string
          description: The reason for the last JWKS public key refresh failure.
        jwksLastRefreshFailureTime:
          type: integer
          description: The timestamp of the last JWKS public key refresh failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        jwksLastRefreshTime:
          type: integer
          description: The timestamp of the last JWKS public key refresh success.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        jwksNextScheduledRefreshTime:
          type: integer
          description: The timestamp of the next scheduled JWKS public key refresh.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        jwksRefreshFailureCount:
          type: integer
          description: The number of JWKS public key refresh failures.
          format: int64
        mqttUsernameValidateEnabled:
          type: boolean
          description: "Enable or disable whether the API provided MQTT client username\
            \ will be validated against the username calculated from the token(s).\
            \ When enabled, connection attempts by MQTT clients are rejected if they\
            \ differ. Note that this value only applies to MQTT clients; SMF client\
            \ usernames will not be validated."
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
        oauthRole:
          type: string
          description: |
            The OAuth role of the broker. The allowed values and their meaning are:

            <pre>
            "client" - The broker is in the OAuth client role.
            "resource-server" - The broker is in the OAuth resource server role.
            </pre>
          enum:
          - client
          - resource-server
        requestCount:
          type: integer
          description: The number of requests (successful and unsuccessful) using
            this OAuth profile.
          format: int64
        resourceServerParseAccessTokenEnabled:
          type: boolean
          description: Enable or disable parsing of the access token as a JWT.
        resourceServerRequiredAudience:
          type: string
          description: The required audience value.
        resourceServerRequiredIssuer:
          type: string
          description: The required issuer value.
        resourceServerRequiredScope:
          type: string
          description: A space-separated list of scopes that must be present in the
            scope claim.
        resourceServerRequiredType:
          type: string
          description: The required TYP value.
        resourceServerValidateAudienceEnabled:
          type: boolean
          description: Enable or disable verification of the audience claim in the
            access token or introspection response.
        resourceServerValidateIssuerEnabled:
          type: boolean
          description: Enable or disable verification of the issuer claim in the access
            token or introspection response.
        resourceServerValidateScopeEnabled:
          type: boolean
          description: Enable or disable verification of the scope claim in the access
            token or introspection response.
        resourceServerValidateTypeEnabled:
          type: boolean
          description: Enable or disable verification of the TYP field in the access
            token header.
        successCount:
          type: integer
          description: The number of successful authentications using this OAuth profile.
          format: int64
        userinfoAverageTime:
          type: integer
          description: "The one minute average of the time required to complete a\
            \ token userinfo request, in milliseconds (ms)."
          format: int32
        userinfoLastFailureReason:
          type: string
          description: The reason for the userinfo endpoint request failure.
        userinfoLastFailureTime:
          type: integer
          description: The timestamp of the last userinfo endpoint request failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        userinfoMissingCount:
          type: integer
          description: The number of failures due to missing Userinfo configuration
            (a Userinfo request was required but no Userinfo endpoint was configured)
            during request authentication.
          format: int64
        userinfoMissingGroupsCount:
          type: integer
          description: The number of Userinfo request made from the broker during
            request authentication for this OAuth profile where the configured groups
            claim wasn't found in the ID token or the Userinfo response.
          format: int64
        userinfoMissingUsernameCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            request authentication for this OAuth profile where the configured username
            claim wasn't found in the ID token or Userinfo response.
          format: int64
        userinfoRequestCount:
          type: integer
          description: The number of requests made to the Userinfo endpoint during
            request authentication.
          format: int64
        userinfoResponseInvalidCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            request authentication for this OAuth profile with responses that couldn't
            be parsed.
          format: int64
        userinfoStatusOkCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            request authentication for this OAuth profile with 200 status responses.
          format: int64
        userinfoStatusOtherCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            request authentication for this OAuth profile with status responses other
            than 200.
          format: int64
        userinfoSubjectMismatchCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            request authentication for this OAuth profile with subject claims that
            did not match the subject from the ID token.
          format: int64
        usernameClaimName:
          type: string
          description: The name of the username claim.
        usernameFoundInTokenCount:
          type: integer
          description: The number of time the username was successfully found in the
            ID token or access token for request authentication.
          format: int64
      example:
        resourceServerValidateIssuerEnabled: true
        jwksRefreshFailureCount: 3
        endpointUserinfoTimeout: 2
        resourceServerRequiredType: resourceServerRequiredType
        userinfoMissingCount: 6
        introspectionStatusOtherCount: 9
        issuer: issuer
        resourceServerRequiredScope: resourceServerRequiredScope
        resourceServerValidateScopeEnabled: true
        userinfoMissingUsernameCount: 6
        authorizationGroupsClaimName: authorizationGroupsClaimName
        jwksNextScheduledRefreshTime: 6
        msgVpnName: msgVpnName
        endpointUserinfo: endpointUserinfo
        userinfoAverageTime: 2
        introspectionResponseInvalidCount: 4
        resourceServerRequiredAudience: resourceServerRequiredAudience
        oauthRole: client
        introspectionMissingGroupsCount: 6
        inactiveReason: inactiveReason
        active: true
        introspectionLastFailureReason: introspectionLastFailureReason
        introspectionStatusOkCount: 5
        resourceServerValidateTypeEnabled: true
        discoveryLastRefreshFailureTime: 1
        introspectionMissingUsernameCount: 7
        userinfoMissingGroupsCount: 5
        userinfoRequestCount: 3
        clientRequiredType: clientRequiredType
        usernameFoundInTokenCount: 6
        endpointIntrospection: endpointIntrospection
        userinfoStatusOtherCount: 0
        invalidTokenCount: 6
        jwksLastRefreshTime: 9
        jwksLastRefreshFailureTime: 8
        discoveryLastRefreshTime: 5
        issuerOperational: issuerOperational
        enabled: true
        endpointDiscoveryRefreshInterval: 7
        endpointIntrospectionTimeout: 9
        userinfoStatusOkCount: 7
        endpointJwksOperational: endpointJwksOperational
        endpointJwksRefreshInterval: 3
        resourceServerRequiredIssuer: resourceServerRequiredIssuer
        endpointUserinfoOperational: endpointUserinfoOperational
        introspectionRequestCount: 1
        disconnectOnTokenExpirationEnabled: true
        groupsFoundInTokenCount: 7
        introspectionTokenNotActiveCount: 9
        mqttUsernameValidateEnabled: true
        successCount: 1
        usernameClaimName: usernameClaimName
        userinfoLastFailureTime: 6
        introspectionAverageTime: 1
        requestCount: 6
        userinfoSubjectMismatchCount: 7
        clientValidateTypeEnabled: true
        clientId: clientId
        introspectionMissingCount: 1
        discoveryRefreshFailureCount: 2
        resourceServerParseAccessTokenEnabled: true
        expiredTokenCount: 4
        endpointJwks: endpointJwks
        jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
        discoveryNextScheduledRefreshTime: 5
        resourceServerValidateAudienceEnabled: true
        endpointIntrospectionOperational: endpointIntrospectionOperational
        userinfoLastFailureReason: userinfoLastFailureReason
        introspectionLastFailureTime: 1
        oauthProfileName: oauthProfileName
        authorizationGroupsClaimStringFormat: single
        endpointDiscovery: endpointDiscovery
        discoveryLastRefreshFailureReason: discoveryLastRefreshFailureReason
        userinfoResponseInvalidCount: 3
    MsgVpnAuthenticationOauthProfileClientRequiredClaim:
      type: object
      properties:
        clientRequiredClaimName:
          type: string
          description: The name of the ID token claim to verify.
        clientRequiredClaimValue:
          type: string
          description: The required claim value.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
      example:
        clientRequiredClaimValue: clientRequiredClaimValue
        oauthProfileName: oauthProfileName
        clientRequiredClaimName: clientRequiredClaimName
        msgVpnName: msgVpnName
    MsgVpnAuthenticationOauthProfileClientRequiredClaimCollections:
      type: object
    MsgVpnAuthenticationOauthProfileClientRequiredClaimLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Required Claim object.
      example:
        uri: uri
    MsgVpnAuthenticationOauthProfileClientRequiredClaimResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileClientRequiredClaimCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileClientRequiredClaim'
        links:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileClientRequiredClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          clientRequiredClaimValue: clientRequiredClaimValue
          oauthProfileName: oauthProfileName
          clientRequiredClaimName: clientRequiredClaimName
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnAuthenticationOauthProfileClientRequiredClaimsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileClientRequiredClaimCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileClientRequiredClaim'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileClientRequiredClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - clientRequiredClaimValue: clientRequiredClaimValue
          oauthProfileName: oauthProfileName
          clientRequiredClaimName: clientRequiredClaimName
          msgVpnName: msgVpnName
        - clientRequiredClaimValue: clientRequiredClaimValue
          oauthProfileName: oauthProfileName
          clientRequiredClaimName: clientRequiredClaimName
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnAuthenticationOauthProfileCollections:
      type: object
      properties:
        clientRequiredClaims:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileCollectionsClientRequiredClaims'
        resourceServerRequiredClaims:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileCollectionsResourceServerRequiredClaims'
      example:
        resourceServerRequiredClaims:
          count: 6
        clientRequiredClaims:
          count: 0
    MsgVpnAuthenticationOauthProfileCollectionsClientRequiredClaims:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the clientRequiredClaims collection.
          format: int64
      example:
        count: 0
    MsgVpnAuthenticationOauthProfileCollectionsResourceServerRequiredClaims:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the resourceServerRequiredClaims
            collection.
          format: int64
      example:
        count: 6
    MsgVpnAuthenticationOauthProfileLinks:
      type: object
      properties:
        clientRequiredClaimsUri:
          type: string
          description: The URI of this OAuth Profile's collection of Required Claim
            objects.
        resourceServerRequiredClaimsUri:
          type: string
          description: The URI of this OAuth Profile's collection of Required Claim
            objects.
        uri:
          type: string
          description: The URI of this OAuth Profile object.
      example:
        resourceServerRequiredClaimsUri: resourceServerRequiredClaimsUri
        clientRequiredClaimsUri: clientRequiredClaimsUri
        uri: uri
    MsgVpnAuthenticationOauthProfileResourceServerRequiredClaim:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
        resourceServerRequiredClaimName:
          type: string
          description: The name of the access token claim to verify.
        resourceServerRequiredClaimValue:
          type: string
          description: The required claim value.
      example:
        resourceServerRequiredClaimValue: resourceServerRequiredClaimValue
        resourceServerRequiredClaimName: resourceServerRequiredClaimName
        oauthProfileName: oauthProfileName
        msgVpnName: msgVpnName
    MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimCollections:
      type: object
    MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Required Claim object.
      example:
        uri: uri
    MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaim'
        links:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          resourceServerRequiredClaimValue: resourceServerRequiredClaimValue
          resourceServerRequiredClaimName: resourceServerRequiredClaimName
          oauthProfileName: oauthProfileName
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaim'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - resourceServerRequiredClaimValue: resourceServerRequiredClaimValue
          resourceServerRequiredClaimName: resourceServerRequiredClaimName
          oauthProfileName: oauthProfileName
          msgVpnName: msgVpnName
        - resourceServerRequiredClaimValue: resourceServerRequiredClaimValue
          resourceServerRequiredClaimName: resourceServerRequiredClaimName
          oauthProfileName: oauthProfileName
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnAuthenticationOauthProfileResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfile'
        links:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          resourceServerValidateIssuerEnabled: true
          jwksRefreshFailureCount: 3
          endpointUserinfoTimeout: 2
          resourceServerRequiredType: resourceServerRequiredType
          userinfoMissingCount: 6
          introspectionStatusOtherCount: 9
          issuer: issuer
          resourceServerRequiredScope: resourceServerRequiredScope
          resourceServerValidateScopeEnabled: true
          userinfoMissingUsernameCount: 6
          authorizationGroupsClaimName: authorizationGroupsClaimName
          jwksNextScheduledRefreshTime: 6
          msgVpnName: msgVpnName
          endpointUserinfo: endpointUserinfo
          userinfoAverageTime: 2
          introspectionResponseInvalidCount: 4
          resourceServerRequiredAudience: resourceServerRequiredAudience
          oauthRole: client
          introspectionMissingGroupsCount: 6
          inactiveReason: inactiveReason
          active: true
          introspectionLastFailureReason: introspectionLastFailureReason
          introspectionStatusOkCount: 5
          resourceServerValidateTypeEnabled: true
          discoveryLastRefreshFailureTime: 1
          introspectionMissingUsernameCount: 7
          userinfoMissingGroupsCount: 5
          userinfoRequestCount: 3
          clientRequiredType: clientRequiredType
          usernameFoundInTokenCount: 6
          endpointIntrospection: endpointIntrospection
          userinfoStatusOtherCount: 0
          invalidTokenCount: 6
          jwksLastRefreshTime: 9
          jwksLastRefreshFailureTime: 8
          discoveryLastRefreshTime: 5
          issuerOperational: issuerOperational
          enabled: true
          endpointDiscoveryRefreshInterval: 7
          endpointIntrospectionTimeout: 9
          userinfoStatusOkCount: 7
          endpointJwksOperational: endpointJwksOperational
          endpointJwksRefreshInterval: 3
          resourceServerRequiredIssuer: resourceServerRequiredIssuer
          endpointUserinfoOperational: endpointUserinfoOperational
          introspectionRequestCount: 1
          disconnectOnTokenExpirationEnabled: true
          groupsFoundInTokenCount: 7
          introspectionTokenNotActiveCount: 9
          mqttUsernameValidateEnabled: true
          successCount: 1
          usernameClaimName: usernameClaimName
          userinfoLastFailureTime: 6
          introspectionAverageTime: 1
          requestCount: 6
          userinfoSubjectMismatchCount: 7
          clientValidateTypeEnabled: true
          clientId: clientId
          introspectionMissingCount: 1
          discoveryRefreshFailureCount: 2
          resourceServerParseAccessTokenEnabled: true
          expiredTokenCount: 4
          endpointJwks: endpointJwks
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          discoveryNextScheduledRefreshTime: 5
          resourceServerValidateAudienceEnabled: true
          endpointIntrospectionOperational: endpointIntrospectionOperational
          userinfoLastFailureReason: userinfoLastFailureReason
          introspectionLastFailureTime: 1
          oauthProfileName: oauthProfileName
          authorizationGroupsClaimStringFormat: single
          endpointDiscovery: endpointDiscovery
          discoveryLastRefreshFailureReason: discoveryLastRefreshFailureReason
          userinfoResponseInvalidCount: 3
        collections:
          resourceServerRequiredClaims:
            count: 6
          clientRequiredClaims:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          resourceServerRequiredClaimsUri: resourceServerRequiredClaimsUri
          clientRequiredClaimsUri: clientRequiredClaimsUri
          uri: uri
    MsgVpnAuthenticationOauthProfilesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfile'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - resourceServerValidateIssuerEnabled: true
          jwksRefreshFailureCount: 3
          endpointUserinfoTimeout: 2
          resourceServerRequiredType: resourceServerRequiredType
          userinfoMissingCount: 6
          introspectionStatusOtherCount: 9
          issuer: issuer
          resourceServerRequiredScope: resourceServerRequiredScope
          resourceServerValidateScopeEnabled: true
          userinfoMissingUsernameCount: 6
          authorizationGroupsClaimName: authorizationGroupsClaimName
          jwksNextScheduledRefreshTime: 6
          msgVpnName: msgVpnName
          endpointUserinfo: endpointUserinfo
          userinfoAverageTime: 2
          introspectionResponseInvalidCount: 4
          resourceServerRequiredAudience: resourceServerRequiredAudience
          oauthRole: client
          introspectionMissingGroupsCount: 6
          inactiveReason: inactiveReason
          active: true
          introspectionLastFailureReason: introspectionLastFailureReason
          introspectionStatusOkCount: 5
          resourceServerValidateTypeEnabled: true
          discoveryLastRefreshFailureTime: 1
          introspectionMissingUsernameCount: 7
          userinfoMissingGroupsCount: 5
          userinfoRequestCount: 3
          clientRequiredType: clientRequiredType
          usernameFoundInTokenCount: 6
          endpointIntrospection: endpointIntrospection
          userinfoStatusOtherCount: 0
          invalidTokenCount: 6
          jwksLastRefreshTime: 9
          jwksLastRefreshFailureTime: 8
          discoveryLastRefreshTime: 5
          issuerOperational: issuerOperational
          enabled: true
          endpointDiscoveryRefreshInterval: 7
          endpointIntrospectionTimeout: 9
          userinfoStatusOkCount: 7
          endpointJwksOperational: endpointJwksOperational
          endpointJwksRefreshInterval: 3
          resourceServerRequiredIssuer: resourceServerRequiredIssuer
          endpointUserinfoOperational: endpointUserinfoOperational
          introspectionRequestCount: 1
          disconnectOnTokenExpirationEnabled: true
          groupsFoundInTokenCount: 7
          introspectionTokenNotActiveCount: 9
          mqttUsernameValidateEnabled: true
          successCount: 1
          usernameClaimName: usernameClaimName
          userinfoLastFailureTime: 6
          introspectionAverageTime: 1
          requestCount: 6
          userinfoSubjectMismatchCount: 7
          clientValidateTypeEnabled: true
          clientId: clientId
          introspectionMissingCount: 1
          discoveryRefreshFailureCount: 2
          resourceServerParseAccessTokenEnabled: true
          expiredTokenCount: 4
          endpointJwks: endpointJwks
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          discoveryNextScheduledRefreshTime: 5
          resourceServerValidateAudienceEnabled: true
          endpointIntrospectionOperational: endpointIntrospectionOperational
          userinfoLastFailureReason: userinfoLastFailureReason
          introspectionLastFailureTime: 1
          oauthProfileName: oauthProfileName
          authorizationGroupsClaimStringFormat: single
          endpointDiscovery: endpointDiscovery
          discoveryLastRefreshFailureReason: discoveryLastRefreshFailureReason
          userinfoResponseInvalidCount: 3
        - resourceServerValidateIssuerEnabled: true
          jwksRefreshFailureCount: 3
          endpointUserinfoTimeout: 2
          resourceServerRequiredType: resourceServerRequiredType
          userinfoMissingCount: 6
          introspectionStatusOtherCount: 9
          issuer: issuer
          resourceServerRequiredScope: resourceServerRequiredScope
          resourceServerValidateScopeEnabled: true
          userinfoMissingUsernameCount: 6
          authorizationGroupsClaimName: authorizationGroupsClaimName
          jwksNextScheduledRefreshTime: 6
          msgVpnName: msgVpnName
          endpointUserinfo: endpointUserinfo
          userinfoAverageTime: 2
          introspectionResponseInvalidCount: 4
          resourceServerRequiredAudience: resourceServerRequiredAudience
          oauthRole: client
          introspectionMissingGroupsCount: 6
          inactiveReason: inactiveReason
          active: true
          introspectionLastFailureReason: introspectionLastFailureReason
          introspectionStatusOkCount: 5
          resourceServerValidateTypeEnabled: true
          discoveryLastRefreshFailureTime: 1
          introspectionMissingUsernameCount: 7
          userinfoMissingGroupsCount: 5
          userinfoRequestCount: 3
          clientRequiredType: clientRequiredType
          usernameFoundInTokenCount: 6
          endpointIntrospection: endpointIntrospection
          userinfoStatusOtherCount: 0
          invalidTokenCount: 6
          jwksLastRefreshTime: 9
          jwksLastRefreshFailureTime: 8
          discoveryLastRefreshTime: 5
          issuerOperational: issuerOperational
          enabled: true
          endpointDiscoveryRefreshInterval: 7
          endpointIntrospectionTimeout: 9
          userinfoStatusOkCount: 7
          endpointJwksOperational: endpointJwksOperational
          endpointJwksRefreshInterval: 3
          resourceServerRequiredIssuer: resourceServerRequiredIssuer
          endpointUserinfoOperational: endpointUserinfoOperational
          introspectionRequestCount: 1
          disconnectOnTokenExpirationEnabled: true
          groupsFoundInTokenCount: 7
          introspectionTokenNotActiveCount: 9
          mqttUsernameValidateEnabled: true
          successCount: 1
          usernameClaimName: usernameClaimName
          userinfoLastFailureTime: 6
          introspectionAverageTime: 1
          requestCount: 6
          userinfoSubjectMismatchCount: 7
          clientValidateTypeEnabled: true
          clientId: clientId
          introspectionMissingCount: 1
          discoveryRefreshFailureCount: 2
          resourceServerParseAccessTokenEnabled: true
          expiredTokenCount: 4
          endpointJwks: endpointJwks
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          discoveryNextScheduledRefreshTime: 5
          resourceServerValidateAudienceEnabled: true
          endpointIntrospectionOperational: endpointIntrospectionOperational
          userinfoLastFailureReason: userinfoLastFailureReason
          introspectionLastFailureTime: 1
          oauthProfileName: oauthProfileName
          authorizationGroupsClaimStringFormat: single
          endpointDiscovery: endpointDiscovery
          discoveryLastRefreshFailureReason: discoveryLastRefreshFailureReason
          userinfoResponseInvalidCount: 3
        collections:
        - resourceServerRequiredClaims:
            count: 6
          clientRequiredClaims:
            count: 0
        - resourceServerRequiredClaims:
            count: 6
          clientRequiredClaims:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - resourceServerRequiredClaimsUri: resourceServerRequiredClaimsUri
          clientRequiredClaimsUri: clientRequiredClaimsUri
          uri: uri
        - resourceServerRequiredClaimsUri: resourceServerRequiredClaimsUri
          clientRequiredClaimsUri: clientRequiredClaimsUri
          uri: uri
    MsgVpnAuthenticationOauthProvider:
      type: object
      properties:
        audienceClaimName:
          type: string
          description: "The audience claim name, indicating which part of the object\
            \ to use for determining the audience. Deprecated since 2.25. authenticationOauthProviders\
            \ replaced by authenticationOauthProfiles."
        audienceClaimSource:
          type: string
          description: "The audience claim source, indicating where to search for\
            \ the audience value. The allowed values and their meaning are:\n\n<pre>\n\
            \"access-token\" - The OAuth v2 access_token.\n\"id-token\" - The OpenID\
            \ Connect id_token.\n\"introspection\" - The result of introspecting the\
            \ OAuth v2 access_token.\n</pre>\n Deprecated since 2.25. authenticationOauthProviders\
            \ replaced by authenticationOauthProfiles."
          enum:
          - access-token
          - id-token
          - introspection
        audienceClaimValue:
          type: string
          description: The required audience value for a token to be considered valid.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
        audienceValidationEnabled:
          type: boolean
          description: Indicates whether audience validation is enabled. Deprecated
            since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
        authenticationSuccessCount:
          type: integer
          description: The number of OAuth Provider client authentications that succeeded.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        authorizationGroupClaimName:
          type: string
          description: "The authorization group claim name, indicating which part\
            \ of the object to use for determining the authorization group. Deprecated\
            \ since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles."
        authorizationGroupClaimSource:
          type: string
          description: "The authorization group claim source, indicating where to\
            \ search for the authorization group name. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"access-token\" - The OAuth v2 access_token.\n\
            \"id-token\" - The OpenID Connect id_token.\n\"introspection\" - The result\
            \ of introspecting the OAuth v2 access_token.\n</pre>\n Deprecated since\
            \ 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles."
          enum:
          - access-token
          - id-token
          - introspection
        authorizationGroupEnabled:
          type: boolean
          description: Indicates whether OAuth based authorization is enabled and
            the configured authorization type for OAuth clients is overridden. Deprecated
            since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
        disconnectOnTokenExpirationEnabled:
          type: boolean
          description: Indicates whether clients are disconnected when their tokens
            expire. Deprecated since 2.25. authenticationOauthProviders replaced by
            authenticationOauthProfiles.
        enabled:
          type: boolean
          description: Indicates whether OAuth Provider client authentication is enabled.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
        jwksLastRefreshFailureReason:
          type: string
          description: The reason for the last JWKS public key refresh failure. Deprecated
            since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
        jwksLastRefreshFailureTime:
          type: integer
          description: The timestamp of the last JWKS public key refresh failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Deprecated since 2.25. authenticationOauthProviders replaced
            by authenticationOauthProfiles.
          format: int32
        jwksLastRefreshTime:
          type: integer
          description: The timestamp of the last JWKS public key refresh success.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Deprecated since 2.25. authenticationOauthProviders replaced
            by authenticationOauthProfiles.
          format: int32
        jwksNextScheduledRefreshTime:
          type: integer
          description: The timestamp of the next scheduled JWKS public key refresh.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Deprecated since 2.25. authenticationOauthProviders replaced
            by authenticationOauthProfiles.
          format: int32
        jwksRefreshFailureCount:
          type: integer
          description: The number of JWKS public key refresh failures. Deprecated
            since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        jwksRefreshInterval:
          type: integer
          description: The number of seconds between forced JWKS public key refreshing.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int32
        jwksUri:
          type: string
          description: The URI where the OAuth provider publishes its JWKS public
            keys. Deprecated since 2.25. authenticationOauthProviders replaced by
            authenticationOauthProfiles.
        loginFailureIncorrectAudienceValueCount:
          type: integer
          description: The number of login failures due to an incorrect audience value.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureInvalidAudienceValueCount:
          type: integer
          description: The number of login failures due to an invalid audience value.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureInvalidAuthorizationGroupValueCount:
          type: integer
          description: The number of login failures due to an invalid authorization
            group value (zero-length or non-string). Deprecated since 2.25. authenticationOauthProviders
            replaced by authenticationOauthProfiles.
          format: int64
        loginFailureInvalidJwtSignatureCount:
          type: integer
          description: The number of login failures due to an invalid JWT signature.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureInvalidUsernameValueCount:
          type: integer
          description: The number of login failures due to an invalid username value.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureMismatchedUsernameCount:
          type: integer
          description: The number of login failures due to a mismatched username.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureMissingAudienceCount:
          type: integer
          description: The number of login failures due to a missing audience claim.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureMissingJwkCount:
          type: integer
          description: The number of login failures due to a missing JSON Web Key
            (JWK). Deprecated since 2.25. authenticationOauthProviders replaced by
            authenticationOauthProfiles.
          format: int64
        loginFailureMissingOrInvalidTokenCount:
          type: integer
          description: The number of login failures due to a missing or invalid token.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureMissingUsernameCount:
          type: integer
          description: The number of login failures due to a missing username. Deprecated
            since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureTokenExpiredCount:
          type: integer
          description: The number of login failures due to a token being expired.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureTokenIntrospectionErroredCount:
          type: integer
          description: The number of login failures due to a token introspection error
            response. Deprecated since 2.25. authenticationOauthProviders replaced
            by authenticationOauthProfiles.
          format: int64
        loginFailureTokenIntrospectionFailureCount:
          type: integer
          description: The number of login failures due to a failure to complete the
            token introspection. Deprecated since 2.25. authenticationOauthProviders
            replaced by authenticationOauthProfiles.
          format: int64
        loginFailureTokenIntrospectionHttpsErrorCount:
          type: integer
          description: The number of login failures due to a token introspection HTTPS
            error. Deprecated since 2.25. authenticationOauthProviders replaced by
            authenticationOauthProfiles.
          format: int64
        loginFailureTokenIntrospectionInvalidCount:
          type: integer
          description: The number of login failures due to a token introspection response
            being invalid. Deprecated since 2.25. authenticationOauthProviders replaced
            by authenticationOauthProfiles.
          format: int64
        loginFailureTokenIntrospectionTimeoutCount:
          type: integer
          description: The number of login failures due to a token introspection timeout.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureTokenNotValidYetCount:
          type: integer
          description: The number of login failures due to a token not being valid
            yet. Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        loginFailureUnsupportedAlgCount:
          type: integer
          description: The number of login failures due to an unsupported algorithm.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        missingAuthorizationGroupCount:
          type: integer
          description: The number of clients that did not provide an authorization
            group claim value when expected. Deprecated since 2.25. authenticationOauthProviders
            replaced by authenticationOauthProfiles.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN. Deprecated since 2.25. Replaced
            by authenticationOauthProfiles.
        oauthProviderName:
          type: string
          description: The name of the OAuth Provider. Deprecated since 2.25. Replaced
            by authenticationOauthProfiles.
        tokenIgnoreTimeLimitsEnabled:
          type: boolean
          description: Indicates whether to ignore time limits and accept tokens that
            are not yet valid or are no longer valid. Deprecated since 2.25. authenticationOauthProviders
            replaced by authenticationOauthProfiles.
        tokenIntrospectionAverageTime:
          type: integer
          description: "The one minute average of the time required to complete a\
            \ token introspection, in milliseconds (ms). Deprecated since 2.25. authenticationOauthProviders\
            \ replaced by authenticationOauthProfiles."
          format: int32
        tokenIntrospectionLastFailureReason:
          type: string
          description: The reason for the last token introspection failure. Deprecated
            since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
        tokenIntrospectionLastFailureTime:
          type: integer
          description: The timestamp of the last token introspection failure. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time). Deprecated since 2.25. authenticationOauthProviders replaced by
            authenticationOauthProfiles.
          format: int32
        tokenIntrospectionParameterName:
          type: string
          description: The parameter name used to identify the token during access
            token introspection. A standards compliant OAuth introspection server
            expects "token". Deprecated since 2.25. authenticationOauthProviders replaced
            by authenticationOauthProfiles.
        tokenIntrospectionSuccessCount:
          type: integer
          description: The number of token introspection successes. Deprecated since
            2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
          format: int64
        tokenIntrospectionTimeout:
          type: integer
          description: The maximum time in seconds a token introspection is allowed
            to take. Deprecated since 2.25. authenticationOauthProviders replaced
            by authenticationOauthProfiles.
          format: int32
        tokenIntrospectionUri:
          type: string
          description: The token introspection URI of the OAuth authentication server.
            Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
        tokenIntrospectionUsername:
          type: string
          description: The username to use when logging into the token introspection
            URI. Deprecated since 2.25. authenticationOauthProviders replaced by authenticationOauthProfiles.
        usernameClaimName:
          type: string
          description: "The username claim name, indicating which part of the object\
            \ to use for determining the username. Deprecated since 2.25. authenticationOauthProviders\
            \ replaced by authenticationOauthProfiles."
        usernameClaimSource:
          type: string
          description: "The username claim source, indicating where to search for\
            \ the username value. The allowed values and their meaning are:\n\n<pre>\n\
            \"access-token\" - The OAuth v2 access_token.\n\"id-token\" - The OpenID\
            \ Connect id_token.\n\"introspection\" - The result of introspecting the\
            \ OAuth v2 access_token.\n</pre>\n Deprecated since 2.25. authenticationOauthProviders\
            \ replaced by authenticationOauthProfiles."
          enum:
          - access-token
          - id-token
          - introspection
        usernameValidateEnabled:
          type: boolean
          description: Indicates whether the API provided username will be validated
            against the username calculated from the token(s). Deprecated since 2.25.
            authenticationOauthProviders replaced by authenticationOauthProfiles.
      example:
        audienceValidationEnabled: true
        loginFailureMissingOrInvalidTokenCount: 1
        jwksRefreshFailureCount: 5
        loginFailureTokenIntrospectionErroredCount: 1
        loginFailureTokenIntrospectionHttpsErrorCount: 5
        tokenIntrospectionTimeout: 1
        loginFailureInvalidAuthorizationGroupValueCount: 3
        jwksNextScheduledRefreshTime: 5
        msgVpnName: msgVpnName
        loginFailureTokenIntrospectionFailureCount: 4
        loginFailureUnsupportedAlgCount: 8
        usernameValidateEnabled: true
        tokenIntrospectionLastFailureReason: tokenIntrospectionLastFailureReason
        missingAuthorizationGroupCount: 9
        loginFailureMissingAudienceCount: 1
        tokenIgnoreTimeLimitsEnabled: true
        jwksLastRefreshTime: 1
        loginFailureTokenIntrospectionTimeoutCount: 9
        loginFailureMissingJwkCount: 1
        loginFailureInvalidUsernameValueCount: 4
        jwksLastRefreshFailureTime: 6
        jwksUri: jwksUri
        loginFailureTokenNotValidYetCount: 6
        loginFailureMissingUsernameCount: 6
        loginFailureTokenIntrospectionInvalidCount: 9
        enabled: true
        jwksRefreshInterval: 2
        authenticationSuccessCount: 0
        authorizationGroupEnabled: true
        tokenIntrospectionLastFailureTime: 3
        authorizationGroupClaimName: authorizationGroupClaimName
        disconnectOnTokenExpirationEnabled: true
        usernameClaimName: usernameClaimName
        audienceClaimName: audienceClaimName
        tokenIntrospectionParameterName: tokenIntrospectionParameterName
        loginFailureTokenExpiredCount: 7
        loginFailureIncorrectAudienceValueCount: 7
        loginFailureInvalidJwtSignatureCount: 2
        audienceClaimValue: audienceClaimValue
        oauthProviderName: oauthProviderName
        loginFailureMismatchedUsernameCount: 7
        loginFailureInvalidAudienceValueCount: 9
        tokenIntrospectionUsername: tokenIntrospectionUsername
        authorizationGroupClaimSource: access-token
        usernameClaimSource: access-token
        jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
        audienceClaimSource: access-token
        tokenIntrospectionUri: tokenIntrospectionUri
        tokenIntrospectionSuccessCount: 6
        tokenIntrospectionAverageTime: 6
    MsgVpnAuthenticationOauthProviderCollections:
      type: object
    MsgVpnAuthenticationOauthProviderLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this OAuth Provider object.
      example:
        uri: uri
    MsgVpnAuthenticationOauthProviderResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        links:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          audienceValidationEnabled: true
          loginFailureMissingOrInvalidTokenCount: 1
          jwksRefreshFailureCount: 5
          loginFailureTokenIntrospectionErroredCount: 1
          loginFailureTokenIntrospectionHttpsErrorCount: 5
          tokenIntrospectionTimeout: 1
          loginFailureInvalidAuthorizationGroupValueCount: 3
          jwksNextScheduledRefreshTime: 5
          msgVpnName: msgVpnName
          loginFailureTokenIntrospectionFailureCount: 4
          loginFailureUnsupportedAlgCount: 8
          usernameValidateEnabled: true
          tokenIntrospectionLastFailureReason: tokenIntrospectionLastFailureReason
          missingAuthorizationGroupCount: 9
          loginFailureMissingAudienceCount: 1
          tokenIgnoreTimeLimitsEnabled: true
          jwksLastRefreshTime: 1
          loginFailureTokenIntrospectionTimeoutCount: 9
          loginFailureMissingJwkCount: 1
          loginFailureInvalidUsernameValueCount: 4
          jwksLastRefreshFailureTime: 6
          jwksUri: jwksUri
          loginFailureTokenNotValidYetCount: 6
          loginFailureMissingUsernameCount: 6
          loginFailureTokenIntrospectionInvalidCount: 9
          enabled: true
          jwksRefreshInterval: 2
          authenticationSuccessCount: 0
          authorizationGroupEnabled: true
          tokenIntrospectionLastFailureTime: 3
          authorizationGroupClaimName: authorizationGroupClaimName
          disconnectOnTokenExpirationEnabled: true
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
          loginFailureTokenExpiredCount: 7
          loginFailureIncorrectAudienceValueCount: 7
          loginFailureInvalidJwtSignatureCount: 2
          audienceClaimValue: audienceClaimValue
          oauthProviderName: oauthProviderName
          loginFailureMismatchedUsernameCount: 7
          loginFailureInvalidAudienceValueCount: 9
          tokenIntrospectionUsername: tokenIntrospectionUsername
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          audienceClaimSource: access-token
          tokenIntrospectionUri: tokenIntrospectionUri
          tokenIntrospectionSuccessCount: 6
          tokenIntrospectionAverageTime: 6
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnAuthenticationOauthProvidersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - audienceValidationEnabled: true
          loginFailureMissingOrInvalidTokenCount: 1
          jwksRefreshFailureCount: 5
          loginFailureTokenIntrospectionErroredCount: 1
          loginFailureTokenIntrospectionHttpsErrorCount: 5
          tokenIntrospectionTimeout: 1
          loginFailureInvalidAuthorizationGroupValueCount: 3
          jwksNextScheduledRefreshTime: 5
          msgVpnName: msgVpnName
          loginFailureTokenIntrospectionFailureCount: 4
          loginFailureUnsupportedAlgCount: 8
          usernameValidateEnabled: true
          tokenIntrospectionLastFailureReason: tokenIntrospectionLastFailureReason
          missingAuthorizationGroupCount: 9
          loginFailureMissingAudienceCount: 1
          tokenIgnoreTimeLimitsEnabled: true
          jwksLastRefreshTime: 1
          loginFailureTokenIntrospectionTimeoutCount: 9
          loginFailureMissingJwkCount: 1
          loginFailureInvalidUsernameValueCount: 4
          jwksLastRefreshFailureTime: 6
          jwksUri: jwksUri
          loginFailureTokenNotValidYetCount: 6
          loginFailureMissingUsernameCount: 6
          loginFailureTokenIntrospectionInvalidCount: 9
          enabled: true
          jwksRefreshInterval: 2
          authenticationSuccessCount: 0
          authorizationGroupEnabled: true
          tokenIntrospectionLastFailureTime: 3
          authorizationGroupClaimName: authorizationGroupClaimName
          disconnectOnTokenExpirationEnabled: true
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
          loginFailureTokenExpiredCount: 7
          loginFailureIncorrectAudienceValueCount: 7
          loginFailureInvalidJwtSignatureCount: 2
          audienceClaimValue: audienceClaimValue
          oauthProviderName: oauthProviderName
          loginFailureMismatchedUsernameCount: 7
          loginFailureInvalidAudienceValueCount: 9
          tokenIntrospectionUsername: tokenIntrospectionUsername
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          audienceClaimSource: access-token
          tokenIntrospectionUri: tokenIntrospectionUri
          tokenIntrospectionSuccessCount: 6
          tokenIntrospectionAverageTime: 6
        - audienceValidationEnabled: true
          loginFailureMissingOrInvalidTokenCount: 1
          jwksRefreshFailureCount: 5
          loginFailureTokenIntrospectionErroredCount: 1
          loginFailureTokenIntrospectionHttpsErrorCount: 5
          tokenIntrospectionTimeout: 1
          loginFailureInvalidAuthorizationGroupValueCount: 3
          jwksNextScheduledRefreshTime: 5
          msgVpnName: msgVpnName
          loginFailureTokenIntrospectionFailureCount: 4
          loginFailureUnsupportedAlgCount: 8
          usernameValidateEnabled: true
          tokenIntrospectionLastFailureReason: tokenIntrospectionLastFailureReason
          missingAuthorizationGroupCount: 9
          loginFailureMissingAudienceCount: 1
          tokenIgnoreTimeLimitsEnabled: true
          jwksLastRefreshTime: 1
          loginFailureTokenIntrospectionTimeoutCount: 9
          loginFailureMissingJwkCount: 1
          loginFailureInvalidUsernameValueCount: 4
          jwksLastRefreshFailureTime: 6
          jwksUri: jwksUri
          loginFailureTokenNotValidYetCount: 6
          loginFailureMissingUsernameCount: 6
          loginFailureTokenIntrospectionInvalidCount: 9
          enabled: true
          jwksRefreshInterval: 2
          authenticationSuccessCount: 0
          authorizationGroupEnabled: true
          tokenIntrospectionLastFailureTime: 3
          authorizationGroupClaimName: authorizationGroupClaimName
          disconnectOnTokenExpirationEnabled: true
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
          loginFailureTokenExpiredCount: 7
          loginFailureIncorrectAudienceValueCount: 7
          loginFailureInvalidJwtSignatureCount: 2
          audienceClaimValue: audienceClaimValue
          oauthProviderName: oauthProviderName
          loginFailureMismatchedUsernameCount: 7
          loginFailureInvalidAudienceValueCount: 9
          tokenIntrospectionUsername: tokenIntrospectionUsername
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          audienceClaimSource: access-token
          tokenIntrospectionUri: tokenIntrospectionUri
          tokenIntrospectionSuccessCount: 6
          tokenIntrospectionAverageTime: 6
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnAuthorizationGroup:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The ACL Profile of the Authorization Group.
        authorizationGroupName:
          type: string
          description: "The name of the Authorization Group. For LDAP groups, special\
            \ care is needed if the group name contains special characters such as\
            \ '#', '+', ';', '=' as the value of the group name returned from the\
            \ LDAP server might prepend those characters with '\\'. For example a\
            \ group name called 'test#,lab,com' will be returned from the LDAP server\
            \ as 'test\\#,lab,com'."
        clientProfileName:
          type: string
          description: The Client Profile of the Authorization Group.
        enabled:
          type: boolean
          description: Indicates whether the Authorization Group is enabled.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        authorizationGroupName: authorizationGroupName
        clientProfileName: clientProfileName
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        enabled: true
    MsgVpnAuthorizationGroupCollections:
      type: object
    MsgVpnAuthorizationGroupLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Authorization Group object.
      example:
        uri: uri
    MsgVpnAuthorizationGroupResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAuthorizationGroupCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        links:
          $ref: '#/components/schemas/MsgVpnAuthorizationGroupLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnAuthorizationGroupsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthorizationGroupCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthorizationGroupLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
        - authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnBridge:
      type: object
      properties:
        averageRxByteRate:
          type: integer
          description: "The one minute average of the message rate received from the\
            \ Bridge, in bytes per second (B/sec). Available since 2.13."
          format: int64
        averageRxMsgRate:
          type: integer
          description: "The one minute average of the message rate received from the\
            \ Bridge, in messages per second (msg/sec). Available since 2.13."
          format: int64
        averageTxByteRate:
          type: integer
          description: "The one minute average of the message rate transmitted to\
            \ the Bridge, in bytes per second (B/sec). Available since 2.13."
          format: int64
        averageTxMsgRate:
          type: integer
          description: "The one minute average of the message rate transmitted to\
            \ the Bridge, in messages per second (msg/sec). Available since 2.13."
          format: int64
        boundToQueue:
          type: boolean
          description: Indicates whether the Bridge is bound to the queue in the remote
            Message VPN.
        bridgeName:
          type: string
          description: The name of the Bridge.
        bridgeVirtualRouter:
          type: string
          description: "The virtual router of the Bridge. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary\
            \ virtual router.\n\"backup\" - The Bridge is used for the backup virtual\
            \ router.\n\"auto\" - The Bridge is automatically assigned a virtual router\
            \ at creation, depending on the broker's active-standby role.\n</pre>\n"
          enum:
          - primary
          - backup
          - auto
        clientName:
          type: string
          description: The name of the Client for the Bridge.
        compressed:
          type: boolean
          description: Indicates whether messages transmitted over the Bridge are
            compressed.
        controlRxByteCount:
          type: integer
          description: "The amount of client control messages received from the Bridge,\
            \ in bytes (B). Available since 2.13."
          format: int64
        controlRxMsgCount:
          type: integer
          description: The number of client control messages received from the Bridge.
            Available since 2.13.
          format: int64
        controlTxByteCount:
          type: integer
          description: "The amount of client control messages transmitted to the Bridge,\
            \ in bytes (B). Available since 2.13."
          format: int64
        controlTxMsgCount:
          type: integer
          description: The number of client control messages transmitted to the Bridge.
            Available since 2.13.
          format: int64
        counter:
          $ref: '#/components/schemas/MsgVpnBridgeCounter'
        dataRxByteCount:
          type: integer
          description: "The amount of client data messages received from the Bridge,\
            \ in bytes (B). Available since 2.13."
          format: int64
        dataRxMsgCount:
          type: integer
          description: The number of client data messages received from the Bridge.
            Available since 2.13.
          format: int64
        dataTxByteCount:
          type: integer
          description: "The amount of client data messages transmitted to the Bridge,\
            \ in bytes (B). Available since 2.13."
          format: int64
        dataTxMsgCount:
          type: integer
          description: The number of client data messages transmitted to the Bridge.
            Available since 2.13.
          format: int64
        discardedRxMsgCount:
          type: integer
          description: The number of messages discarded during reception from the
            Bridge. Available since 2.13.
          format: int64
        discardedTxMsgCount:
          type: integer
          description: The number of messages discarded during transmission to the
            Bridge. Available since 2.13.
          format: int64
        enabled:
          type: boolean
          description: Indicates whether the Bridge is enabled.
        encrypted:
          type: boolean
          description: Indicates whether messages transmitted over the Bridge are
            encrypted with TLS.
        establisher:
          type: string
          description: |
            The establisher of the Bridge connection. The allowed values and their meaning are:

            <pre>
            "local" - The Bridge connection was established by the local Message VPN.
            "remote" - The Bridge connection was established by the remote Message VPN.
            </pre>
        inboundFailureReason:
          type: string
          description: "The reason for the inbound connection failure from the Bridge.\
            \ If there is no failure reason, an empty string (\"\") is returned."
        inboundState:
          type: string
          description: "The state of the inbound connection from the Bridge. The allowed\
            \ values and their meaning are:\n\n<pre>\n\"init\" - The bridge is down\
            \ but is initializing.\n\"disabled\" - The bridge is down. It has been\
            \ disabled by configuration.\n\"prepare-wait-to-connect\" - The bridge\
            \ is down. It is waiting to connect to the remote broker.\n\"prepare-fetching-dns\"\
            \ - The bridge is down. The domain name of the remote  broker is being\
            \ resolved.\n\"not-ready-connecting\" - The bridge is down. It is in the\
            \ process of connecting to the remote broker.\n\"not-ready-handshaking\"\
            \ - The bridge is down. It has connected to the remote broker, and is\
            \ in the process of negotiating with it.\n\"not-ready-wait-next\" - The\
            \ bridge is down. It has failed to connect to a remote broker, and is\
            \ waiting for the configured remote retry delay to expire before retrying.\n\
            \"not-ready-wait-reuse\" - The bridge is down. It established its own\
            \ connection to  the remote broker, but determined instead that it should\
            \ use a pre-existing connection established from that remote broker. It\
            \ is waiting for its own connection to close before reusing the existing\
            \ connection.\n\"not-ready-wait-bridge-version-mismatch\" - The bridge\
            \ is down. The connection failed to connect due to the remote broker presenting\
            \ an unexpected version.\n\"not-ready-wait-cleanup\" - The bridge is down.\
            \ Its connection has closed and is in the process of being cleaned up.\n\
            \"ready-subscribing\" - The bridge is up and is attracting traffic. It\
            \ is in the process of adding configured subscriptions to the remote broker.\n\
            \"ready-in-sync\" - The bridge is up and is attracting traffic. All configured\
            \ subscriptions have been added to the remote router.\n\"stalled\" - The\
            \ bridge is down. Inbound guaranteed messages are not flowing. Administrative\
            \ actions may be required to clear this state.\n\"not-applicable\" - The\
            \ connection is not relevant in the inbound direction.\n</pre>\n"
        lastTxMsgId:
          type: integer
          description: The ID of the last message transmitted to the Bridge.
          format: int64
        localInterface:
          type: string
          description: The physical interface on the local Message VPN host for connecting
            to the remote Message VPN.
        localQueueName:
          type: string
          description: The name of the local queue for the Bridge.
        loginRxMsgCount:
          type: integer
          description: The number of login request messages received from the Bridge.
            Available since 2.13.
          format: int64
        loginTxMsgCount:
          type: integer
          description: The number of login response messages transmitted to the Bridge.
            Available since 2.13.
          format: int64
        maxTtl:
          type: integer
          description: The maximum time-to-live (TTL) in hops. Messages are discarded
            if their TTL exceeds this value.
          format: int64
        msgSpoolRxMsgCount:
          type: integer
          description: The number of guaranteed messages received from the Bridge.
            Available since 2.13.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        outboundState:
          type: string
          description: |
            The state of the outbound connection to the Bridge. The allowed values and their meaning are:

            <pre>
            "ready" - The bridge is up and is delivering traffic.
            "not-applicable" - The connection is not relevant in the outbound direction.
            </pre>
        rate:
          $ref: '#/components/schemas/MsgVpnBridgeRate'
        remoteAddress:
          type: string
          description: The FQDN or IP address of the remote Message VPN.
        remoteAuthenticationBasicClientUsername:
          type: string
          description: The Client Username the Bridge uses to login to the remote
            Message VPN.
        remoteAuthenticationClientCertConfigTime:
          type: integer
          description: The timestamp of when the client-certificate was configured.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Available since 2.28.
          format: int32
        remoteAuthenticationClientCertThumbprint:
          type: string
          description: The thumbprint of the client-certificate. Available since 2.28.
        remoteAuthenticationScheme:
          type: string
          description: |
            The authentication scheme for the remote Message VPN. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
          enum:
          - basic
          - client-certificate
        remoteConnectionRetryCount:
          type: integer
          description: The maximum number of retry attempts to establish a connection
            to the remote Message VPN. A value of 0 means to retry forever.
          format: int64
        remoteConnectionRetryDelay:
          type: integer
          description: The number of seconds the broker waits for the bridge connection
            to be established before attempting a new connection.
          format: int64
        remoteDeliverToOnePriority:
          type: string
          description: |
            The priority for deliver-to-one (DTO) messages transmitted from the remote Message VPN. The allowed values and their meaning are:

            <pre>
            "p1" - The 1st or highest priority.
            "p2" - The 2nd highest priority.
            "p3" - The 3rd highest priority.
            "p4" - The 4th highest priority.
            "da" - Ignore priority and deliver always.
            </pre>
          enum:
          - p1
          - p2
          - p3
          - p4
          - da
        remoteMsgVpnName:
          type: string
          description: The name of the remote Message VPN.
        remoteRouterName:
          type: string
          description: The name of the remote router.
        remoteTxFlowId:
          type: integer
          description: The ID of the transmit flow for the connected remote Message
            VPN.
          format: int32
        rxByteCount:
          type: integer
          description: "The amount of messages received from the Bridge, in bytes\
            \ (B). Available since 2.13."
          format: int64
        rxByteRate:
          type: integer
          description: "The current message rate received from the Bridge, in bytes\
            \ per second (B/sec). Available since 2.13."
          format: int64
        rxConnectionFailureCategory:
          type: string
          description: |-
            The category of the inbound connection failure from the Bridge. The allowed values and their meaning are:

            <pre>
            "no-failure" - There is no bridge failure.
            "local-configuration-problem" - The bridge failure is a local configuration problem.
            "local-operational-state-problem" - The bridge failure is an operational state problem.
            </pre>
             Available since 2.18.
        rxMsgCount:
          type: integer
          description: The number of messages received from the Bridge. Available
            since 2.13.
          format: int64
        rxMsgRate:
          type: integer
          description: "The current message rate received from the Bridge, in messages\
            \ per second (msg/sec). Available since 2.13."
          format: int64
        tlsCipherSuiteList:
          type: string
          description: The colon-separated list of cipher suites supported for TLS
            connections to the remote Message VPN. The value "default" implies all
            supported suites ordered from most secure to least secure.
        tlsDefaultCipherSuiteList:
          type: boolean
          description: Indicates whether the Bridge is configured to use the default
            cipher-suite list.
        ttlExceededEventRaised:
          type: boolean
          description: Indicates whether the TTL (hops) exceeded event has been raised.
        txByteCount:
          type: integer
          description: "The amount of messages transmitted to the Bridge, in bytes\
            \ (B). Available since 2.13."
          format: int64
        txByteRate:
          type: integer
          description: "The current message rate transmitted to the Bridge, in bytes\
            \ per second (B/sec). Available since 2.13."
          format: int64
        txMsgCount:
          type: integer
          description: The number of messages transmitted to the Bridge. Available
            since 2.13.
          format: int64
        txMsgRate:
          type: integer
          description: "The current message rate transmitted to the Bridge, in messages\
            \ per second (msg/sec). Available since 2.13."
          format: int64
        uptime:
          type: integer
          description: The amount of time in seconds since the Bridge connected to
            the remote Message VPN.
          format: int64
      example:
        averageRxByteRate: 5
        remoteTxFlowId: 6
        txMsgRate: 0
        dataRxByteCount: 2
        remoteDeliverToOnePriority: p1
        remoteAuthenticationClientCertThumbprint: remoteAuthenticationClientCertThumbprint
        rxMsgRate: 7
        localInterface: localInterface
        dataTxMsgCount: 5
        discardedRxMsgCount: 6
        remoteConnectionRetryCount: 4
        msgVpnName: msgVpnName
        txMsgCount: 9
        remoteAddress: remoteAddress
        averageTxMsgRate: 9
        msgSpoolRxMsgCount: 6
        remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
        controlRxByteCount: 3
        rxByteCount: 4
        outboundState: outboundState
        dataTxByteCount: 6
        bridgeVirtualRouter: primary
        inboundState: inboundState
        tlsCipherSuiteList: tlsCipherSuiteList
        lastTxMsgId: 3
        remoteAuthenticationScheme: basic
        rxByteRate: 1
        loginRxMsgCount: 7
        boundToQueue: true
        clientName: clientName
        controlRxMsgCount: 2
        enabled: true
        txByteRate: 0
        inboundFailureReason: inboundFailureReason
        remoteMsgVpnName: remoteMsgVpnName
        averageTxByteRate: 7
        rate:
          averageRxByteRate: 0
          txMsgRate: 5
          averageTxByteRate: 8
          averageRxMsgRate: 4
          rxByteRate: 3
          rxMsgRate: 3
          averageTxMsgRate: 7
          txByteRate: 7
        discardedTxMsgCount: 3
        ttlExceededEventRaised: true
        remoteConnectionRetryDelay: 0
        establisher: establisher
        controlTxMsgCount: 7
        rxMsgCount: 4
        maxTtl: 7
        remoteAuthenticationClientCertConfigTime: 3
        averageRxMsgRate: 2
        dataRxMsgCount: 6
        localQueueName: localQueueName
        counter:
          loginRxMsgCount: 6
          msgSpoolRxMsgCount: 9
          controlTxMsgCount: 6
          rxMsgCount: 3
          controlRxByteCount: 1
          dataRxByteCount: 7
          dataRxMsgCount: 1
          rxByteCount: 6
          controlRxMsgCount: 1
          loginTxMsgCount: 8
          controlTxByteCount: 1
          dataTxByteCount: 4
          txByteCount: 6
          dataTxMsgCount: 5
          discardedRxMsgCount: 9
          discardedTxMsgCount: 9
          txMsgCount: 1
        loginTxMsgCount: 0
        remoteRouterName: remoteRouterName
        bridgeName: bridgeName
        tlsDefaultCipherSuiteList: true
        controlTxByteCount: 4
        rxConnectionFailureCategory: rxConnectionFailureCategory
        uptime: 7
        txByteCount: 9
        encrypted: true
        compressed: true
    MsgVpnBridgeCollections:
      type: object
      properties:
        localSubscriptions:
          $ref: '#/components/schemas/MsgVpnBridgeCollectionsLocalSubscriptions'
        remoteMsgVpns:
          $ref: '#/components/schemas/MsgVpnBridgeCollectionsRemoteMsgVpns'
        remoteSubscriptions:
          $ref: '#/components/schemas/MsgVpnBridgeCollectionsRemoteSubscriptions'
        tlsTrustedCommonNames:
          $ref: '#/components/schemas/MsgVpnBridgeCollectionsTlsTrustedCommonNames'
      example:
        remoteSubscriptions:
          count: 1
        localSubscriptions:
          count: 0
        tlsTrustedCommonNames:
          count: 5
        remoteMsgVpns:
          count: 6
    MsgVpnBridgeCollectionsLocalSubscriptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the localSubscriptions collection.
          format: int64
      example:
        count: 0
    MsgVpnBridgeCollectionsRemoteMsgVpns:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the remoteMsgVpns collection.
          format: int64
      example:
        count: 6
    MsgVpnBridgeCollectionsRemoteSubscriptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the remoteSubscriptions collection.
          format: int64
      example:
        count: 1
    MsgVpnBridgeCollectionsTlsTrustedCommonNames:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the tlsTrustedCommonNames collection.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
          format: int64
      example:
        count: 5
    MsgVpnBridgeCounter:
      type: object
      properties:
        controlRxByteCount:
          type: integer
          description: "The amount of client control messages received from the Bridge,\
            \ in bytes (B). Deprecated since 2.13. This attribute has been moved to\
            \ the MsgVpnBridge object."
          format: int64
        controlRxMsgCount:
          type: integer
          description: The number of client control messages received from the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
        controlTxByteCount:
          type: integer
          description: "The amount of client control messages transmitted to the Bridge,\
            \ in bytes (B). Deprecated since 2.13. This attribute has been moved to\
            \ the MsgVpnBridge object."
          format: int64
        controlTxMsgCount:
          type: integer
          description: The number of client control messages transmitted to the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
        dataRxByteCount:
          type: integer
          description: "The amount of client data messages received from the Bridge,\
            \ in bytes (B). Deprecated since 2.13. This attribute has been moved to\
            \ the MsgVpnBridge object."
          format: int64
        dataRxMsgCount:
          type: integer
          description: The number of client data messages received from the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
        dataTxByteCount:
          type: integer
          description: "The amount of client data messages transmitted to the Bridge,\
            \ in bytes (B). Deprecated since 2.13. This attribute has been moved to\
            \ the MsgVpnBridge object."
          format: int64
        dataTxMsgCount:
          type: integer
          description: The number of client data messages transmitted to the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
        discardedRxMsgCount:
          type: integer
          description: The number of messages discarded during reception from the
            Bridge. Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
        discardedTxMsgCount:
          type: integer
          description: The number of messages discarded during transmission to the
            Bridge. Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
        loginRxMsgCount:
          type: integer
          description: The number of login request messages received from the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
        loginTxMsgCount:
          type: integer
          description: The number of login response messages transmitted to the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
        msgSpoolRxMsgCount:
          type: integer
          description: The number of guaranteed messages received from the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
        rxByteCount:
          type: integer
          description: "The amount of messages received from the Bridge, in bytes\
            \ (B). Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge\
            \ object."
          format: int64
        rxMsgCount:
          type: integer
          description: The number of messages received from the Bridge. Deprecated
            since 2.13. This attribute has been moved to the MsgVpnBridge object.
          format: int64
        txByteCount:
          type: integer
          description: "The amount of messages transmitted to the Bridge, in bytes\
            \ (B). Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge\
            \ object."
          format: int64
        txMsgCount:
          type: integer
          description: The number of messages transmitted to the Bridge. Deprecated
            since 2.13. This attribute has been moved to the MsgVpnBridge object.
          format: int64
      description: The counters for the Bridge. Deprecated since 2.13. All attributes
        in this object have been moved to the MsgVpnBridge object.
      example:
        loginRxMsgCount: 6
        msgSpoolRxMsgCount: 9
        controlTxMsgCount: 6
        rxMsgCount: 3
        controlRxByteCount: 1
        dataRxByteCount: 7
        dataRxMsgCount: 1
        rxByteCount: 6
        controlRxMsgCount: 1
        loginTxMsgCount: 8
        controlTxByteCount: 1
        dataTxByteCount: 4
        txByteCount: 6
        dataTxMsgCount: 5
        discardedRxMsgCount: 9
        discardedTxMsgCount: 9
        txMsgCount: 1
    MsgVpnBridgeLinks:
      type: object
      properties:
        localSubscriptionsUri:
          type: string
          description: The URI of this Bridge's collection of Bridge Local Subscriptions
            objects.
        remoteMsgVpnsUri:
          type: string
          description: The URI of this Bridge's collection of Remote Message VPN objects.
        remoteSubscriptionsUri:
          type: string
          description: The URI of this Bridge's collection of Remote Subscription
            objects.
        tlsTrustedCommonNamesUri:
          type: string
          description: The URI of this Bridge's collection of Trusted Common Name
            objects. Deprecated since 2.18. Common Name validation has been replaced
            by Server Certificate Name validation.
        uri:
          type: string
          description: The URI of this Bridge object.
      example:
        remoteMsgVpnsUri: remoteMsgVpnsUri
        localSubscriptionsUri: localSubscriptionsUri
        uri: uri
        remoteSubscriptionsUri: remoteSubscriptionsUri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnBridgeLocalSubscription:
      type: object
      properties:
        bridgeName:
          type: string
          description: The name of the Bridge.
        bridgeVirtualRouter:
          type: string
          description: "The virtual router of the Bridge. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary\
            \ virtual router.\n\"backup\" - The Bridge is used for the backup virtual\
            \ router.\n\"auto\" - The Bridge is automatically assigned a virtual router\
            \ at creation, depending on the broker's active-standby role.\n</pre>\n"
          enum:
          - primary
          - backup
          - auto
        dtoPriority:
          type: string
          description: |
            The priority of the Bridge local subscription topic for receiving deliver-to-one (DTO) messages. The allowed values and their meaning are:

            <pre>
            "p1" - The 1st or highest priority.
            "p2" - The 2nd highest priority.
            "p3" - The 3rd highest priority.
            "p4" - The 4th highest priority.
            "da" - Ignore priority and deliver always.
            </pre>
        localSubscriptionTopic:
          type: string
          description: The topic of the Bridge local subscription.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        bridgeVirtualRouter: primary
        msgVpnName: msgVpnName
        bridgeName: bridgeName
        localSubscriptionTopic: localSubscriptionTopic
        dtoPriority: dtoPriority
    MsgVpnBridgeLocalSubscriptionCollections:
      type: object
    MsgVpnBridgeLocalSubscriptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Bridge Local Subscriptions object.
      example:
        uri: uri
    MsgVpnBridgeLocalSubscriptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnBridgeLocalSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          localSubscriptionTopic: localSubscriptionTopic
          dtoPriority: dtoPriority
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnBridgeLocalSubscriptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeLocalSubscription'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          localSubscriptionTopic: localSubscriptionTopic
          dtoPriority: dtoPriority
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          localSubscriptionTopic: localSubscriptionTopic
          dtoPriority: dtoPriority
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnBridgeRate:
      type: object
      properties:
        averageRxByteRate:
          type: integer
          description: "The one minute average of the message rate received from the\
            \ Bridge, in bytes per second (B/sec). Deprecated since 2.13. This attribute\
            \ has been moved to the MsgVpnBridge object."
          format: int64
        averageRxMsgRate:
          type: integer
          description: "The one minute average of the message rate received from the\
            \ Bridge, in messages per second (msg/sec). Deprecated since 2.13. This\
            \ attribute has been moved to the MsgVpnBridge object."
          format: int64
        averageTxByteRate:
          type: integer
          description: "The one minute average of the message rate transmitted to\
            \ the Bridge, in bytes per second (B/sec). Deprecated since 2.13. This\
            \ attribute has been moved to the MsgVpnBridge object."
          format: int64
        averageTxMsgRate:
          type: integer
          description: "The one minute average of the message rate transmitted to\
            \ the Bridge, in messages per second (msg/sec). Deprecated since 2.13.\
            \ This attribute has been moved to the MsgVpnBridge object."
          format: int64
        rxByteRate:
          type: integer
          description: "The current message rate received from the Bridge, in bytes\
            \ per second (B/sec). Deprecated since 2.13. This attribute has been moved\
            \ to the MsgVpnBridge object."
          format: int64
        rxMsgRate:
          type: integer
          description: "The current message rate received from the Bridge, in messages\
            \ per second (msg/sec). Deprecated since 2.13. This attribute has been\
            \ moved to the MsgVpnBridge object."
          format: int64
        txByteRate:
          type: integer
          description: "The current message rate transmitted to the Bridge, in bytes\
            \ per second (B/sec). Deprecated since 2.13. This attribute has been moved\
            \ to the MsgVpnBridge object."
          format: int64
        txMsgRate:
          type: integer
          description: "The current message rate transmitted to the Bridge, in messages\
            \ per second (msg/sec). Deprecated since 2.13. This attribute has been\
            \ moved to the MsgVpnBridge object."
          format: int64
      description: The rates for the Bridge. Deprecated since 2.13. All attributes
        in this object have been moved to the MsgVpnBridge object.
      example:
        averageRxByteRate: 0
        txMsgRate: 5
        averageTxByteRate: 8
        averageRxMsgRate: 4
        rxByteRate: 3
        rxMsgRate: 3
        averageTxMsgRate: 7
        txByteRate: 7
    MsgVpnBridgeRemoteMsgVpn:
      type: object
      properties:
        boundToQueue:
          type: boolean
          description: Indicates whether the Bridge is bound to the queue in the remote
            Message VPN.
        bridgeName:
          type: string
          description: The name of the Bridge.
        bridgeVirtualRouter:
          type: string
          description: "The virtual router of the Bridge. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary\
            \ virtual router.\n\"backup\" - The Bridge is used for the backup virtual\
            \ router.\n\"auto\" - The Bridge is automatically assigned a virtual router\
            \ at creation, depending on the broker's active-standby role.\n</pre>\n"
          enum:
          - primary
          - backup
          - auto
        clientUsername:
          type: string
          description: The Client Username the Bridge uses to login to the remote
            Message VPN. This per remote Message VPN value overrides the value provided
            for the Bridge overall.
        compressedDataEnabled:
          type: boolean
          description: Indicates whether data compression is enabled for the remote
            Message VPN connection.
        connectOrder:
          type: integer
          description: "The preference given to incoming connections from remote Message\
            \ VPN hosts, from 1 (highest priority) to 4 (lowest priority)."
          format: int32
        egressFlowWindowSize:
          type: integer
          description: The number of outstanding guaranteed messages that can be transmitted
            over the remote Message VPN connection before an acknowledgement is received.
          format: int64
        enabled:
          type: boolean
          description: Indicates whether the remote Message VPN is enabled.
        lastConnectionFailureReason:
          type: string
          description: The reason for the last connection failure to the remote Message
            VPN.
        lastQueueBindFailureReason:
          type: string
          description: The reason for the last queue bind failure in the remote Message
            VPN.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        queueBinding:
          type: string
          description: The queue binding of the Bridge in the remote Message VPN.
        queueBoundUptime:
          type: integer
          description: The amount of time in seconds since the queue was bound in
            the remote Message VPN.
          format: int32
        remoteMsgVpnInterface:
          type: string
          description: "The physical interface on the local Message VPN host for connecting\
            \ to the remote Message VPN. By default, an interface is chosen automatically\
            \ (recommended), but if specified, `remoteMsgVpnLocation` must not be\
            \ a virtual router name."
        remoteMsgVpnLocation:
          type: string
          description: "The location of the remote Message VPN as either an FQDN with\
            \ port, IP address with port, or virtual router name (starting with \"\
            v:\")."
        remoteMsgVpnName:
          type: string
          description: The name of the remote Message VPN.
        tlsEnabled:
          type: boolean
          description: Indicates whether encryption (TLS) is enabled for the remote
            Message VPN connection.
        unidirectionalClientProfile:
          type: string
          description: "The Client Profile for the unidirectional Bridge of the remote\
            \ Message VPN. The Client Profile must exist in the local Message VPN,\
            \ and it is used only for the TCP parameters. Note that the default client\
            \ profile has a TCP maximum window size of 2MB."
        up:
          type: boolean
          description: Indicates whether the connection to the remote Message VPN
            is up.
      example:
        queueBoundUptime: 1
        boundToQueue: true
        egressFlowWindowSize: 6
        remoteMsgVpnLocation: remoteMsgVpnLocation
        bridgeName: bridgeName
        compressedDataEnabled: true
        enabled: true
        remoteMsgVpnName: remoteMsgVpnName
        bridgeVirtualRouter: primary
        remoteMsgVpnInterface: remoteMsgVpnInterface
        tlsEnabled: true
        clientUsername: clientUsername
        connectOrder: 0
        queueBinding: queueBinding
        msgVpnName: msgVpnName
        up: true
        lastQueueBindFailureReason: lastQueueBindFailureReason
        lastConnectionFailureReason: lastConnectionFailureReason
        unidirectionalClientProfile: unidirectionalClientProfile
    MsgVpnBridgeRemoteMsgVpnCollections:
      type: object
    MsgVpnBridgeRemoteMsgVpnLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Remote Message VPN object.
      example:
        uri: uri
    MsgVpnBridgeRemoteMsgVpnResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnCollections'
        data:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          queueBoundUptime: 1
          boundToQueue: true
          egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          up: true
          lastQueueBindFailureReason: lastQueueBindFailureReason
          lastConnectionFailureReason: lastConnectionFailureReason
          unidirectionalClientProfile: unidirectionalClientProfile
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnBridgeRemoteMsgVpnsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - queueBoundUptime: 1
          boundToQueue: true
          egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          up: true
          lastQueueBindFailureReason: lastQueueBindFailureReason
          lastConnectionFailureReason: lastConnectionFailureReason
          unidirectionalClientProfile: unidirectionalClientProfile
        - queueBoundUptime: 1
          boundToQueue: true
          egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          up: true
          lastQueueBindFailureReason: lastQueueBindFailureReason
          lastConnectionFailureReason: lastConnectionFailureReason
          unidirectionalClientProfile: unidirectionalClientProfile
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnBridgeRemoteSubscription:
      type: object
      properties:
        bridgeName:
          type: string
          description: The name of the Bridge.
        bridgeVirtualRouter:
          type: string
          description: "The virtual router of the Bridge. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary\
            \ virtual router.\n\"backup\" - The Bridge is used for the backup virtual\
            \ router.\n\"auto\" - The Bridge is automatically assigned a virtual router\
            \ at creation, depending on the broker's active-standby role.\n</pre>\n"
          enum:
          - primary
          - backup
          - auto
        deliverAlwaysEnabled:
          type: boolean
          description: Indicates whether deliver-always is enabled for the Bridge
            remote subscription topic instead of a deliver-to-one remote priority.
            A given topic for the Bridge may be deliver-to-one or deliver-always but
            not both.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        remoteSubscriptionTopic:
          type: string
          description: The topic of the Bridge remote subscription.
      example:
        bridgeVirtualRouter: primary
        deliverAlwaysEnabled: true
        remoteSubscriptionTopic: remoteSubscriptionTopic
        msgVpnName: msgVpnName
        bridgeName: bridgeName
    MsgVpnBridgeRemoteSubscriptionCollections:
      type: object
    MsgVpnBridgeRemoteSubscriptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Remote Subscription object.
      example:
        uri: uri
    MsgVpnBridgeRemoteSubscriptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnBridgeRemoteSubscriptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscription'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        - bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnBridgeResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnBridgeCollections'
        data:
          $ref: '#/components/schemas/MsgVpnBridge'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          averageRxByteRate: 5
          remoteTxFlowId: 6
          txMsgRate: 0
          dataRxByteCount: 2
          remoteDeliverToOnePriority: p1
          remoteAuthenticationClientCertThumbprint: remoteAuthenticationClientCertThumbprint
          rxMsgRate: 7
          localInterface: localInterface
          dataTxMsgCount: 5
          discardedRxMsgCount: 6
          remoteConnectionRetryCount: 4
          msgVpnName: msgVpnName
          txMsgCount: 9
          remoteAddress: remoteAddress
          averageTxMsgRate: 9
          msgSpoolRxMsgCount: 6
          remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          controlRxByteCount: 3
          rxByteCount: 4
          outboundState: outboundState
          dataTxByteCount: 6
          bridgeVirtualRouter: primary
          inboundState: inboundState
          tlsCipherSuiteList: tlsCipherSuiteList
          lastTxMsgId: 3
          remoteAuthenticationScheme: basic
          rxByteRate: 1
          loginRxMsgCount: 7
          boundToQueue: true
          clientName: clientName
          controlRxMsgCount: 2
          enabled: true
          txByteRate: 0
          inboundFailureReason: inboundFailureReason
          remoteMsgVpnName: remoteMsgVpnName
          averageTxByteRate: 7
          rate:
            averageRxByteRate: 0
            txMsgRate: 5
            averageTxByteRate: 8
            averageRxMsgRate: 4
            rxByteRate: 3
            rxMsgRate: 3
            averageTxMsgRate: 7
            txByteRate: 7
          discardedTxMsgCount: 3
          ttlExceededEventRaised: true
          remoteConnectionRetryDelay: 0
          establisher: establisher
          controlTxMsgCount: 7
          rxMsgCount: 4
          maxTtl: 7
          remoteAuthenticationClientCertConfigTime: 3
          averageRxMsgRate: 2
          dataRxMsgCount: 6
          localQueueName: localQueueName
          counter:
            loginRxMsgCount: 6
            msgSpoolRxMsgCount: 9
            controlTxMsgCount: 6
            rxMsgCount: 3
            controlRxByteCount: 1
            dataRxByteCount: 7
            dataRxMsgCount: 1
            rxByteCount: 6
            controlRxMsgCount: 1
            loginTxMsgCount: 8
            controlTxByteCount: 1
            dataTxByteCount: 4
            txByteCount: 6
            dataTxMsgCount: 5
            discardedRxMsgCount: 9
            discardedTxMsgCount: 9
            txMsgCount: 1
          loginTxMsgCount: 0
          remoteRouterName: remoteRouterName
          bridgeName: bridgeName
          tlsDefaultCipherSuiteList: true
          controlTxByteCount: 4
          rxConnectionFailureCategory: rxConnectionFailureCategory
          uptime: 7
          txByteCount: 9
          encrypted: true
          compressed: true
        collections:
          remoteSubscriptions:
            count: 1
          localSubscriptions:
            count: 0
          tlsTrustedCommonNames:
            count: 5
          remoteMsgVpns:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          remoteMsgVpnsUri: remoteMsgVpnsUri
          localSubscriptionsUri: localSubscriptionsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnBridgeTlsTrustedCommonName:
      type: object
      properties:
        bridgeName:
          type: string
          description: The name of the Bridge. Deprecated since 2.18. Common Name
            validation has been replaced by Server Certificate Name validation.
        bridgeVirtualRouter:
          type: string
          description: "The virtual router of the Bridge. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary\
            \ virtual router.\n\"backup\" - The Bridge is used for the backup virtual\
            \ router.\n\"auto\" - The Bridge is automatically assigned a virtual router\
            \ at creation, depending on the broker's active-standby role.\n</pre>\n\
            \ Deprecated since 2.18. Common Name validation has been replaced by Server\
            \ Certificate Name validation."
          enum:
          - primary
          - backup
          - auto
        msgVpnName:
          type: string
          description: The name of the Message VPN. Deprecated since 2.18. Common
            Name validation has been replaced by Server Certificate Name validation.
        tlsTrustedCommonName:
          type: string
          description: The expected trusted common name of the remote certificate.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
      example:
        bridgeVirtualRouter: primary
        msgVpnName: msgVpnName
        bridgeName: bridgeName
        tlsTrustedCommonName: tlsTrustedCommonName
    MsgVpnBridgeTlsTrustedCommonNameCollections:
      type: object
    MsgVpnBridgeTlsTrustedCommonNameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Trusted Common Name object.
      example:
        uri: uri
    MsgVpnBridgeTlsTrustedCommonNameResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameCollections'
        data:
          $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnBridgeTlsTrustedCommonNamesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonName'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnBridgesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridge'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - averageRxByteRate: 5
          remoteTxFlowId: 6
          txMsgRate: 0
          dataRxByteCount: 2
          remoteDeliverToOnePriority: p1
          remoteAuthenticationClientCertThumbprint: remoteAuthenticationClientCertThumbprint
          rxMsgRate: 7
          localInterface: localInterface
          dataTxMsgCount: 5
          discardedRxMsgCount: 6
          remoteConnectionRetryCount: 4
          msgVpnName: msgVpnName
          txMsgCount: 9
          remoteAddress: remoteAddress
          averageTxMsgRate: 9
          msgSpoolRxMsgCount: 6
          remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          controlRxByteCount: 3
          rxByteCount: 4
          outboundState: outboundState
          dataTxByteCount: 6
          bridgeVirtualRouter: primary
          inboundState: inboundState
          tlsCipherSuiteList: tlsCipherSuiteList
          lastTxMsgId: 3
          remoteAuthenticationScheme: basic
          rxByteRate: 1
          loginRxMsgCount: 7
          boundToQueue: true
          clientName: clientName
          controlRxMsgCount: 2
          enabled: true
          txByteRate: 0
          inboundFailureReason: inboundFailureReason
          remoteMsgVpnName: remoteMsgVpnName
          averageTxByteRate: 7
          rate:
            averageRxByteRate: 0
            txMsgRate: 5
            averageTxByteRate: 8
            averageRxMsgRate: 4
            rxByteRate: 3
            rxMsgRate: 3
            averageTxMsgRate: 7
            txByteRate: 7
          discardedTxMsgCount: 3
          ttlExceededEventRaised: true
          remoteConnectionRetryDelay: 0
          establisher: establisher
          controlTxMsgCount: 7
          rxMsgCount: 4
          maxTtl: 7
          remoteAuthenticationClientCertConfigTime: 3
          averageRxMsgRate: 2
          dataRxMsgCount: 6
          localQueueName: localQueueName
          counter:
            loginRxMsgCount: 6
            msgSpoolRxMsgCount: 9
            controlTxMsgCount: 6
            rxMsgCount: 3
            controlRxByteCount: 1
            dataRxByteCount: 7
            dataRxMsgCount: 1
            rxByteCount: 6
            controlRxMsgCount: 1
            loginTxMsgCount: 8
            controlTxByteCount: 1
            dataTxByteCount: 4
            txByteCount: 6
            dataTxMsgCount: 5
            discardedRxMsgCount: 9
            discardedTxMsgCount: 9
            txMsgCount: 1
          loginTxMsgCount: 0
          remoteRouterName: remoteRouterName
          bridgeName: bridgeName
          tlsDefaultCipherSuiteList: true
          controlTxByteCount: 4
          rxConnectionFailureCategory: rxConnectionFailureCategory
          uptime: 7
          txByteCount: 9
          encrypted: true
          compressed: true
        - averageRxByteRate: 5
          remoteTxFlowId: 6
          txMsgRate: 0
          dataRxByteCount: 2
          remoteDeliverToOnePriority: p1
          remoteAuthenticationClientCertThumbprint: remoteAuthenticationClientCertThumbprint
          rxMsgRate: 7
          localInterface: localInterface
          dataTxMsgCount: 5
          discardedRxMsgCount: 6
          remoteConnectionRetryCount: 4
          msgVpnName: msgVpnName
          txMsgCount: 9
          remoteAddress: remoteAddress
          averageTxMsgRate: 9
          msgSpoolRxMsgCount: 6
          remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          controlRxByteCount: 3
          rxByteCount: 4
          outboundState: outboundState
          dataTxByteCount: 6
          bridgeVirtualRouter: primary
          inboundState: inboundState
          tlsCipherSuiteList: tlsCipherSuiteList
          lastTxMsgId: 3
          remoteAuthenticationScheme: basic
          rxByteRate: 1
          loginRxMsgCount: 7
          boundToQueue: true
          clientName: clientName
          controlRxMsgCount: 2
          enabled: true
          txByteRate: 0
          inboundFailureReason: inboundFailureReason
          remoteMsgVpnName: remoteMsgVpnName
          averageTxByteRate: 7
          rate:
            averageRxByteRate: 0
            txMsgRate: 5
            averageTxByteRate: 8
            averageRxMsgRate: 4
            rxByteRate: 3
            rxMsgRate: 3
            averageTxMsgRate: 7
            txByteRate: 7
          discardedTxMsgCount: 3
          ttlExceededEventRaised: true
          remoteConnectionRetryDelay: 0
          establisher: establisher
          controlTxMsgCount: 7
          rxMsgCount: 4
          maxTtl: 7
          remoteAuthenticationClientCertConfigTime: 3
          averageRxMsgRate: 2
          dataRxMsgCount: 6
          localQueueName: localQueueName
          counter:
            loginRxMsgCount: 6
            msgSpoolRxMsgCount: 9
            controlTxMsgCount: 6
            rxMsgCount: 3
            controlRxByteCount: 1
            dataRxByteCount: 7
            dataRxMsgCount: 1
            rxByteCount: 6
            controlRxMsgCount: 1
            loginTxMsgCount: 8
            controlTxByteCount: 1
            dataTxByteCount: 4
            txByteCount: 6
            dataTxMsgCount: 5
            discardedRxMsgCount: 9
            discardedTxMsgCount: 9
            txMsgCount: 1
          loginTxMsgCount: 0
          remoteRouterName: remoteRouterName
          bridgeName: bridgeName
          tlsDefaultCipherSuiteList: true
          controlTxByteCount: 4
          rxConnectionFailureCategory: rxConnectionFailureCategory
          uptime: 7
          txByteCount: 9
          encrypted: true
          compressed: true
        collections:
        - remoteSubscriptions:
            count: 1
          localSubscriptions:
            count: 0
          tlsTrustedCommonNames:
            count: 5
          remoteMsgVpns:
            count: 6
        - remoteSubscriptions:
            count: 1
          localSubscriptions:
            count: 0
          tlsTrustedCommonNames:
            count: 5
          remoteMsgVpns:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - remoteMsgVpnsUri: remoteMsgVpnsUri
          localSubscriptionsUri: localSubscriptionsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - remoteMsgVpnsUri: remoteMsgVpnsUri
          localSubscriptionsUri: localSubscriptionsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnCertMatchingRule:
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether a certificate matching rule is enabled.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        ruleName:
          type: string
          description: The name of the rule.
      example:
        ruleName: ruleName
        msgVpnName: msgVpnName
        enabled: true
    MsgVpnCertMatchingRuleAttributeFilter:
      type: object
      properties:
        attributeName:
          type: string
          description: Client Username Attribute to be tested.
        attributeValue:
          type: string
          description: Expected attribute value.
        filterName:
          type: string
          description: The name of the filter.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        ruleName:
          type: string
          description: The name of the rule.
      example:
        attributeValue: attributeValue
        filterName: filterName
        ruleName: ruleName
        attributeName: attributeName
        msgVpnName: msgVpnName
    MsgVpnCertMatchingRuleAttributeFilterCollections:
      type: object
    MsgVpnCertMatchingRuleAttributeFilterLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Certificate Matching Rule Attribute Filter
            object.
      example:
        uri: uri
    MsgVpnCertMatchingRuleAttributeFilterResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnCertMatchingRuleAttributeFilterCollections'
        data:
          $ref: '#/components/schemas/MsgVpnCertMatchingRuleAttributeFilter'
        links:
          $ref: '#/components/schemas/MsgVpnCertMatchingRuleAttributeFilterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          attributeValue: attributeValue
          filterName: filterName
          ruleName: ruleName
          attributeName: attributeName
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnCertMatchingRuleAttributeFiltersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnCertMatchingRuleAttributeFilterCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnCertMatchingRuleAttributeFilter'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnCertMatchingRuleAttributeFilterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - attributeValue: attributeValue
          filterName: filterName
          ruleName: ruleName
          attributeName: attributeName
          msgVpnName: msgVpnName
        - attributeValue: attributeValue
          filterName: filterName
          ruleName: ruleName
          attributeName: attributeName
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnCertMatchingRuleCollections:
      type: object
      properties:
        attributeFilters:
          $ref: '#/components/schemas/MsgVpnCertMatchingRuleCollectionsAttributeFilters'
        conditions:
          $ref: '#/components/schemas/MsgVpnCertMatchingRuleCollectionsConditions'
      example:
        attributeFilters:
          count: 0
        conditions:
          count: 6
    MsgVpnCertMatchingRuleCollectionsAttributeFilters:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the attributeFilters collection.
            Available since 2.28.
          format: int64
      example:
        count: 0
    MsgVpnCertMatchingRuleCollectionsConditions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the conditions collection.
          format: int64
      example:
        count: 6
    MsgVpnCertMatchingRuleCondition:
      type: object
      properties:
        attribute:
          type: string
          description: "Client Username Attribute to be compared with certificate\
            \ content. Either an attribute or an expression must be provided on creation,\
            \ but not both."
        comparisonMode:
          type: string
          description: |
            The comparison mode to use. The allowed values and their meaning are:

            <pre>
            "matches-attribute" - Certificate field matches an attribute value exactly.
            "matches-expression" - Certificate field matches a glob expression.
            </pre>
        expression:
          type: string
          description: "Glob expression to be matched with certificate content. Either\
            \ an expression or an attribute must be provided on creation, but not\
            \ both."
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        ruleName:
          type: string
          description: The name of the rule.
        source:
          type: string
          description: |
            Certificate field to be compared with the Attribute. The allowed values and their meaning are:

            <pre>
            "certificate-thumbprint" - The attribute is computed as the SHA-1 hash over the entire DER-encoded contents of the client certificate.
            "common-name" - The attribute is extracted from the certificate's first instance of the Common Name attribute in the Subject DN.
            "common-name-last" - The attribute is extracted from the certificate's last instance of the Common Name attribute in the Subject DN.
            "subject-alternate-name-msupn" - The attribute is extracted from the certificate's Other Name type of the Subject Alternative Name and must have the msUPN signature.
            "uid" - The attribute is extracted from the certificate's first instance of the User Identifier attribute in the Subject DN.
            "uid-last" - The attribute is extracted from the certificate's last instance of the User Identifier attribute in the Subject DN.
            "org-unit" - The attribute is extracted from the certificate's first instance of the Org Unit attribute in the Subject DN.
            "org-unit-last" - The attribute is extracted from the certificate's last instance of the Org Unit attribute in the Subject DN.
            "issuer" - The attribute is extracted from the certificate's Issuer DN.
            "subject" - The attribute is extracted from the certificate's Subject DN.
            "serial-number" - The attribute is extracted from the certificate's Serial Number.
            "dns-name" - The attribute is extracted from the certificate's Subject Alt Name DNSName.
            "ip-address" - The attribute is extracted from the certificate's Subject Alt Name IPAddress.
            </pre>
          enum:
          - certificate-thumbprint
          - common-name
          - common-name-last
          - subject-alternate-name-msupn
          - uid
          - uid-last
          - org-unit
          - org-unit-last
          - issuer
          - subject
          - serial-number
          - dns-name
          - ip-address
      example:
        expression: expression
        comparisonMode: comparisonMode
        ruleName: ruleName
        attribute: attribute
        msgVpnName: msgVpnName
        source: certificate-thumbprint
    MsgVpnCertMatchingRuleConditionCollections:
      type: object
    MsgVpnCertMatchingRuleConditionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Certificate Matching Rule Condition object.
      example:
        uri: uri
    MsgVpnCertMatchingRuleConditionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnCertMatchingRuleConditionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnCertMatchingRuleCondition'
        links:
          $ref: '#/components/schemas/MsgVpnCertMatchingRuleConditionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          expression: expression
          comparisonMode: comparisonMode
          ruleName: ruleName
          attribute: attribute
          msgVpnName: msgVpnName
          source: certificate-thumbprint
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnCertMatchingRuleConditionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnCertMatchingRuleConditionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnCertMatchingRuleCondition'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnCertMatchingRuleConditionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - expression: expression
          comparisonMode: comparisonMode
          ruleName: ruleName
          attribute: attribute
          msgVpnName: msgVpnName
          source: certificate-thumbprint
        - expression: expression
          comparisonMode: comparisonMode
          ruleName: ruleName
          attribute: attribute
          msgVpnName: msgVpnName
          source: certificate-thumbprint
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnCertMatchingRuleLinks:
      type: object
      properties:
        attributeFiltersUri:
          type: string
          description: The URI of this Certificate Matching Rule's collection of Certificate
            Matching Rule Attribute Filter objects. Available since 2.28.
        conditionsUri:
          type: string
          description: The URI of this Certificate Matching Rule's collection of Certificate
            Matching Rule Condition objects.
        uri:
          type: string
          description: The URI of this Certificate Matching Rule object.
      example:
        attributeFiltersUri: attributeFiltersUri
        conditionsUri: conditionsUri
        uri: uri
    MsgVpnCertMatchingRuleResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnCertMatchingRuleCollections'
        data:
          $ref: '#/components/schemas/MsgVpnCertMatchingRule'
        links:
          $ref: '#/components/schemas/MsgVpnCertMatchingRuleLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          ruleName: ruleName
          msgVpnName: msgVpnName
          enabled: true
        collections:
          attributeFilters:
            count: 0
          conditions:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          attributeFiltersUri: attributeFiltersUri
          conditionsUri: conditionsUri
          uri: uri
    MsgVpnCertMatchingRulesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnCertMatchingRuleCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnCertMatchingRule'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnCertMatchingRuleLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - ruleName: ruleName
          msgVpnName: msgVpnName
          enabled: true
        - ruleName: ruleName
          msgVpnName: msgVpnName
          enabled: true
        collections:
        - attributeFilters:
            count: 0
          conditions:
            count: 6
        - attributeFilters:
            count: 0
          conditions:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - attributeFiltersUri: attributeFiltersUri
          conditionsUri: conditionsUri
          uri: uri
        - attributeFiltersUri: attributeFiltersUri
          conditionsUri: conditionsUri
          uri: uri
    MsgVpnClient:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the access control list (ACL) profile of the Client.
        aliasedFromMsgVpnName:
          type: string
          description: The name of the original MsgVpn which the client signaled in.
            Available since 2.14.
        alreadyBoundBindFailureCount:
          type: integer
          description: The number of Client bind failures due to endpoint being already
            bound.
          format: int64
        authorizationGroupName:
          type: string
          description: The name of the authorization group of the Client.
        averageRxByteRate:
          type: integer
          description: "The one minute average of the message rate received from the\
            \ Client, in bytes per second (B/sec)."
          format: int64
        averageRxMsgRate:
          type: integer
          description: "The one minute average of the message rate received from the\
            \ Client, in messages per second (msg/sec)."
          format: int64
        averageTxByteRate:
          type: integer
          description: "The one minute average of the message rate transmitted to\
            \ the Client, in bytes per second (B/sec)."
          format: int64
        averageTxMsgRate:
          type: integer
          description: "The one minute average of the message rate transmitted to\
            \ the Client, in messages per second (msg/sec)."
          format: int64
        bindRequestCount:
          type: integer
          description: The number of Client requests to bind to an endpoint.
          format: int64
        bindSuccessCount:
          type: integer
          description: The number of successful Client requests to bind to an endpoint.
          format: int64
        clientAddress:
          type: string
          description: The IP address and port of the Client.
        clientId:
          type: integer
          description: The identifier (ID) of the Client.
          format: int32
        clientName:
          type: string
          description: The name of the Client.
        clientProfileName:
          type: string
          description: The name of the client profile of the Client.
        clientUsername:
          type: string
          description: The client username of the Client used for authorization.
        controlRxByteCount:
          type: integer
          description: "The amount of client control messages received from the Client,\
            \ in bytes (B)."
          format: int64
        controlRxMsgCount:
          type: integer
          description: The number of client control messages received from the Client.
          format: int64
        controlTxByteCount:
          type: integer
          description: "The amount of client control messages transmitted to the Client,\
            \ in bytes (B)."
          format: int64
        controlTxMsgCount:
          type: integer
          description: The number of client control messages transmitted to the Client.
          format: int64
        cutThroughDeniedBindFailureCount:
          type: integer
          description: The number of Client bind failures due to being denied cut-through
            forwarding.
          format: int64
        dataRxByteCount:
          type: integer
          description: "The amount of client data messages received from the Client,\
            \ in bytes (B)."
          format: int64
        dataRxMsgCount:
          type: integer
          description: The number of client data messages received from the Client.
          format: int64
        dataTxByteCount:
          type: integer
          description: "The amount of client data messages transmitted to the Client,\
            \ in bytes (B)."
          format: int64
        dataTxMsgCount:
          type: integer
          description: The number of client data messages transmitted to the Client.
          format: int64
        description:
          type: string
          description: The description text of the Client.
        disabledBindFailureCount:
          type: integer
          description: The number of Client bind failures due to endpoint being disabled.
          format: int64
        dtoLocalPriority:
          type: integer
          description: The priority of the Client's subscriptions for receiving deliver-to-one
            (DTO) messages published on the local broker.
          format: int32
        dtoNetworkPriority:
          type: integer
          description: The priority of the Client's subscriptions for receiving deliver-to-one
            (DTO) messages published on a remote broker.
          format: int32
        eliding:
          type: boolean
          description: Indicates whether message eliding is enabled for the Client.
        elidingTopicCount:
          type: integer
          description: The number of topics requiring message eliding for the Client.
          format: int32
        elidingTopicPeakCount:
          type: integer
          description: The peak number of topics requiring message eliding for the
            Client.
          format: int32
        guaranteedDeniedBindFailureCount:
          type: integer
          description: The number of Client bind failures due to being denied guaranteed
            messaging.
          format: int64
        invalidSelectorBindFailureCount:
          type: integer
          description: The number of Client bind failures due to an invalid selector.
          format: int64
        keepalive:
          type: boolean
          description: Indicates whether keepalive messages from the Client are received
            by the broker. Applicable for SMF and MQTT clients only. Available since
            2.19.
        keepaliveEffectiveTimeout:
          type: integer
          description: "The maximum period of time the broker will accept inactivity\
            \ from the Client before disconnecting, in seconds. Available since 2.19."
          format: int32
        largeMsgEventRaised:
          type: boolean
          description: Indicates whether the large-message event has been raised for
            the Client.
        loginRxMsgCount:
          type: integer
          description: The number of login request messages received from the Client.
          format: int64
        loginTxMsgCount:
          type: integer
          description: The number of login response messages transmitted to the Client.
          format: int64
        maxBindCountExceededBindFailureCount:
          type: integer
          description: The number of Client bind failures due to the endpoint maximum
            bind count being exceeded.
          format: int64
        maxElidingTopicCountEventRaised:
          type: boolean
          description: Indicates whether the max-eliding-topic-count event has been
            raised for the Client.
        mqttConnackErrorTxCount:
          type: integer
          description: The number of MQTT connect acknowledgment (CONNACK) refused
            response packets transmitted to the Client.
          format: int64
        mqttConnackTxCount:
          type: integer
          description: The number of MQTT connect acknowledgment (CONNACK) accepted
            response packets transmitted to the Client.
          format: int64
        mqttConnectRxCount:
          type: integer
          description: The number of MQTT connect (CONNECT) request packets received
            from the Client.
          format: int64
        mqttDisconnectRxCount:
          type: integer
          description: The number of MQTT disconnect (DISCONNECT) request packets
            received from the Client.
          format: int64
        mqttPingreqRxCount:
          type: integer
          description: The number of MQTT ping request (PINGREQ) packets received
            from the Client.
          format: int64
        mqttPingrespTxCount:
          type: integer
          description: The number of MQTT ping response (PINGRESP) packets transmitted
            to the Client.
          format: int64
        mqttPubackRxCount:
          type: integer
          description: The number of MQTT publish acknowledgement (PUBACK) response
            packets received from the Client.
          format: int64
        mqttPubackTxCount:
          type: integer
          description: The number of MQTT publish acknowledgement (PUBACK) response
            packets transmitted to the Client.
          format: int64
        mqttPubcompTxCount:
          type: integer
          description: The number of MQTT publish complete (PUBCOMP) packets transmitted
            to the Client in response to a PUBREL packet. These packets are the fourth
            and final packet of a QoS 2 protocol exchange.
          format: int64
        mqttPublishQos0RxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 0 message delivery.
          format: int64
        mqttPublishQos0TxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 0 message delivery.
          format: int64
        mqttPublishQos1RxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 1 message delivery.
          format: int64
        mqttPublishQos1TxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 1 message delivery.
          format: int64
        mqttPublishQos2RxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 2 message delivery.
          format: int64
        mqttPubrecTxCount:
          type: integer
          description: The number of MQTT publish received (PUBREC) packets transmitted
            to the Client in response to a PUBLISH packet with QoS 2. These packets
            are the second packet of a QoS 2 protocol exchange.
          format: int64
        mqttPubrelRxCount:
          type: integer
          description: The number of MQTT publish release (PUBREL) packets received
            from the Client in response to a PUBREC packet. These packets are the
            third packet of a QoS 2 protocol exchange.
          format: int64
        mqttSubackErrorTxCount:
          type: integer
          description: The number of MQTT subscribe acknowledgement (SUBACK) failure
            response packets transmitted to the Client.
          format: int64
        mqttSubackTxCount:
          type: integer
          description: The number of MQTT subscribe acknowledgement (SUBACK) response
            packets transmitted to the Client.
          format: int64
        mqttSubscribeRxCount:
          type: integer
          description: The number of MQTT subscribe (SUBSCRIBE) request packets received
            from the Client to create one or more topic subscriptions.
          format: int64
        mqttUnsubackTxCount:
          type: integer
          description: The number of MQTT unsubscribe acknowledgement (UNSUBACK) response
            packets transmitted to the Client.
          format: int64
        mqttUnsubscribeRxCount:
          type: integer
          description: The number of MQTT unsubscribe (UNSUBSCRIBE) request packets
            received from the Client to remove one or more topic subscriptions.
          format: int64
        msgSpoolCongestionRxDiscardedMsgCount:
          type: integer
          description: The number of messages from the Client discarded due to message
            spool congestion primarily caused by message promotion.
          format: int64
        msgSpoolRxDiscardedMsgCount:
          type: integer
          description: The number of messages from the Client discarded by the message
            spool.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        noLocalDelivery:
          type: boolean
          description: Indicates whether not to deliver messages to the Client if
            it published them.
        noSubscriptionMatchRxDiscardedMsgCount:
          type: integer
          description: The number of messages from the Client discarded due to no
            matching subscription found.
          format: int64
        originalClientUsername:
          type: string
          description: The original value of the client username used for Client authentication.
        otherBindFailureCount:
          type: integer
          description: The number of Client bind failures due to other reasons.
          format: int64
        platform:
          type: string
          description: "The platform the Client application software was built for,\
            \ which may include the OS and API type."
        publishTopicAclRxDiscardedMsgCount:
          type: integer
          description: The number of messages from the Client discarded due to the
            publish topic being denied by the Access Control List (ACL) profile.
          format: int64
        restHttpRequestRxByteCount:
          type: integer
          description: "The amount of HTTP request messages received from the Client,\
            \ in bytes (B)."
          format: int64
        restHttpRequestRxMsgCount:
          type: integer
          description: The number of HTTP request messages received from the Client.
          format: int64
        restHttpRequestTxByteCount:
          type: integer
          description: "The amount of HTTP request messages transmitted to the Client,\
            \ in bytes (B)."
          format: int64
        restHttpRequestTxMsgCount:
          type: integer
          description: The number of HTTP request messages transmitted to the Client.
          format: int64
        restHttpResponseErrorRxMsgCount:
          type: integer
          description: The number of HTTP client/server error response messages received
            from the Client.
          format: int64
        restHttpResponseErrorTxMsgCount:
          type: integer
          description: The number of HTTP client/server error response messages transmitted
            to the Client.
          format: int64
        restHttpResponseRxByteCount:
          type: integer
          description: "The amount of HTTP response messages received from the Client,\
            \ in bytes (B)."
          format: int64
        restHttpResponseRxMsgCount:
          type: integer
          description: The number of HTTP response messages received from the Client.
          format: int64
        restHttpResponseSuccessRxMsgCount:
          type: integer
          description: The number of HTTP successful response messages received from
            the Client.
          format: int64
        restHttpResponseSuccessTxMsgCount:
          type: integer
          description: The number of HTTP successful response messages transmitted
            to the Client.
          format: int64
        restHttpResponseTimeoutRxMsgCount:
          type: integer
          description: The number of HTTP wait for reply timeout response messages
            received from the Client.
          format: int64
        restHttpResponseTimeoutTxMsgCount:
          type: integer
          description: The number of HTTP wait for reply timeout response messages
            transmitted to the Client.
          format: int64
        restHttpResponseTxByteCount:
          type: integer
          description: "The amount of HTTP response messages transmitted to the Client,\
            \ in bytes (B)."
          format: int64
        restHttpResponseTxMsgCount:
          type: integer
          description: The number of HTTP response messages transmitted to the Client.
          format: int64
        rxByteCount:
          type: integer
          description: "The amount of messages received from the Client, in bytes\
            \ (B)."
          format: int64
        rxByteRate:
          type: integer
          description: "The current message rate received from the Client, in bytes\
            \ per second (B/sec)."
          format: int64
        rxDiscardedMsgCount:
          type: integer
          description: The number of messages discarded during reception from the
            Client.
          format: int64
        rxMsgCount:
          type: integer
          description: The number of messages received from the Client.
          format: int64
        rxMsgRate:
          type: integer
          description: "The current message rate received from the Client, in messages\
            \ per second (msg/sec)."
          format: int64
        scheduledDisconnectTime:
          type: integer
          description: The timestamp of when the Client will be disconnected by the
            broker. This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Available since 2.13.
          format: int32
        slowSubscriber:
          type: boolean
          description: Indicates whether the Client is a slow subscriber and blocks
            for a few seconds when receiving messages.
        softwareDate:
          type: string
          description: The date the Client application software was built.
        softwareVersion:
          type: string
          description: The version of the Client application software.
        tlsCipherDescription:
          type: string
          description: "The description of the TLS cipher used by the Client, which\
            \ may include cipher name, key exchange and encryption algorithms."
        tlsDowngradedToPlainText:
          type: boolean
          description: Indicates whether the Client TLS connection was downgraded
            to plain-text to increase performance.
        tlsVersion:
          type: string
          description: The version of TLS used by the Client.
        topicParseErrorRxDiscardedMsgCount:
          type: integer
          description: The number of messages from the Client discarded due to an
            error while parsing the publish topic.
          format: int64
        txByteCount:
          type: integer
          description: "The amount of messages transmitted to the Client, in bytes\
            \ (B)."
          format: int64
        txByteRate:
          type: integer
          description: "The current message rate transmitted to the Client, in bytes\
            \ per second (B/sec)."
          format: int64
        txDiscardedMsgCount:
          type: integer
          description: The number of messages discarded during transmission to the
            Client.
          format: int64
        txMsgCount:
          type: integer
          description: The number of messages transmitted to the Client.
          format: int64
        txMsgRate:
          type: integer
          description: "The current message rate transmitted to the Client, in messages\
            \ per second (msg/sec)."
          format: int64
        uptime:
          type: integer
          description: The amount of time in seconds since the Client connected.
          format: int32
        user:
          type: string
          description: "The user description for the Client, which may include computer\
            \ name and process ID."
        virtualRouter:
          type: string
          description: |
            The virtual router used by the Client. The allowed values and their meaning are:

            <pre>
            "primary" - The Client is using the primary virtual router.
            "backup" - The Client is using the backup virtual router.
            "internal" - The Client is using the internal virtual router.
            "unknown" - The Client virtual router is unknown.
            </pre>
        webInactiveTimeout:
          type: integer
          description: "The maximum web transport timeout for the Client being inactive,\
            \ in seconds."
          format: int32
        webMaxPayload:
          type: integer
          description: "The maximum web transport message payload size which excludes\
            \ the size of the message header, in bytes."
          format: int64
        webParseErrorRxDiscardedMsgCount:
          type: integer
          description: The number of messages from the Client discarded due to an
            error while parsing the web message.
          format: int64
        webRemainingTimeout:
          type: integer
          description: "The remaining web transport timeout for the Client being inactive,\
            \ in seconds."
          format: int32
        webRxByteCount:
          type: integer
          description: "The amount of web transport messages received from the Client,\
            \ in bytes (B)."
          format: int64
        webRxEncoding:
          type: string
          description: |
            The type of encoding used during reception from the Client. The allowed values and their meaning are:

            <pre>
            "binary" - The Client is using binary encoding.
            "base64" - The Client is using base64 encoding.
            "illegal" - The Client is using an illegal encoding type.
            </pre>
        webRxMsgCount:
          type: integer
          description: The number of web transport messages received from the Client.
          format: int64
        webRxProtocol:
          type: string
          description: |
            The type of web transport used during reception from the Client. The allowed values and their meaning are:

            <pre>
            "ws-binary" - The Client is using WebSocket binary transport.
            "http-binary-streaming" - The Client is using HTTP binary streaming transport.
            "http-binary" - The Client is using HTTP binary transport.
            "http-base64" - The Client is using HTTP base64 transport.
            </pre>
        webRxRequestCount:
          type: integer
          description: The number of web transport requests received from the Client
            (HTTP only). Not available for WebSockets.
          format: int64
        webRxResponseCount:
          type: integer
          description: The number of web transport responses transmitted to the Client
            on the receive connection (HTTP only). Not available for WebSockets.
          format: int64
        webRxTcpState:
          type: string
          description: "The TCP state of the receive connection from the Client. When\
            \ fully operational, should be: established. See RFC 793 for further details.\
            \ The allowed values and their meaning are:\n\n<pre>\n\"closed\" - No\
            \ connection state at all.\n\"listen\" - Waiting for a connection request\
            \ from any remote TCP and port.\n\"syn-sent\" - Waiting for a matching\
            \ connection request after having sent a connection request.\n\"syn-received\"\
            \ - Waiting for a confirming connection request acknowledgment after having\
            \ both received and sent a connection request.\n\"established\" - An open\
            \ connection, data received can be delivered to the user.\n\"close-wait\"\
            \ - Waiting for a connection termination request from the local user.\n\
            \"fin-wait-1\" - Waiting for a connection termination request from the\
            \ remote TCP, or an acknowledgment of the connection termination request\
            \ previously sent.\n\"closing\" - Waiting for a connection termination\
            \ request acknowledgment from the remote TCP.\n\"last-ack\" - Waiting\
            \ for an acknowledgment of the connection termination request previously\
            \ sent to the remote TCP.\n\"fin-wait-2\" - Waiting for a connection termination\
            \ request from the remote TCP.\n\"time-wait\" - Waiting for enough time\
            \ to pass to be sure the remote TCP received the acknowledgment of its\
            \ connection termination request.\n</pre>\n"
        webRxTlsCipherDescription:
          type: string
          description: "The description of the TLS cipher received from the Client,\
            \ which may include cipher name, key exchange and encryption algorithms."
        webRxTlsVersion:
          type: string
          description: The version of TLS used during reception from the Client.
        webSessionId:
          type: string
          description: The identifier (ID) of the web transport session for the Client.
        webTxByteCount:
          type: integer
          description: "The amount of web transport messages transmitted to the Client,\
            \ in bytes (B)."
          format: int64
        webTxEncoding:
          type: string
          description: |
            The type of encoding used during transmission to the Client. The allowed values and their meaning are:

            <pre>
            "binary" - The Client is using binary encoding.
            "base64" - The Client is using base64 encoding.
            "illegal" - The Client is using an illegal encoding type.
            </pre>
        webTxMsgCount:
          type: integer
          description: The number of web transport messages transmitted to the Client.
          format: int64
        webTxProtocol:
          type: string
          description: |
            The type of web transport used during transmission to the Client. The allowed values and their meaning are:

            <pre>
            "ws-binary" - The Client is using WebSocket binary transport.
            "http-binary-streaming" - The Client is using HTTP binary streaming transport.
            "http-binary" - The Client is using HTTP binary transport.
            "http-base64" - The Client is using HTTP base64 transport.
            </pre>
        webTxRequestCount:
          type: integer
          description: The number of web transport requests transmitted to the Client
            (HTTP only). Not available for WebSockets.
          format: int64
        webTxResponseCount:
          type: integer
          description: The number of web transport responses received from the Client
            on the transmit connection (HTTP only). Not available for WebSockets.
          format: int64
        webTxTcpState:
          type: string
          description: "The TCP state of the transmit connection to the Client. When\
            \ fully operational, should be: established. See RFC 793 for further details.\
            \ The allowed values and their meaning are:\n\n<pre>\n\"closed\" - No\
            \ connection state at all.\n\"listen\" - Waiting for a connection request\
            \ from any remote TCP and port.\n\"syn-sent\" - Waiting for a matching\
            \ connection request after having sent a connection request.\n\"syn-received\"\
            \ - Waiting for a confirming connection request acknowledgment after having\
            \ both received and sent a connection request.\n\"established\" - An open\
            \ connection, data received can be delivered to the user.\n\"close-wait\"\
            \ - Waiting for a connection termination request from the local user.\n\
            \"fin-wait-1\" - Waiting for a connection termination request from the\
            \ remote TCP, or an acknowledgment of the connection termination request\
            \ previously sent.\n\"closing\" - Waiting for a connection termination\
            \ request acknowledgment from the remote TCP.\n\"last-ack\" - Waiting\
            \ for an acknowledgment of the connection termination request previously\
            \ sent to the remote TCP.\n\"fin-wait-2\" - Waiting for a connection termination\
            \ request from the remote TCP.\n\"time-wait\" - Waiting for enough time\
            \ to pass to be sure the remote TCP received the acknowledgment of its\
            \ connection termination request.\n</pre>\n"
        webTxTlsCipherDescription:
          type: string
          description: "The description of the TLS cipher transmitted to the Client,\
            \ which may include cipher name, key exchange and encryption algorithms."
        webTxTlsVersion:
          type: string
          description: The version of TLS used during transmission to the Client.
      example:
        averageRxByteRate: 7
        restHttpResponseTxByteCount: 6
        txMsgRate: 3
        webTxTlsVersion: webTxTlsVersion
        clientAddress: clientAddress
        slowSubscriber: true
        publishTopicAclRxDiscardedMsgCount: 9
        bindSuccessCount: 7
        mqttDisconnectRxCount: 7
        webRxMsgCount: 2
        mqttPingrespTxCount: 7
        restHttpResponseTimeoutRxMsgCount: 1
        mqttConnackTxCount: 3
        tlsVersion: tlsVersion
        webTxByteCount: 4
        restHttpRequestTxMsgCount: 4
        webTxProtocol: webTxProtocol
        largeMsgEventRaised: true
        dataTxByteCount: 9
        elidingTopicCount: 6
        msgSpoolCongestionRxDiscardedMsgCount: 4
        rxByteRate: 9
        softwareVersion: softwareVersion
        alreadyBoundBindFailureCount: 2
        loginRxMsgCount: 6
        authorizationGroupName: authorizationGroupName
        clientName: clientName
        webTxRequestCount: 0
        controlRxMsgCount: 1
        noLocalDelivery: true
        aclProfileName: aclProfileName
        dtoNetworkPriority: 9
        restHttpResponseTimeoutTxMsgCount: 8
        txByteRate: 5
        webRxByteCount: 3
        restHttpRequestRxMsgCount: 7
        elidingTopicPeakCount: 3
        averageTxByteRate: 3
        mqttPublishQos2RxCount: 7
        noSubscriptionMatchRxDiscardedMsgCount: 9
        maxBindCountExceededBindFailureCount: 5
        webRxResponseCount: 8
        originalClientUsername: originalClientUsername
        rxDiscardedMsgCount: 1
        webParseErrorRxDiscardedMsgCount: 7
        controlTxMsgCount: 7
        msgSpoolRxDiscardedMsgCount: 7
        clientId: 1
        averageRxMsgRate: 9
        dataRxMsgCount: 5
        loginTxMsgCount: 6
        virtualRouter: virtualRouter
        webInactiveTimeout: 9
        txByteCount: 5
        clientUsername: clientUsername
        mqttPubrecTxCount: 5
        webRxProtocol: webRxProtocol
        restHttpRequestTxByteCount: 5
        webRxRequestCount: 3
        mqttUnsubscribeRxCount: 1
        aliasedFromMsgVpnName: aliasedFromMsgVpnName
        keepalive: true
        dataRxByteCount: 4
        cutThroughDeniedBindFailureCount: 1
        keepaliveEffectiveTimeout: 2
        clientProfileName: clientProfileName
        topicParseErrorRxDiscardedMsgCount: 0
        rxMsgRate: 9
        maxElidingTopicCountEventRaised: true
        webMaxPayload: 5
        webTxResponseCount: 7
        dtoLocalPriority: 8
        dataTxMsgCount: 9
        mqttConnectRxCount: 3
        mqttPublishQos0TxCount: 7
        mqttPublishQos1TxCount: 3
        msgVpnName: msgVpnName
        txMsgCount: 7
        averageTxMsgRate: 2
        bindRequestCount: 4
        webTxMsgCount: 0
        mqttSubscribeRxCount: 6
        mqttPingreqRxCount: 0
        controlRxByteCount: 1
        restHttpResponseErrorRxMsgCount: 6
        rxByteCount: 8
        softwareDate: softwareDate
        restHttpRequestRxByteCount: 0
        disabledBindFailureCount: 6
        webRemainingTimeout: 0
        guaranteedDeniedBindFailureCount: 6
        eliding: true
        webRxTlsVersion: webRxTlsVersion
        tlsCipherDescription: tlsCipherDescription
        webTxTlsCipherDescription: webTxTlsCipherDescription
        mqttPubackRxCount: 6
        otherBindFailureCount: 0
        txDiscardedMsgCount: 8
        webTxTcpState: webTxTcpState
        restHttpResponseSuccessRxMsgCount: 0
        webSessionId: webSessionId
        restHttpResponseRxMsgCount: 3
        description: description
        platform: platform
        scheduledDisconnectTime: 8
        mqttPublishQos1RxCount: 3
        mqttPublishQos0RxCount: 8
        webRxEncoding: webRxEncoding
        restHttpResponseErrorTxMsgCount: 8
        tlsDowngradedToPlainText: true
        restHttpResponseTxMsgCount: 4
        rxMsgCount: 3
        mqttPubrelRxCount: 3
        mqttSubackTxCount: 0
        restHttpResponseSuccessTxMsgCount: 2
        controlTxByteCount: 6
        uptime: 3
        invalidSelectorBindFailureCount: 1
        mqttConnackErrorTxCount: 6
        mqttSubackErrorTxCount: 4
        mqttPubackTxCount: 0
        mqttPubcompTxCount: 4
        restHttpResponseRxByteCount: 4
        webRxTlsCipherDescription: webRxTlsCipherDescription
        mqttUnsubackTxCount: 4
        webTxEncoding: webTxEncoding
        user: user
        webRxTcpState: webRxTcpState
    MsgVpnClientCollections:
      type: object
      properties:
        connections:
          $ref: '#/components/schemas/MsgVpnClientCollectionsConnections'
        rxFlows:
          $ref: '#/components/schemas/MsgVpnClientCollectionsRxFlows'
        subscriptions:
          $ref: '#/components/schemas/MsgVpnClientCollectionsSubscriptions'
        transactedSessions:
          $ref: '#/components/schemas/MsgVpnClientCollectionsTransactedSessions'
        txFlows:
          $ref: '#/components/schemas/MsgVpnClientCollectionsTxFlows'
      example:
        transactedSessions:
          count: 5
        subscriptions:
          count: 1
        txFlows:
          count: 5
        rxFlows:
          count: 6
        connections:
          count: 0
    MsgVpnClientCollectionsConnections:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the connections collection.
          format: int64
      example:
        count: 0
    MsgVpnClientCollectionsRxFlows:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the rxFlows collection.
          format: int64
      example:
        count: 6
    MsgVpnClientCollectionsSubscriptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the subscriptions collection.
          format: int64
      example:
        count: 1
    MsgVpnClientCollectionsTransactedSessions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the transactedSessions collection.
          format: int64
      example:
        count: 5
    MsgVpnClientCollectionsTxFlows:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the txFlows collection.
          format: int64
      example:
        count: 5
    MsgVpnClientConnection:
      type: object
      properties:
        clientAddress:
          type: string
          description: The IP address and TCP port on the Client side of the Client
            Connection.
        clientName:
          type: string
          description: The name of the Client.
        compression:
          type: boolean
          description: Indicates whether compression is enabled for the Client Connection.
        encryption:
          type: boolean
          description: Indicates whether encryption (TLS) is enabled for the Client
            Connection.
        fastRetransmitCount:
          type: integer
          description: The number of TCP fast retransmits due to duplicate acknowledgments
            (ACKs). See RFC 5681 for further details.
          format: int32
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        rxQueueByteCount:
          type: integer
          description: The number of bytes currently in the receive queue for the
            Client Connection.
          format: int32
        segmentReceivedOutOfOrderCount:
          type: integer
          description: The number of TCP segments received from the Client Connection
            out of order.
          format: int32
        smoothedRoundTripTime:
          type: integer
          description: "The TCP smoothed round-trip time (SRTT) for the Client Connection,\
            \ in nanoseconds. See RFC 2988 for further details."
          format: int64
        tcpState:
          type: string
          description: "The TCP state of the Client Connection. When fully operational,\
            \ should be: established. See RFC 793 for further details. The allowed\
            \ values and their meaning are:\n\n<pre>\n\"closed\" - No connection state\
            \ at all.\n\"listen\" - Waiting for a connection request from any remote\
            \ TCP and port.\n\"syn-sent\" - Waiting for a matching connection request\
            \ after having sent a connection request.\n\"syn-received\" - Waiting\
            \ for a confirming connection request acknowledgment after having both\
            \ received and sent a connection request.\n\"established\" - An open connection,\
            \ data received can be delivered to the user.\n\"close-wait\" - Waiting\
            \ for a connection termination request from the local user.\n\"fin-wait-1\"\
            \ - Waiting for a connection termination request from the remote TCP,\
            \ or an acknowledgment of the connection termination request previously\
            \ sent.\n\"closing\" - Waiting for a connection termination request acknowledgment\
            \ from the remote TCP.\n\"last-ack\" - Waiting for an acknowledgment of\
            \ the connection termination request previously sent to the remote TCP.\n\
            \"fin-wait-2\" - Waiting for a connection termination request from the\
            \ remote TCP.\n\"time-wait\" - Waiting for enough time to pass to be sure\
            \ the remote TCP received the acknowledgment of its connection termination\
            \ request.\n</pre>\n"
        timedRetransmitCount:
          type: integer
          description: The number of TCP segments retransmitted due to timeout awaiting
            an acknowledgement (ACK). See RFC 793 for further details.
          format: int32
        txQueueByteCount:
          type: integer
          description: The number of bytes currently in the transmit queue for the
            Client Connection.
          format: int32
        uptime:
          type: integer
          description: The amount of time in seconds since the Client Connection was
            established.
          format: int64
      example:
        txQueueByteCount: 2
        clientName: clientName
        timedRetransmitCount: 5
        tcpState: tcpState
        rxQueueByteCount: 6
        clientAddress: clientAddress
        uptime: 7
        encryption: true
        smoothedRoundTripTime: 5
        msgVpnName: msgVpnName
        compression: true
        fastRetransmitCount: 0
        segmentReceivedOutOfOrderCount: 1
    MsgVpnClientConnectionCollections:
      type: object
    MsgVpnClientConnectionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Connection object.
      example:
        uri: uri
    MsgVpnClientConnectionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnClientConnectionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnClientConnection'
        links:
          $ref: '#/components/schemas/MsgVpnClientConnectionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          txQueueByteCount: 2
          clientName: clientName
          timedRetransmitCount: 5
          tcpState: tcpState
          rxQueueByteCount: 6
          clientAddress: clientAddress
          uptime: 7
          encryption: true
          smoothedRoundTripTime: 5
          msgVpnName: msgVpnName
          compression: true
          fastRetransmitCount: 0
          segmentReceivedOutOfOrderCount: 1
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnClientConnectionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientConnectionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientConnection'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientConnectionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - txQueueByteCount: 2
          clientName: clientName
          timedRetransmitCount: 5
          tcpState: tcpState
          rxQueueByteCount: 6
          clientAddress: clientAddress
          uptime: 7
          encryption: true
          smoothedRoundTripTime: 5
          msgVpnName: msgVpnName
          compression: true
          fastRetransmitCount: 0
          segmentReceivedOutOfOrderCount: 1
        - txQueueByteCount: 2
          clientName: clientName
          timedRetransmitCount: 5
          tcpState: tcpState
          rxQueueByteCount: 6
          clientAddress: clientAddress
          uptime: 7
          encryption: true
          smoothedRoundTripTime: 5
          msgVpnName: msgVpnName
          compression: true
          fastRetransmitCount: 0
          segmentReceivedOutOfOrderCount: 1
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnClientLinks:
      type: object
      properties:
        connectionsUri:
          type: string
          description: The URI of this Client's collection of Client Connection objects.
        rxFlowsUri:
          type: string
          description: The URI of this Client's collection of Client Receive Flow
            objects.
        subscriptionsUri:
          type: string
          description: The URI of this Client's collection of Client Subscription
            objects.
        transactedSessionsUri:
          type: string
          description: The URI of this Client's collection of Client Transacted Session
            objects.
        txFlowsUri:
          type: string
          description: The URI of this Client's collection of Client Transmit Flow
            objects.
        uri:
          type: string
          description: The URI of this Client object.
      example:
        txFlowsUri: txFlowsUri
        connectionsUri: connectionsUri
        transactedSessionsUri: transactedSessionsUri
        rxFlowsUri: rxFlowsUri
        subscriptionsUri: subscriptionsUri
        uri: uri
    MsgVpnClientProfile:
      type: object
      properties:
        allowBridgeConnectionsEnabled:
          type: boolean
          description: Indicates whether Bridge clients using the Client Profile are
            allowed to connect.
        allowCutThroughForwardingEnabled:
          type: boolean
          description: Indicates whether clients using the Client Profile are allowed
            to bind to endpoints with the cut-through forwarding delivery mode. Deprecated
            since 2.22. This attribute has been deprecated. Please visit the Solace
            Product Lifecycle Policy web page for details on deprecated features.
        allowGuaranteedEndpointCreateDurability:
          type: string
          description: |-
            Indicates whether clients using the Client Profile are allowed to create durable and/or non-durable topic endponts or queues. The allowed values and their meaning are:

            <pre>
            "all" - Client can create any type of endpoint.
            "durable" - Client can create only durable endpoints.
            "non-durable" - Client can create only non-durable endpoints.
            </pre>
             Available since 2.14.
          enum:
          - all
          - durable
          - non-durable
        allowGuaranteedEndpointCreateEnabled:
          type: boolean
          description: Indicates whether clients using the Client Profile are allowed
            to create topic endponts or queues.
        allowGuaranteedMsgReceiveEnabled:
          type: boolean
          description: Indicates whether clients using the Client Profile are allowed
            to receive guaranteed messages.
        allowGuaranteedMsgSendEnabled:
          type: boolean
          description: Indicates whether clients using the Client Profile are allowed
            to send guaranteed messages.
        allowSharedSubscriptionsEnabled:
          type: boolean
          description: Indicates whether shared subscriptions are allowed. Changing
            this setting does not affect existing subscriptions.
        allowTransactedSessionsEnabled:
          type: boolean
          description: Indicates whether clients using the Client Profile are allowed
            to establish transacted sessions.
        apiQueueManagementCopyFromOnCreateName:
          type: string
          description: The name of a queue to copy settings from when a new queue
            is created by a client using the Client Profile. The referenced queue
            must exist in the Message VPN. Deprecated since 2.14. This attribute has
            been replaced with `apiQueueManagementCopyFromOnCreateTemplateName`.
        apiQueueManagementCopyFromOnCreateTemplateName:
          type: string
          description: "The name of a queue template to copy settings from when a\
            \ new queue is created by a client using the Client Profile. If the referenced\
            \ queue template does not exist, queue creation will fail when it tries\
            \ to resolve this template. Available since 2.14."
        apiTopicEndpointManagementCopyFromOnCreateName:
          type: string
          description: The name of a topic endpoint to copy settings from when a new
            topic endpoint is created by a client using the Client Profile. The referenced
            topic endpoint must exist in the Message VPN. Deprecated since 2.14. This
            attribute has been replaced with `apiTopicEndpointManagementCopyFromOnCreateTemplateName`.
        apiTopicEndpointManagementCopyFromOnCreateTemplateName:
          type: string
          description: "The name of a topic endpoint template to copy settings from\
            \ when a new topic endpoint is created by a client using the Client Profile.\
            \ If the referenced topic endpoint template does not exist, topic endpoint\
            \ creation will fail when it tries to resolve this template. Available\
            \ since 2.14."
        clientProfileName:
          type: string
          description: The name of the Client Profile.
        compressionEnabled:
          type: boolean
          description: Indicates whether clients using the Client Profile are allowed
            to use compression.
        elidingDelay:
          type: integer
          description: "The amount of time to delay the delivery of messages to clients\
            \ using the Client Profile after the initial message has been delivered\
            \ (the eliding delay interval), in milliseconds. A value of 0 means there\
            \ is no delay in delivering messages to clients."
          format: int64
        elidingEnabled:
          type: boolean
          description: Indicates whether message eliding is enabled for clients using
            the Client Profile.
        elidingMaxTopicCount:
          type: integer
          description: The maximum number of topics tracked for message eliding per
            client connection using the Client Profile.
          format: int64
        eventClientProvisionedEndpointSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEndpointCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceSmfConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceWebConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSubscriptionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxConnectionCountPerClientUsername:
          type: integer
          description: The maximum number of client connections per Client Username
            using the Client Profile.
          format: int64
        maxEffectiveEndpointCount:
          type: integer
          description: The effective maximum number of queues and topic endpoints
            per Client Username using the Client Profile.
          format: int32
        maxEffectiveRxFlowCount:
          type: integer
          description: The effective maximum number of receive flows per client using
            the Client Profile.
          format: int32
        maxEffectiveSubscriptionCount:
          type: integer
          description: The effective maximum number of subscriptions per client using
            the Client Profile.
          format: int32
        maxEffectiveTransactedSessionCount:
          type: integer
          description: The effective maximum number of transacted sessions per client
            using the Client Profile.
          format: int32
        maxEffectiveTransactionCount:
          type: integer
          description: The effective maximum number of transactions per client using
            the Client Profile.
          format: int32
        maxEffectiveTxFlowCount:
          type: integer
          description: The effective maximum number of transmit flows per client using
            the Client Profile.
          format: int32
        maxEgressFlowCount:
          type: integer
          description: The maximum number of transmit flows that can be created by
            one client using the Client Profile.
          format: int64
        maxEndpointCountPerClientUsername:
          type: integer
          description: The maximum number of queues and topic endpoints that can be
            created by clients with the same Client Username using the Client Profile.
          format: int64
        maxIngressFlowCount:
          type: integer
          description: The maximum number of receive flows that can be created by
            one client using the Client Profile.
          format: int64
        maxMsgsPerTransaction:
          type: integer
          description: The maximum number of publisher and consumer messages combined
            that is allowed within a transaction for each client associated with this
            client-profile. Exceeding this limit will result in a transaction prepare
            or commit failure. Changing this value during operation will not affect
            existing sessions. It is only validated at transaction creation time.
            Large transactions consume more resources and are more likely to require
            retrieving messages from the ADB or from disk to process the transaction
            prepare or commit requests. The transaction processing rate may diminish
            if a large number of messages must be retrieved from the ADB or from disk.
            Care should be taken to not use excessively large transactions needlessly
            to avoid exceeding resource limits and to avoid reducing the overall broker
            performance. Available since 2.20.
          format: int32
        maxSubscriptionCount:
          type: integer
          description: "The maximum number of subscriptions per client using the Client\
            \ Profile. This limit is not enforced when a client adds a subscription\
            \ to an endpoint, except for MQTT QoS 1 subscriptions. In addition, this\
            \ limit is not enforced when a subscription is added using a management\
            \ interface, such as CLI or SEMP."
          format: int64
        maxTransactedSessionCount:
          type: integer
          description: The maximum number of transacted sessions that can be created
            by one client using the Client Profile.
          format: int64
        maxTransactionCount:
          type: integer
          description: The maximum number of transactions that can be created by one
            client using the Client Profile.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        queueControl1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Control 1\" (C-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data."
          format: int32
        queueControl1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Control 1\" (C-1) priority queue, regardless of the `queueControl1MaxDepth`\
            \ value."
          format: int32
        queueDirect1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 1\" (D-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data."
          format: int32
        queueDirect1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 1\" (D-1) priority queue, regardless of the `queueDirect1MaxDepth`\
            \ value."
          format: int32
        queueDirect2MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 2\" (D-2) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data."
          format: int32
        queueDirect2MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 2\" (D-2) priority queue, regardless of the `queueDirect2MaxDepth`\
            \ value."
          format: int32
        queueDirect3MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 3\" (D-3) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data."
          format: int32
        queueDirect3MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 3\" (D-3) priority queue, regardless of the `queueDirect3MaxDepth`\
            \ value."
          format: int32
        queueGuaranteed1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Guaranteed 1\" (G-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data."
          format: int32
        queueGuaranteed1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Guaranteed 1\" (G-3) priority queue, regardless of the `queueGuaranteed1MaxDepth`\
            \ value."
          format: int32
        rejectMsgToSenderOnNoSubscriptionMatchEnabled:
          type: boolean
          description: Indicates whether to send a negative acknowledgement (NACK)
            to a client using the Client Profile when discarding a guaranteed message
            due to no matching subscription found.
        replicationAllowClientConnectWhenStandbyEnabled:
          type: boolean
          description: Indicates whether clients using the Client Profile are allowed
            to connect to the Message VPN when its replication state is standby.
        serviceMinKeepaliveTimeout:
          type: integer
          description: The minimum client keepalive timeout which will be enforced
            for client connections. Available since 2.19.
          format: int32
        serviceSmfMaxConnectionCountPerClientUsername:
          type: integer
          description: The maximum number of SMF client connections per Client Username
            using the Client Profile.
          format: int64
        serviceSmfMinKeepaliveEnabled:
          type: boolean
          description: Enable or disable the enforcement of a minimum keepalive timeout
            for SMF clients. Available since 2.19.
        serviceWebInactiveTimeout:
          type: integer
          description: "The timeout for inactive Web Transport client sessions using\
            \ the Client Profile, in seconds."
          format: int64
        serviceWebMaxConnectionCountPerClientUsername:
          type: integer
          description: The maximum number of Web Transport client connections per
            Client Username using the Client Profile.
          format: int64
        serviceWebMaxPayload:
          type: integer
          description: "The maximum Web Transport payload size before fragmentation\
            \ occurs for clients using the Client Profile, in bytes. The size of the\
            \ header is not included."
          format: int64
        tcpCongestionWindowSize:
          type: integer
          description: "The TCP initial congestion window size for clients using the\
            \ Client Profile, in multiples of the TCP Maximum Segment Size (MSS).\
            \ Changing the value from its default of 2 results in non-compliance with\
            \ RFC 2581. Contact support before changing this value."
          format: int64
        tcpKeepaliveCount:
          type: integer
          description: The number of TCP keepalive retransmissions to a client using
            the Client Profile before declaring that it is not available.
          format: int64
        tcpKeepaliveIdleTime:
          type: integer
          description: "The amount of time a client connection using the Client Profile\
            \ must remain idle before TCP begins sending keepalive probes, in seconds."
          format: int64
        tcpKeepaliveInterval:
          type: integer
          description: "The amount of time between TCP keepalive retransmissions to\
            \ a client using the Client Profile when no acknowledgement is received,\
            \ in seconds."
          format: int64
        tcpMaxSegmentSize:
          type: integer
          description: "The TCP maximum segment size for clients using the Client\
            \ Profile, in bytes. Changes are applied to all existing connections."
          format: int64
        tcpMaxWindowSize:
          type: integer
          description: "The TCP maximum window size for clients using the Client Profile,\
            \ in kilobytes. Changes are applied to all existing connections."
          format: int64
        tlsAllowDowngradeToPlainTextEnabled:
          type: boolean
          description: Indicates whether clients using the Client Profile are allowed
            to downgrade an encrypted connection to plain text.
      example:
        apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
        compressionEnabled: true
        tcpMaxWindowSize: 7
        allowGuaranteedEndpointCreateDurability: all
        clientProfileName: clientProfileName
        eventTransactionCountThreshold: null
        tcpMaxSegmentSize: 3
        queueDirect2MaxDepth: 9
        serviceSmfMinKeepaliveEnabled: true
        maxEffectiveSubscriptionCount: 2
        msgVpnName: msgVpnName
        allowSharedSubscriptionsEnabled: true
        eventClientProvisionedEndpointSpoolUsageThreshold:
          clearPercent: 0
          setPercent: 4
        eventEgressFlowCountThreshold: null
        queueDirect3MinMsgBurst: 8
        elidingDelay: 0
        eventServiceWebConnectionCountPerClientUsernameThreshold: null
        queueControl1MinMsgBurst: 1
        serviceWebMaxPayload: 6
        maxEffectiveTransactedSessionCount: 7
        serviceMinKeepaliveTimeout: 3
        eventTransactedSessionCountThreshold: null
        apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
        maxEffectiveRxFlowCount: 5
        eventSubscriptionCountThreshold: null
        tlsAllowDowngradeToPlainTextEnabled: true
        tcpKeepaliveIdleTime: 6
        maxEndpointCountPerClientUsername: 4
        queueDirect2MinMsgBurst: 9
        queueGuaranteed1MinMsgBurst: 6
        queueDirect1MaxDepth: 4
        eventServiceSmfConnectionCountPerClientUsernameThreshold: null
        tcpCongestionWindowSize: 6
        eventEndpointCountPerClientUsernameThreshold: null
        queueDirect3MaxDepth: 6
        allowBridgeConnectionsEnabled: true
        allowTransactedSessionsEnabled: true
        maxEffectiveEndpointCount: 5
        serviceSmfMaxConnectionCountPerClientUsername: 6
        allowGuaranteedMsgSendEnabled: true
        queueDirect1MinMsgBurst: 5
        queueGuaranteed1MaxDepth: 9
        serviceWebInactiveTimeout: 1
        allowGuaranteedMsgReceiveEnabled: true
        tcpKeepaliveCount: 5
        maxTransactionCount: 6
        apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
        maxSubscriptionCount: 1
        eventConnectionCountPerClientUsernameThreshold:
          clearPercent: 7
          setPercent: 7
          setValue: 6
          clearValue: 0
        maxEffectiveTxFlowCount: 3
        elidingMaxTopicCount: 6
        maxMsgsPerTransaction: 1
        queueControl1MaxDepth: 7
        tcpKeepaliveInterval: 3
        elidingEnabled: true
        maxIngressFlowCount: 7
        replicationAllowClientConnectWhenStandbyEnabled: true
        maxEgressFlowCount: 2
        maxTransactedSessionCount: 1
        rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
        serviceWebMaxConnectionCountPerClientUsername: 2
        allowGuaranteedEndpointCreateEnabled: true
        allowCutThroughForwardingEnabled: true
        apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
        maxEffectiveTransactionCount: 9
        maxConnectionCountPerClientUsername: 1
        eventIngressFlowCountThreshold: null
    MsgVpnClientProfileCollections:
      type: object
    MsgVpnClientProfileLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Profile object.
      example:
        uri: uri
    MsgVpnClientProfileResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnClientProfileCollections'
        data:
          $ref: '#/components/schemas/MsgVpnClientProfile'
        links:
          $ref: '#/components/schemas/MsgVpnClientProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 7
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold: null
          tcpMaxSegmentSize: 3
          queueDirect2MaxDepth: 9
          serviceSmfMinKeepaliveEnabled: true
          maxEffectiveSubscriptionCount: 2
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 4
          eventEgressFlowCountThreshold: null
          queueDirect3MinMsgBurst: 8
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold: null
          queueControl1MinMsgBurst: 1
          serviceWebMaxPayload: 6
          maxEffectiveTransactedSessionCount: 7
          serviceMinKeepaliveTimeout: 3
          eventTransactedSessionCountThreshold: null
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          maxEffectiveRxFlowCount: 5
          eventSubscriptionCountThreshold: null
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 4
          queueDirect2MinMsgBurst: 9
          queueGuaranteed1MinMsgBurst: 6
          queueDirect1MaxDepth: 4
          eventServiceSmfConnectionCountPerClientUsernameThreshold: null
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold: null
          queueDirect3MaxDepth: 6
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          maxEffectiveEndpointCount: 5
          serviceSmfMaxConnectionCountPerClientUsername: 6
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 5
          queueGuaranteed1MaxDepth: 9
          serviceWebInactiveTimeout: 1
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 5
          maxTransactionCount: 6
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 1
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          maxEffectiveTxFlowCount: 3
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 1
          queueControl1MaxDepth: 7
          tcpKeepaliveInterval: 3
          elidingEnabled: true
          maxIngressFlowCount: 7
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 2
          maxTransactedSessionCount: 1
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 2
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxEffectiveTransactionCount: 9
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold: null
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnClientProfilesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientProfileCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientProfile'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 7
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold: null
          tcpMaxSegmentSize: 3
          queueDirect2MaxDepth: 9
          serviceSmfMinKeepaliveEnabled: true
          maxEffectiveSubscriptionCount: 2
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 4
          eventEgressFlowCountThreshold: null
          queueDirect3MinMsgBurst: 8
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold: null
          queueControl1MinMsgBurst: 1
          serviceWebMaxPayload: 6
          maxEffectiveTransactedSessionCount: 7
          serviceMinKeepaliveTimeout: 3
          eventTransactedSessionCountThreshold: null
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          maxEffectiveRxFlowCount: 5
          eventSubscriptionCountThreshold: null
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 4
          queueDirect2MinMsgBurst: 9
          queueGuaranteed1MinMsgBurst: 6
          queueDirect1MaxDepth: 4
          eventServiceSmfConnectionCountPerClientUsernameThreshold: null
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold: null
          queueDirect3MaxDepth: 6
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          maxEffectiveEndpointCount: 5
          serviceSmfMaxConnectionCountPerClientUsername: 6
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 5
          queueGuaranteed1MaxDepth: 9
          serviceWebInactiveTimeout: 1
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 5
          maxTransactionCount: 6
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 1
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          maxEffectiveTxFlowCount: 3
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 1
          queueControl1MaxDepth: 7
          tcpKeepaliveInterval: 3
          elidingEnabled: true
          maxIngressFlowCount: 7
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 2
          maxTransactedSessionCount: 1
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 2
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxEffectiveTransactionCount: 9
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold: null
        - apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 7
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold: null
          tcpMaxSegmentSize: 3
          queueDirect2MaxDepth: 9
          serviceSmfMinKeepaliveEnabled: true
          maxEffectiveSubscriptionCount: 2
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 4
          eventEgressFlowCountThreshold: null
          queueDirect3MinMsgBurst: 8
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold: null
          queueControl1MinMsgBurst: 1
          serviceWebMaxPayload: 6
          maxEffectiveTransactedSessionCount: 7
          serviceMinKeepaliveTimeout: 3
          eventTransactedSessionCountThreshold: null
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          maxEffectiveRxFlowCount: 5
          eventSubscriptionCountThreshold: null
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 4
          queueDirect2MinMsgBurst: 9
          queueGuaranteed1MinMsgBurst: 6
          queueDirect1MaxDepth: 4
          eventServiceSmfConnectionCountPerClientUsernameThreshold: null
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold: null
          queueDirect3MaxDepth: 6
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          maxEffectiveEndpointCount: 5
          serviceSmfMaxConnectionCountPerClientUsername: 6
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 5
          queueGuaranteed1MaxDepth: 9
          serviceWebInactiveTimeout: 1
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 5
          maxTransactionCount: 6
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 1
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          maxEffectiveTxFlowCount: 3
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 1
          queueControl1MaxDepth: 7
          tcpKeepaliveInterval: 3
          elidingEnabled: true
          maxIngressFlowCount: 7
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 2
          maxTransactedSessionCount: 1
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 2
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxEffectiveTransactionCount: 9
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold: null
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnClientResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnClientCollections'
        data:
          $ref: '#/components/schemas/MsgVpnClient'
        links:
          $ref: '#/components/schemas/MsgVpnClientLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          averageRxByteRate: 7
          restHttpResponseTxByteCount: 6
          txMsgRate: 3
          webTxTlsVersion: webTxTlsVersion
          clientAddress: clientAddress
          slowSubscriber: true
          publishTopicAclRxDiscardedMsgCount: 9
          bindSuccessCount: 7
          mqttDisconnectRxCount: 7
          webRxMsgCount: 2
          mqttPingrespTxCount: 7
          restHttpResponseTimeoutRxMsgCount: 1
          mqttConnackTxCount: 3
          tlsVersion: tlsVersion
          webTxByteCount: 4
          restHttpRequestTxMsgCount: 4
          webTxProtocol: webTxProtocol
          largeMsgEventRaised: true
          dataTxByteCount: 9
          elidingTopicCount: 6
          msgSpoolCongestionRxDiscardedMsgCount: 4
          rxByteRate: 9
          softwareVersion: softwareVersion
          alreadyBoundBindFailureCount: 2
          loginRxMsgCount: 6
          authorizationGroupName: authorizationGroupName
          clientName: clientName
          webTxRequestCount: 0
          controlRxMsgCount: 1
          noLocalDelivery: true
          aclProfileName: aclProfileName
          dtoNetworkPriority: 9
          restHttpResponseTimeoutTxMsgCount: 8
          txByteRate: 5
          webRxByteCount: 3
          restHttpRequestRxMsgCount: 7
          elidingTopicPeakCount: 3
          averageTxByteRate: 3
          mqttPublishQos2RxCount: 7
          noSubscriptionMatchRxDiscardedMsgCount: 9
          maxBindCountExceededBindFailureCount: 5
          webRxResponseCount: 8
          originalClientUsername: originalClientUsername
          rxDiscardedMsgCount: 1
          webParseErrorRxDiscardedMsgCount: 7
          controlTxMsgCount: 7
          msgSpoolRxDiscardedMsgCount: 7
          clientId: 1
          averageRxMsgRate: 9
          dataRxMsgCount: 5
          loginTxMsgCount: 6
          virtualRouter: virtualRouter
          webInactiveTimeout: 9
          txByteCount: 5
          clientUsername: clientUsername
          mqttPubrecTxCount: 5
          webRxProtocol: webRxProtocol
          restHttpRequestTxByteCount: 5
          webRxRequestCount: 3
          mqttUnsubscribeRxCount: 1
          aliasedFromMsgVpnName: aliasedFromMsgVpnName
          keepalive: true
          dataRxByteCount: 4
          cutThroughDeniedBindFailureCount: 1
          keepaliveEffectiveTimeout: 2
          clientProfileName: clientProfileName
          topicParseErrorRxDiscardedMsgCount: 0
          rxMsgRate: 9
          maxElidingTopicCountEventRaised: true
          webMaxPayload: 5
          webTxResponseCount: 7
          dtoLocalPriority: 8
          dataTxMsgCount: 9
          mqttConnectRxCount: 3
          mqttPublishQos0TxCount: 7
          mqttPublishQos1TxCount: 3
          msgVpnName: msgVpnName
          txMsgCount: 7
          averageTxMsgRate: 2
          bindRequestCount: 4
          webTxMsgCount: 0
          mqttSubscribeRxCount: 6
          mqttPingreqRxCount: 0
          controlRxByteCount: 1
          restHttpResponseErrorRxMsgCount: 6
          rxByteCount: 8
          softwareDate: softwareDate
          restHttpRequestRxByteCount: 0
          disabledBindFailureCount: 6
          webRemainingTimeout: 0
          guaranteedDeniedBindFailureCount: 6
          eliding: true
          webRxTlsVersion: webRxTlsVersion
          tlsCipherDescription: tlsCipherDescription
          webTxTlsCipherDescription: webTxTlsCipherDescription
          mqttPubackRxCount: 6
          otherBindFailureCount: 0
          txDiscardedMsgCount: 8
          webTxTcpState: webTxTcpState
          restHttpResponseSuccessRxMsgCount: 0
          webSessionId: webSessionId
          restHttpResponseRxMsgCount: 3
          description: description
          platform: platform
          scheduledDisconnectTime: 8
          mqttPublishQos1RxCount: 3
          mqttPublishQos0RxCount: 8
          webRxEncoding: webRxEncoding
          restHttpResponseErrorTxMsgCount: 8
          tlsDowngradedToPlainText: true
          restHttpResponseTxMsgCount: 4
          rxMsgCount: 3
          mqttPubrelRxCount: 3
          mqttSubackTxCount: 0
          restHttpResponseSuccessTxMsgCount: 2
          controlTxByteCount: 6
          uptime: 3
          invalidSelectorBindFailureCount: 1
          mqttConnackErrorTxCount: 6
          mqttSubackErrorTxCount: 4
          mqttPubackTxCount: 0
          mqttPubcompTxCount: 4
          restHttpResponseRxByteCount: 4
          webRxTlsCipherDescription: webRxTlsCipherDescription
          mqttUnsubackTxCount: 4
          webTxEncoding: webTxEncoding
          user: user
          webRxTcpState: webRxTcpState
        collections:
          transactedSessions:
            count: 5
          subscriptions:
            count: 1
          txFlows:
            count: 5
          rxFlows:
            count: 6
          connections:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          txFlowsUri: txFlowsUri
          connectionsUri: connectionsUri
          transactedSessionsUri: transactedSessionsUri
          rxFlowsUri: rxFlowsUri
          subscriptionsUri: subscriptionsUri
          uri: uri
    MsgVpnClientRxFlow:
      type: object
      properties:
        clientName:
          type: string
          description: The name of the Client.
        connectTime:
          type: integer
          description: The timestamp of when the Flow from the Client connected.
          format: int32
        destinationGroupErrorDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to a destination group error.
          format: int64
        duplicateDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to being a duplicate.
          format: int64
        endpointDisabledDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to an eligible endpoint destination being disabled.
          format: int64
        endpointUsageExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to an eligible endpoint destination having its maximum message spool usage
            exceeded.
          format: int64
        erroredDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to errors being detected.
          format: int64
        flowId:
          type: integer
          description: The identifier (ID) of the flow.
          format: int64
        flowName:
          type: string
          description: The name of the Flow.
        guaranteedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow.
          format: int64
        lastRxMsgId:
          type: integer
          description: The identifier (ID) of the last message received on the Flow.
          format: int64
        localMsgCountExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to the maximum number of messages allowed on the broker being exceeded.
          format: int64
        lowPriorityMsgCongestionDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to congestion of low priority messages.
          format: int64
        maxMsgSizeExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to the maximum allowed message size being exceeded.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        noEligibleDestinationsDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to there being no eligible endpoint destination.
          format: int64
        noLocalDeliveryDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to no local delivery being requested.
          format: int64
        notCompatibleWithForwardingModeDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to being incompatible with the forwarding mode of an eligible endpoint
            destination.
          format: int64
        outOfOrderDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to being received out of order.
          format: int64
        publishAclDeniedDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to being denied by the access control list (ACL) profile for the published
            topic.
          format: int64
        publisherId:
          type: integer
          description: The identifier (ID) of the publisher for the Flow.
          format: int64
        queueNotFoundDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to the destination queue not being found.
          format: int64
        replicationStandbyDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to the Message VPN being in the replication standby state.
          format: int64
        sessionName:
          type: string
          description: The name of the transacted session on the Flow.
        smfTtlExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to the message time-to-live (TTL) count being exceeded. The message TTL
            count is the maximum number of times the message can cross a bridge between
            Message VPNs.
          format: int64
        spoolFileLimitExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to all available message spool file resources being used.
          format: int64
        spoolNotReadyDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to the message spool being not ready.
          format: int64
        spoolToAdbFailDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to a failure while spooling to the Assured Delivery Blade (ADB).
          format: int64
        spoolToDiskFailDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to a failure while spooling to the disk.
          format: int64
        spoolUsageExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to the maximum message spool usage being exceeded.
          format: int64
        syncReplicationIneligibleDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to synchronous replication being ineligible.
          format: int64
        userProfileDeniedGuaranteedDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages from the Flow discarded due
            to being denied by the client profile.
          format: int64
        windowSize:
          type: integer
          description: "The size of the window used for guaranteed messages sent on\
            \ the Flow, in messages."
          format: int32
      example:
        spoolFileLimitExceededDiscardedMsgCount: 9
        clientName: clientName
        replicationStandbyDiscardedMsgCount: 5
        maxMsgSizeExceededDiscardedMsgCount: 7
        notCompatibleWithForwardingModeDiscardedMsgCount: 1
        publisherId: 1
        windowSize: 1
        syncReplicationIneligibleDiscardedMsgCount: 3
        connectTime: 0
        destinationGroupErrorDiscardedMsgCount: 6
        msgVpnName: msgVpnName
        noLocalDeliveryDiscardedMsgCount: 1
        spoolToAdbFailDiscardedMsgCount: 8
        flowId: 7
        queueNotFoundDiscardedMsgCount: 4
        endpointDisabledDiscardedMsgCount: 5
        spoolToDiskFailDiscardedMsgCount: 9
        outOfOrderDiscardedMsgCount: 6
        sessionName: sessionName
        guaranteedMsgCount: 9
        localMsgCountExceededDiscardedMsgCount: 2
        userProfileDeniedGuaranteedDiscardedMsgCount: 6
        spoolUsageExceededDiscardedMsgCount: 6
        duplicateDiscardedMsgCount: 1
        lastRxMsgId: 3
        spoolNotReadyDiscardedMsgCount: 6
        flowName: flowName
        publishAclDeniedDiscardedMsgCount: 7
        noEligibleDestinationsDiscardedMsgCount: 1
        endpointUsageExceededDiscardedMsgCount: 5
        erroredDiscardedMsgCount: 2
        smfTtlExceededDiscardedMsgCount: 9
        lowPriorityMsgCongestionDiscardedMsgCount: 4
    MsgVpnClientRxFlowCollections:
      type: object
    MsgVpnClientRxFlowLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Receive Flow object.
      example:
        uri: uri
    MsgVpnClientRxFlowResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnClientRxFlowCollections'
        data:
          $ref: '#/components/schemas/MsgVpnClientRxFlow'
        links:
          $ref: '#/components/schemas/MsgVpnClientRxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          spoolFileLimitExceededDiscardedMsgCount: 9
          clientName: clientName
          replicationStandbyDiscardedMsgCount: 5
          maxMsgSizeExceededDiscardedMsgCount: 7
          notCompatibleWithForwardingModeDiscardedMsgCount: 1
          publisherId: 1
          windowSize: 1
          syncReplicationIneligibleDiscardedMsgCount: 3
          connectTime: 0
          destinationGroupErrorDiscardedMsgCount: 6
          msgVpnName: msgVpnName
          noLocalDeliveryDiscardedMsgCount: 1
          spoolToAdbFailDiscardedMsgCount: 8
          flowId: 7
          queueNotFoundDiscardedMsgCount: 4
          endpointDisabledDiscardedMsgCount: 5
          spoolToDiskFailDiscardedMsgCount: 9
          outOfOrderDiscardedMsgCount: 6
          sessionName: sessionName
          guaranteedMsgCount: 9
          localMsgCountExceededDiscardedMsgCount: 2
          userProfileDeniedGuaranteedDiscardedMsgCount: 6
          spoolUsageExceededDiscardedMsgCount: 6
          duplicateDiscardedMsgCount: 1
          lastRxMsgId: 3
          spoolNotReadyDiscardedMsgCount: 6
          flowName: flowName
          publishAclDeniedDiscardedMsgCount: 7
          noEligibleDestinationsDiscardedMsgCount: 1
          endpointUsageExceededDiscardedMsgCount: 5
          erroredDiscardedMsgCount: 2
          smfTtlExceededDiscardedMsgCount: 9
          lowPriorityMsgCongestionDiscardedMsgCount: 4
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnClientRxFlowsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientRxFlowCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientRxFlow'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientRxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - spoolFileLimitExceededDiscardedMsgCount: 9
          clientName: clientName
          replicationStandbyDiscardedMsgCount: 5
          maxMsgSizeExceededDiscardedMsgCount: 7
          notCompatibleWithForwardingModeDiscardedMsgCount: 1
          publisherId: 1
          windowSize: 1
          syncReplicationIneligibleDiscardedMsgCount: 3
          connectTime: 0
          destinationGroupErrorDiscardedMsgCount: 6
          msgVpnName: msgVpnName
          noLocalDeliveryDiscardedMsgCount: 1
          spoolToAdbFailDiscardedMsgCount: 8
          flowId: 7
          queueNotFoundDiscardedMsgCount: 4
          endpointDisabledDiscardedMsgCount: 5
          spoolToDiskFailDiscardedMsgCount: 9
          outOfOrderDiscardedMsgCount: 6
          sessionName: sessionName
          guaranteedMsgCount: 9
          localMsgCountExceededDiscardedMsgCount: 2
          userProfileDeniedGuaranteedDiscardedMsgCount: 6
          spoolUsageExceededDiscardedMsgCount: 6
          duplicateDiscardedMsgCount: 1
          lastRxMsgId: 3
          spoolNotReadyDiscardedMsgCount: 6
          flowName: flowName
          publishAclDeniedDiscardedMsgCount: 7
          noEligibleDestinationsDiscardedMsgCount: 1
          endpointUsageExceededDiscardedMsgCount: 5
          erroredDiscardedMsgCount: 2
          smfTtlExceededDiscardedMsgCount: 9
          lowPriorityMsgCongestionDiscardedMsgCount: 4
        - spoolFileLimitExceededDiscardedMsgCount: 9
          clientName: clientName
          replicationStandbyDiscardedMsgCount: 5
          maxMsgSizeExceededDiscardedMsgCount: 7
          notCompatibleWithForwardingModeDiscardedMsgCount: 1
          publisherId: 1
          windowSize: 1
          syncReplicationIneligibleDiscardedMsgCount: 3
          connectTime: 0
          destinationGroupErrorDiscardedMsgCount: 6
          msgVpnName: msgVpnName
          noLocalDeliveryDiscardedMsgCount: 1
          spoolToAdbFailDiscardedMsgCount: 8
          flowId: 7
          queueNotFoundDiscardedMsgCount: 4
          endpointDisabledDiscardedMsgCount: 5
          spoolToDiskFailDiscardedMsgCount: 9
          outOfOrderDiscardedMsgCount: 6
          sessionName: sessionName
          guaranteedMsgCount: 9
          localMsgCountExceededDiscardedMsgCount: 2
          userProfileDeniedGuaranteedDiscardedMsgCount: 6
          spoolUsageExceededDiscardedMsgCount: 6
          duplicateDiscardedMsgCount: 1
          lastRxMsgId: 3
          spoolNotReadyDiscardedMsgCount: 6
          flowName: flowName
          publishAclDeniedDiscardedMsgCount: 7
          noEligibleDestinationsDiscardedMsgCount: 1
          endpointUsageExceededDiscardedMsgCount: 5
          erroredDiscardedMsgCount: 2
          smfTtlExceededDiscardedMsgCount: 9
          lowPriorityMsgCongestionDiscardedMsgCount: 4
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnClientSubscription:
      type: object
      properties:
        clientName:
          type: string
          description: The name of the Client.
        dtoPriority:
          type: string
          description: |
            The priority of the Subscription topic for receiving deliver-to-one (DTO) messages. The allowed values and their meaning are:

            <pre>
            "p1" - The 1st or highest priority.
            "p2" - The 2nd highest priority.
            "p3" - The 3rd highest priority.
            "p4" - The 4th highest priority.
            "da" - Ignore priority and deliver always.
            </pre>
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        subscriptionTopic:
          type: string
          description: The topic of the Subscription.
      example:
        clientName: clientName
        msgVpnName: msgVpnName
        subscriptionTopic: subscriptionTopic
        dtoPriority: dtoPriority
    MsgVpnClientSubscriptionCollections:
      type: object
    MsgVpnClientSubscriptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Subscription object.
      example:
        uri: uri
    MsgVpnClientSubscriptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnClientSubscriptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnClientSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnClientSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          clientName: clientName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          dtoPriority: dtoPriority
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnClientSubscriptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientSubscriptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientSubscription'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - clientName: clientName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          dtoPriority: dtoPriority
        - clientName: clientName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          dtoPriority: dtoPriority
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnClientTransactedSession:
      type: object
      properties:
        clientName:
          type: string
          description: The name of the Client.
        commitCount:
          type: integer
          description: The number of transactions committed within the Transacted
            Session.
          format: int64
        commitFailureCount:
          type: integer
          description: The number of transaction commit operations that failed.
          format: int64
        commitSuccessCount:
          type: integer
          description: The number of transaction commit operations that succeeded.
          format: int64
        consumedMsgCount:
          type: integer
          description: The number of messages consumed within the Transacted Session.
          format: int64
        endFailFailureCount:
          type: integer
          description: The number of transaction end fail operations that failed.
          format: int64
        endFailSuccessCount:
          type: integer
          description: The number of transaction end fail operations that succeeded.
          format: int64
        endFailureCount:
          type: integer
          description: The number of transaction end operations that failed.
          format: int64
        endRollbackFailureCount:
          type: integer
          description: The number of transaction end rollback operations that failed.
          format: int64
        endRollbackSuccessCount:
          type: integer
          description: The number of transaction end rollback operations that succeeded.
          format: int64
        endSuccessCount:
          type: integer
          description: The number of transaction end operations that succeeded.
          format: int64
        failureCount:
          type: integer
          description: The number of transactions that failed within the Transacted
            Session.
          format: int64
        forgetFailureCount:
          type: integer
          description: The number of transaction forget operations that failed.
          format: int64
        forgetSuccessCount:
          type: integer
          description: The number of transaction forget operations that succeeded.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        onePhaseCommitFailureCount:
          type: integer
          description: The number of transaction one-phase commit operations that
            failed.
          format: int64
        onePhaseCommitSuccessCount:
          type: integer
          description: The number of transaction one-phase commit operations that
            succeeded.
          format: int64
        pendingConsumedMsgCount:
          type: integer
          description: The number of messages to be consumed when the transaction
            is committed.
          format: int32
        pendingPublishedMsgCount:
          type: integer
          description: The number of messages to be published when the transaction
            is committed.
          format: int32
        prepareFailureCount:
          type: integer
          description: The number of transaction prepare operations that failed.
          format: int64
        prepareSuccessCount:
          type: integer
          description: The number of transaction prepare operations that succeeded.
          format: int64
        previousTransactionState:
          type: string
          description: |
            The state of the previous transaction. The allowed values and their meaning are:

            <pre>
            "none" - The previous transaction had no state.
            "committed" - The previous transaction was committed.
            "rolled-back" - The previous transaction was rolled back.
            "failed" - The previous transaction failed.
            </pre>
        publishedMsgCount:
          type: integer
          description: The number of messages published within the Transacted Session.
          format: int64
        resumeFailureCount:
          type: integer
          description: The number of transaction resume operations that failed.
          format: int64
        resumeSuccessCount:
          type: integer
          description: The number of transaction resume operations that succeeded.
          format: int64
        retrievedMsgCount:
          type: integer
          description: The number of messages retrieved within the Transacted Session.
          format: int64
        rollbackCount:
          type: integer
          description: The number of transactions rolled back within the Transacted
            Session.
          format: int64
        rollbackFailureCount:
          type: integer
          description: The number of transaction rollback operations that failed.
          format: int64
        rollbackSuccessCount:
          type: integer
          description: The number of transaction rollback operations that succeeded.
          format: int64
        sessionName:
          type: string
          description: The name of the Transacted Session.
        spooledMsgCount:
          type: integer
          description: The number of messages spooled within the Transacted Session.
          format: int64
        startFailureCount:
          type: integer
          description: The number of transaction start operations that failed.
          format: int64
        startSuccessCount:
          type: integer
          description: The number of transaction start operations that succeeded.
          format: int64
        successCount:
          type: integer
          description: The number of transactions that succeeded within the Transacted
            Session.
          format: int64
        suspendFailureCount:
          type: integer
          description: The number of transaction suspend operations that failed.
          format: int64
        suspendSuccessCount:
          type: integer
          description: The number of transaction suspend operations that succeeded.
          format: int64
        transactionId:
          type: integer
          description: The identifier (ID) of the transaction in the Transacted Session.
          format: int32
        transactionState:
          type: string
          description: |
            The state of the current transaction. The allowed values and their meaning are:

            <pre>
            "in-progress" - The current transaction is in progress.
            "committing" - The current transaction is committing.
            "rolling-back" - The current transaction is rolling back.
            "failing" - The current transaction is failing.
            </pre>
        twoPhaseCommitFailureCount:
          type: integer
          description: The number of transaction two-phase commit operations that
            failed.
          format: int64
        twoPhaseCommitSuccessCount:
          type: integer
          description: The number of transaction two-phase commit operations that
            succeeded.
          format: int64
      example:
        pendingPublishedMsgCount: 7
        startSuccessCount: 1
        twoPhaseCommitFailureCount: 6
        clientName: clientName
        suspendFailureCount: 6
        commitCount: 0
        pendingConsumedMsgCount: 6
        endFailureCount: 7
        resumeSuccessCount: 9
        rollbackCount: 8
        successCount: 2
        onePhaseCommitSuccessCount: 1
        prepareFailureCount: 1
        rollbackSuccessCount: 6
        msgVpnName: msgVpnName
        endRollbackSuccessCount: 3
        forgetSuccessCount: 1
        previousTransactionState: previousTransactionState
        consumedMsgCount: 5
        publishedMsgCount: 5
        endFailSuccessCount: 2
        resumeFailureCount: 9
        prepareSuccessCount: 4
        sessionName: sessionName
        commitFailureCount: 6
        endSuccessCount: 2
        suspendSuccessCount: 6
        transactionId: 5
        twoPhaseCommitSuccessCount: 3
        commitSuccessCount: 1
        spooledMsgCount: 3
        endFailFailureCount: 5
        startFailureCount: 6
        retrievedMsgCount: 6
        forgetFailureCount: 7
        endRollbackFailureCount: 9
        onePhaseCommitFailureCount: 1
        rollbackFailureCount: 9
        transactionState: transactionState
        failureCount: 4
    MsgVpnClientTransactedSessionCollections:
      type: object
    MsgVpnClientTransactedSessionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Transacted Session object.
      example:
        uri: uri
    MsgVpnClientTransactedSessionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnClientTransactedSessionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnClientTransactedSession'
        links:
          $ref: '#/components/schemas/MsgVpnClientTransactedSessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          pendingPublishedMsgCount: 7
          startSuccessCount: 1
          twoPhaseCommitFailureCount: 6
          clientName: clientName
          suspendFailureCount: 6
          commitCount: 0
          pendingConsumedMsgCount: 6
          endFailureCount: 7
          resumeSuccessCount: 9
          rollbackCount: 8
          successCount: 2
          onePhaseCommitSuccessCount: 1
          prepareFailureCount: 1
          rollbackSuccessCount: 6
          msgVpnName: msgVpnName
          endRollbackSuccessCount: 3
          forgetSuccessCount: 1
          previousTransactionState: previousTransactionState
          consumedMsgCount: 5
          publishedMsgCount: 5
          endFailSuccessCount: 2
          resumeFailureCount: 9
          prepareSuccessCount: 4
          sessionName: sessionName
          commitFailureCount: 6
          endSuccessCount: 2
          suspendSuccessCount: 6
          transactionId: 5
          twoPhaseCommitSuccessCount: 3
          commitSuccessCount: 1
          spooledMsgCount: 3
          endFailFailureCount: 5
          startFailureCount: 6
          retrievedMsgCount: 6
          forgetFailureCount: 7
          endRollbackFailureCount: 9
          onePhaseCommitFailureCount: 1
          rollbackFailureCount: 9
          transactionState: transactionState
          failureCount: 4
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnClientTransactedSessionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientTransactedSessionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientTransactedSession'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientTransactedSessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - pendingPublishedMsgCount: 7
          startSuccessCount: 1
          twoPhaseCommitFailureCount: 6
          clientName: clientName
          suspendFailureCount: 6
          commitCount: 0
          pendingConsumedMsgCount: 6
          endFailureCount: 7
          resumeSuccessCount: 9
          rollbackCount: 8
          successCount: 2
          onePhaseCommitSuccessCount: 1
          prepareFailureCount: 1
          rollbackSuccessCount: 6
          msgVpnName: msgVpnName
          endRollbackSuccessCount: 3
          forgetSuccessCount: 1
          previousTransactionState: previousTransactionState
          consumedMsgCount: 5
          publishedMsgCount: 5
          endFailSuccessCount: 2
          resumeFailureCount: 9
          prepareSuccessCount: 4
          sessionName: sessionName
          commitFailureCount: 6
          endSuccessCount: 2
          suspendSuccessCount: 6
          transactionId: 5
          twoPhaseCommitSuccessCount: 3
          commitSuccessCount: 1
          spooledMsgCount: 3
          endFailFailureCount: 5
          startFailureCount: 6
          retrievedMsgCount: 6
          forgetFailureCount: 7
          endRollbackFailureCount: 9
          onePhaseCommitFailureCount: 1
          rollbackFailureCount: 9
          transactionState: transactionState
          failureCount: 4
        - pendingPublishedMsgCount: 7
          startSuccessCount: 1
          twoPhaseCommitFailureCount: 6
          clientName: clientName
          suspendFailureCount: 6
          commitCount: 0
          pendingConsumedMsgCount: 6
          endFailureCount: 7
          resumeSuccessCount: 9
          rollbackCount: 8
          successCount: 2
          onePhaseCommitSuccessCount: 1
          prepareFailureCount: 1
          rollbackSuccessCount: 6
          msgVpnName: msgVpnName
          endRollbackSuccessCount: 3
          forgetSuccessCount: 1
          previousTransactionState: previousTransactionState
          consumedMsgCount: 5
          publishedMsgCount: 5
          endFailSuccessCount: 2
          resumeFailureCount: 9
          prepareSuccessCount: 4
          sessionName: sessionName
          commitFailureCount: 6
          endSuccessCount: 2
          suspendSuccessCount: 6
          transactionId: 5
          twoPhaseCommitSuccessCount: 3
          commitSuccessCount: 1
          spooledMsgCount: 3
          endFailFailureCount: 5
          startFailureCount: 6
          retrievedMsgCount: 6
          forgetFailureCount: 7
          endRollbackFailureCount: 9
          onePhaseCommitFailureCount: 1
          rollbackFailureCount: 9
          transactionState: transactionState
          failureCount: 4
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnClientTxFlow:
      type: object
      properties:
        clientName:
          type: string
          description: The name of the Client.
        endpointName:
          type: string
          description: The name of the Queue or Topic Endpoint bound.
        endpointType:
          type: string
          description: |
            The type of endpoint bound. The allowed values and their meaning are:

            <pre>
            "queue" - The Client is bound to a Queue.
            "topic-endpoint" - The Client is bound to a Topic Endpoint.
            </pre>
        flowId:
          type: integer
          description: The identifier (ID) of the flow.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        endpointType: endpointType
        clientName: clientName
        endpointName: endpointName
        msgVpnName: msgVpnName
        flowId: 0
    MsgVpnClientTxFlowCollections:
      type: object
    MsgVpnClientTxFlowLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Transmit Flow object.
      example:
        uri: uri
    MsgVpnClientTxFlowResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnClientTxFlowCollections'
        data:
          $ref: '#/components/schemas/MsgVpnClientTxFlow'
        links:
          $ref: '#/components/schemas/MsgVpnClientTxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          endpointType: endpointType
          clientName: clientName
          endpointName: endpointName
          msgVpnName: msgVpnName
          flowId: 0
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnClientTxFlowsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientTxFlowCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientTxFlow'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientTxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - endpointType: endpointType
          clientName: clientName
          endpointName: endpointName
          msgVpnName: msgVpnName
          flowId: 0
        - endpointType: endpointType
          clientName: clientName
          endpointName: endpointName
          msgVpnName: msgVpnName
          flowId: 0
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnClientUsername:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The ACL Profile of the Client Username.
        clientProfileName:
          type: string
          description: The Client Profile of the Client Username.
        clientUsername:
          type: string
          description: The name of the Client Username.
        dynamic:
          type: boolean
          description: Indicates whether the Client Username was dynamically created
            based on remote authorization data.
        enabled:
          type: boolean
          description: Indicates whether the Client Username is enabled.
        guaranteedEndpointPermissionOverrideEnabled:
          type: boolean
          description: Indicates whether the guaranteed endpoint permission override
            is enabled for the Client Username.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        subscriptionManagerEnabled:
          type: boolean
          description: Indicates whether the subscription management capability is
            enabled for the Client Username.
      example:
        subscriptionManagerEnabled: true
        clientUsername: clientUsername
        clientProfileName: clientProfileName
        dynamic: true
        msgVpnName: msgVpnName
        guaranteedEndpointPermissionOverrideEnabled: true
        aclProfileName: aclProfileName
        enabled: true
    MsgVpnClientUsernameAttribute:
      type: object
      properties:
        attributeName:
          type: string
          description: The name of the Attribute.
        attributeValue:
          type: string
          description: The value of the Attribute.
        clientUsername:
          type: string
          description: The name of the Client Username.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        attributeValue: attributeValue
        clientUsername: clientUsername
        attributeName: attributeName
        msgVpnName: msgVpnName
    MsgVpnClientUsernameAttributeCollections:
      type: object
    MsgVpnClientUsernameAttributeLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Username Attribute object.
      example:
        uri: uri
    MsgVpnClientUsernameAttributeResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnClientUsernameAttributeCollections'
        data:
          $ref: '#/components/schemas/MsgVpnClientUsernameAttribute'
        links:
          $ref: '#/components/schemas/MsgVpnClientUsernameAttributeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          attributeValue: attributeValue
          clientUsername: clientUsername
          attributeName: attributeName
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnClientUsernameAttributesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientUsernameAttributeCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientUsernameAttribute'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientUsernameAttributeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - attributeValue: attributeValue
          clientUsername: clientUsername
          attributeName: attributeName
          msgVpnName: msgVpnName
        - attributeValue: attributeValue
          clientUsername: clientUsername
          attributeName: attributeName
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnClientUsernameCollections:
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/MsgVpnClientUsernameCollectionsAttributes'
      example:
        attributes:
          count: 0
    MsgVpnClientUsernameCollectionsAttributes:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the attributes collection. Available
            since 2.27.
          format: int64
      example:
        count: 0
    MsgVpnClientUsernameLinks:
      type: object
      properties:
        attributesUri:
          type: string
          description: The URI of this Client Username's collection of Client Username
            Attribute objects. Available since 2.27.
        uri:
          type: string
          description: The URI of this Client Username object.
      example:
        attributesUri: attributesUri
        uri: uri
    MsgVpnClientUsernameResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnClientUsernameCollections'
        data:
          $ref: '#/components/schemas/MsgVpnClientUsername'
        links:
          $ref: '#/components/schemas/MsgVpnClientUsernameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          dynamic: true
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        collections:
          attributes:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          attributesUri: attributesUri
          uri: uri
    MsgVpnClientUsernamesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientUsernameCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientUsername'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientUsernameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          dynamic: true
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        - subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          dynamic: true
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        collections:
        - attributes:
            count: 0
        - attributes:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - attributesUri: attributesUri
          uri: uri
        - attributesUri: attributesUri
          uri: uri
    MsgVpnClientsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClient'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - averageRxByteRate: 7
          restHttpResponseTxByteCount: 6
          txMsgRate: 3
          webTxTlsVersion: webTxTlsVersion
          clientAddress: clientAddress
          slowSubscriber: true
          publishTopicAclRxDiscardedMsgCount: 9
          bindSuccessCount: 7
          mqttDisconnectRxCount: 7
          webRxMsgCount: 2
          mqttPingrespTxCount: 7
          restHttpResponseTimeoutRxMsgCount: 1
          mqttConnackTxCount: 3
          tlsVersion: tlsVersion
          webTxByteCount: 4
          restHttpRequestTxMsgCount: 4
          webTxProtocol: webTxProtocol
          largeMsgEventRaised: true
          dataTxByteCount: 9
          elidingTopicCount: 6
          msgSpoolCongestionRxDiscardedMsgCount: 4
          rxByteRate: 9
          softwareVersion: softwareVersion
          alreadyBoundBindFailureCount: 2
          loginRxMsgCount: 6
          authorizationGroupName: authorizationGroupName
          clientName: clientName
          webTxRequestCount: 0
          controlRxMsgCount: 1
          noLocalDelivery: true
          aclProfileName: aclProfileName
          dtoNetworkPriority: 9
          restHttpResponseTimeoutTxMsgCount: 8
          txByteRate: 5
          webRxByteCount: 3
          restHttpRequestRxMsgCount: 7
          elidingTopicPeakCount: 3
          averageTxByteRate: 3
          mqttPublishQos2RxCount: 7
          noSubscriptionMatchRxDiscardedMsgCount: 9
          maxBindCountExceededBindFailureCount: 5
          webRxResponseCount: 8
          originalClientUsername: originalClientUsername
          rxDiscardedMsgCount: 1
          webParseErrorRxDiscardedMsgCount: 7
          controlTxMsgCount: 7
          msgSpoolRxDiscardedMsgCount: 7
          clientId: 1
          averageRxMsgRate: 9
          dataRxMsgCount: 5
          loginTxMsgCount: 6
          virtualRouter: virtualRouter
          webInactiveTimeout: 9
          txByteCount: 5
          clientUsername: clientUsername
          mqttPubrecTxCount: 5
          webRxProtocol: webRxProtocol
          restHttpRequestTxByteCount: 5
          webRxRequestCount: 3
          mqttUnsubscribeRxCount: 1
          aliasedFromMsgVpnName: aliasedFromMsgVpnName
          keepalive: true
          dataRxByteCount: 4
          cutThroughDeniedBindFailureCount: 1
          keepaliveEffectiveTimeout: 2
          clientProfileName: clientProfileName
          topicParseErrorRxDiscardedMsgCount: 0
          rxMsgRate: 9
          maxElidingTopicCountEventRaised: true
          webMaxPayload: 5
          webTxResponseCount: 7
          dtoLocalPriority: 8
          dataTxMsgCount: 9
          mqttConnectRxCount: 3
          mqttPublishQos0TxCount: 7
          mqttPublishQos1TxCount: 3
          msgVpnName: msgVpnName
          txMsgCount: 7
          averageTxMsgRate: 2
          bindRequestCount: 4
          webTxMsgCount: 0
          mqttSubscribeRxCount: 6
          mqttPingreqRxCount: 0
          controlRxByteCount: 1
          restHttpResponseErrorRxMsgCount: 6
          rxByteCount: 8
          softwareDate: softwareDate
          restHttpRequestRxByteCount: 0
          disabledBindFailureCount: 6
          webRemainingTimeout: 0
          guaranteedDeniedBindFailureCount: 6
          eliding: true
          webRxTlsVersion: webRxTlsVersion
          tlsCipherDescription: tlsCipherDescription
          webTxTlsCipherDescription: webTxTlsCipherDescription
          mqttPubackRxCount: 6
          otherBindFailureCount: 0
          txDiscardedMsgCount: 8
          webTxTcpState: webTxTcpState
          restHttpResponseSuccessRxMsgCount: 0
          webSessionId: webSessionId
          restHttpResponseRxMsgCount: 3
          description: description
          platform: platform
          scheduledDisconnectTime: 8
          mqttPublishQos1RxCount: 3
          mqttPublishQos0RxCount: 8
          webRxEncoding: webRxEncoding
          restHttpResponseErrorTxMsgCount: 8
          tlsDowngradedToPlainText: true
          restHttpResponseTxMsgCount: 4
          rxMsgCount: 3
          mqttPubrelRxCount: 3
          mqttSubackTxCount: 0
          restHttpResponseSuccessTxMsgCount: 2
          controlTxByteCount: 6
          uptime: 3
          invalidSelectorBindFailureCount: 1
          mqttConnackErrorTxCount: 6
          mqttSubackErrorTxCount: 4
          mqttPubackTxCount: 0
          mqttPubcompTxCount: 4
          restHttpResponseRxByteCount: 4
          webRxTlsCipherDescription: webRxTlsCipherDescription
          mqttUnsubackTxCount: 4
          webTxEncoding: webTxEncoding
          user: user
          webRxTcpState: webRxTcpState
        - averageRxByteRate: 7
          restHttpResponseTxByteCount: 6
          txMsgRate: 3
          webTxTlsVersion: webTxTlsVersion
          clientAddress: clientAddress
          slowSubscriber: true
          publishTopicAclRxDiscardedMsgCount: 9
          bindSuccessCount: 7
          mqttDisconnectRxCount: 7
          webRxMsgCount: 2
          mqttPingrespTxCount: 7
          restHttpResponseTimeoutRxMsgCount: 1
          mqttConnackTxCount: 3
          tlsVersion: tlsVersion
          webTxByteCount: 4
          restHttpRequestTxMsgCount: 4
          webTxProtocol: webTxProtocol
          largeMsgEventRaised: true
          dataTxByteCount: 9
          elidingTopicCount: 6
          msgSpoolCongestionRxDiscardedMsgCount: 4
          rxByteRate: 9
          softwareVersion: softwareVersion
          alreadyBoundBindFailureCount: 2
          loginRxMsgCount: 6
          authorizationGroupName: authorizationGroupName
          clientName: clientName
          webTxRequestCount: 0
          controlRxMsgCount: 1
          noLocalDelivery: true
          aclProfileName: aclProfileName
          dtoNetworkPriority: 9
          restHttpResponseTimeoutTxMsgCount: 8
          txByteRate: 5
          webRxByteCount: 3
          restHttpRequestRxMsgCount: 7
          elidingTopicPeakCount: 3
          averageTxByteRate: 3
          mqttPublishQos2RxCount: 7
          noSubscriptionMatchRxDiscardedMsgCount: 9
          maxBindCountExceededBindFailureCount: 5
          webRxResponseCount: 8
          originalClientUsername: originalClientUsername
          rxDiscardedMsgCount: 1
          webParseErrorRxDiscardedMsgCount: 7
          controlTxMsgCount: 7
          msgSpoolRxDiscardedMsgCount: 7
          clientId: 1
          averageRxMsgRate: 9
          dataRxMsgCount: 5
          loginTxMsgCount: 6
          virtualRouter: virtualRouter
          webInactiveTimeout: 9
          txByteCount: 5
          clientUsername: clientUsername
          mqttPubrecTxCount: 5
          webRxProtocol: webRxProtocol
          restHttpRequestTxByteCount: 5
          webRxRequestCount: 3
          mqttUnsubscribeRxCount: 1
          aliasedFromMsgVpnName: aliasedFromMsgVpnName
          keepalive: true
          dataRxByteCount: 4
          cutThroughDeniedBindFailureCount: 1
          keepaliveEffectiveTimeout: 2
          clientProfileName: clientProfileName
          topicParseErrorRxDiscardedMsgCount: 0
          rxMsgRate: 9
          maxElidingTopicCountEventRaised: true
          webMaxPayload: 5
          webTxResponseCount: 7
          dtoLocalPriority: 8
          dataTxMsgCount: 9
          mqttConnectRxCount: 3
          mqttPublishQos0TxCount: 7
          mqttPublishQos1TxCount: 3
          msgVpnName: msgVpnName
          txMsgCount: 7
          averageTxMsgRate: 2
          bindRequestCount: 4
          webTxMsgCount: 0
          mqttSubscribeRxCount: 6
          mqttPingreqRxCount: 0
          controlRxByteCount: 1
          restHttpResponseErrorRxMsgCount: 6
          rxByteCount: 8
          softwareDate: softwareDate
          restHttpRequestRxByteCount: 0
          disabledBindFailureCount: 6
          webRemainingTimeout: 0
          guaranteedDeniedBindFailureCount: 6
          eliding: true
          webRxTlsVersion: webRxTlsVersion
          tlsCipherDescription: tlsCipherDescription
          webTxTlsCipherDescription: webTxTlsCipherDescription
          mqttPubackRxCount: 6
          otherBindFailureCount: 0
          txDiscardedMsgCount: 8
          webTxTcpState: webTxTcpState
          restHttpResponseSuccessRxMsgCount: 0
          webSessionId: webSessionId
          restHttpResponseRxMsgCount: 3
          description: description
          platform: platform
          scheduledDisconnectTime: 8
          mqttPublishQos1RxCount: 3
          mqttPublishQos0RxCount: 8
          webRxEncoding: webRxEncoding
          restHttpResponseErrorTxMsgCount: 8
          tlsDowngradedToPlainText: true
          restHttpResponseTxMsgCount: 4
          rxMsgCount: 3
          mqttPubrelRxCount: 3
          mqttSubackTxCount: 0
          restHttpResponseSuccessTxMsgCount: 2
          controlTxByteCount: 6
          uptime: 3
          invalidSelectorBindFailureCount: 1
          mqttConnackErrorTxCount: 6
          mqttSubackErrorTxCount: 4
          mqttPubackTxCount: 0
          mqttPubcompTxCount: 4
          restHttpResponseRxByteCount: 4
          webRxTlsCipherDescription: webRxTlsCipherDescription
          mqttUnsubackTxCount: 4
          webTxEncoding: webTxEncoding
          user: user
          webRxTcpState: webRxTcpState
        collections:
        - transactedSessions:
            count: 5
          subscriptions:
            count: 1
          txFlows:
            count: 5
          rxFlows:
            count: 6
          connections:
            count: 0
        - transactedSessions:
            count: 5
          subscriptions:
            count: 1
          txFlows:
            count: 5
          rxFlows:
            count: 6
          connections:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - txFlowsUri: txFlowsUri
          connectionsUri: connectionsUri
          transactedSessionsUri: transactedSessionsUri
          rxFlowsUri: rxFlowsUri
          subscriptionsUri: subscriptionsUri
          uri: uri
        - txFlowsUri: txFlowsUri
          connectionsUri: connectionsUri
          transactedSessionsUri: transactedSessionsUri
          rxFlowsUri: rxFlowsUri
          subscriptionsUri: subscriptionsUri
          uri: uri
    MsgVpnCollections:
      type: object
      properties:
        aclProfiles:
          $ref: '#/components/schemas/MsgVpnCollectionsAclProfiles'
        authenticationOauthProfiles:
          $ref: '#/components/schemas/MsgVpnCollectionsAuthenticationOauthProfiles'
        authenticationOauthProviders:
          $ref: '#/components/schemas/MsgVpnCollectionsAuthenticationOauthProviders'
        authorizationGroups:
          $ref: '#/components/schemas/MsgVpnCollectionsAuthorizationGroups'
        bridges:
          $ref: '#/components/schemas/MsgVpnCollectionsBridges'
        certMatchingRules:
          $ref: '#/components/schemas/MsgVpnCollectionsCertMatchingRules'
        clientProfiles:
          $ref: '#/components/schemas/MsgVpnCollectionsClientProfiles'
        clientUsernames:
          $ref: '#/components/schemas/MsgVpnCollectionsClientUsernames'
        clients:
          $ref: '#/components/schemas/MsgVpnCollectionsClients'
        configSyncRemoteNodes:
          $ref: '#/components/schemas/MsgVpnCollectionsConfigSyncRemoteNodes'
        distributedCaches:
          $ref: '#/components/schemas/MsgVpnCollectionsDistributedCaches'
        dmrBridges:
          $ref: '#/components/schemas/MsgVpnCollectionsDmrBridges'
        jndiConnectionFactories:
          $ref: '#/components/schemas/MsgVpnCollectionsJndiConnectionFactories'
        jndiQueues:
          $ref: '#/components/schemas/MsgVpnCollectionsJndiQueues'
        jndiTopics:
          $ref: '#/components/schemas/MsgVpnCollectionsJndiTopics'
        mqttRetainCaches:
          $ref: '#/components/schemas/MsgVpnCollectionsMqttRetainCaches'
        mqttSessions:
          $ref: '#/components/schemas/MsgVpnCollectionsMqttSessions'
        queueTemplates:
          $ref: '#/components/schemas/MsgVpnCollectionsQueueTemplates'
        queues:
          $ref: '#/components/schemas/MsgVpnCollectionsQueues'
        replayLogs:
          $ref: '#/components/schemas/MsgVpnCollectionsReplayLogs'
        replicatedTopics:
          $ref: '#/components/schemas/MsgVpnCollectionsReplicatedTopics'
        restDeliveryPoints:
          $ref: '#/components/schemas/MsgVpnCollectionsRestDeliveryPoints'
        telemetryProfiles:
          $ref: '#/components/schemas/MsgVpnCollectionsTelemetryProfiles'
        topicEndpointTemplates:
          $ref: '#/components/schemas/MsgVpnCollectionsTopicEndpointTemplates'
        topicEndpoints:
          $ref: '#/components/schemas/MsgVpnCollectionsTopicEndpoints'
        transactions:
          $ref: '#/components/schemas/MsgVpnCollectionsTransactions'
      example:
        telemetryProfiles:
          count: 6
        clients:
          count: 3
        clientProfiles:
          count: 7
        topicEndpoints:
          count: 9
        queueTemplates:
          count: 1
        distributedCaches:
          count: 4
        jndiTopics:
          count: 1
        clientUsernames:
          count: 9
        mqttRetainCaches:
          count: 6
        replayLogs:
          count: 5
        authorizationGroups:
          count: 5
        mqttSessions:
          count: 7
        aclProfiles:
          count: 0
        restDeliveryPoints:
          count: 9
        jndiConnectionFactories:
          count: 1
        configSyncRemoteNodes:
          count: 2
        jndiQueues:
          count: 1
        authenticationOauthProfiles:
          count: 6
        bridges:
          count: 5
        transactions:
          count: 6
        dmrBridges:
          count: 7
        certMatchingRules:
          count: 2
        queues:
          count: 4
        topicEndpointTemplates:
          count: 8
        authenticationOauthProviders:
          count: 1
        replicatedTopics:
          count: 9
    MsgVpnCollectionsAclProfiles:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the aclProfiles collection.
          format: int64
      example:
        count: 0
    MsgVpnCollectionsAuthenticationOauthProfiles:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the authenticationOauthProfiles
            collection. Available since 2.25.
          format: int64
      example:
        count: 6
    MsgVpnCollectionsAuthenticationOauthProviders:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the authenticationOauthProviders
            collection. Deprecated since 2.25. Replaced by authenticationOauthProfiles.
          format: int64
      example:
        count: 1
    MsgVpnCollectionsAuthorizationGroups:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the authorizationGroups collection.
          format: int64
      example:
        count: 5
    MsgVpnCollectionsBridges:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the bridges collection.
          format: int64
      example:
        count: 5
    MsgVpnCollectionsCertMatchingRules:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the certMatchingRules collection.
            Available since 2.27.
          format: int64
      example:
        count: 2
    MsgVpnCollectionsClientProfiles:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the clientProfiles collection.
          format: int64
      example:
        count: 7
    MsgVpnCollectionsClientUsernames:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the clientUsernames collection.
          format: int64
      example:
        count: 9
    MsgVpnCollectionsClients:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the clients collection. Available
            since 2.12.
          format: int64
      example:
        count: 3
    MsgVpnCollectionsConfigSyncRemoteNodes:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the configSyncRemoteNodes collection.
            Deprecated since 2.22. This attribute has been deprecated.
          format: int64
      example:
        count: 2
    MsgVpnCollectionsDistributedCaches:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the distributedCaches collection.
          format: int64
      example:
        count: 4
    MsgVpnCollectionsDmrBridges:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the dmrBridges collection.
          format: int64
      example:
        count: 7
    MsgVpnCollectionsJndiConnectionFactories:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the jndiConnectionFactories
            collection.
          format: int64
      example:
        count: 1
    MsgVpnCollectionsJndiQueues:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the jndiQueues collection.
          format: int64
      example:
        count: 1
    MsgVpnCollectionsJndiTopics:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the jndiTopics collection.
          format: int64
      example:
        count: 1
    MsgVpnCollectionsMqttRetainCaches:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the mqttRetainCaches collection.
          format: int64
      example:
        count: 6
    MsgVpnCollectionsMqttSessions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the mqttSessions collection.
          format: int64
      example:
        count: 7
    MsgVpnCollectionsQueueTemplates:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the queueTemplates collection.
            Available since 2.14.
          format: int64
      example:
        count: 1
    MsgVpnCollectionsQueues:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the queues collection. Available
            since 2.12.
          format: int64
      example:
        count: 4
    MsgVpnCollectionsReplayLogs:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the replayLogs collection.
          format: int64
      example:
        count: 5
    MsgVpnCollectionsReplicatedTopics:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the replicatedTopics collection.
            Available since 2.12.
          format: int64
      example:
        count: 9
    MsgVpnCollectionsRestDeliveryPoints:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the restDeliveryPoints collection.
          format: int64
      example:
        count: 9
    MsgVpnCollectionsTelemetryProfiles:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the telemetryProfiles collection.
            Available since 2.31.
          format: int64
      example:
        count: 6
    MsgVpnCollectionsTopicEndpointTemplates:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the topicEndpointTemplates collection.
            Available since 2.14.
          format: int64
      example:
        count: 8
    MsgVpnCollectionsTopicEndpoints:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the topicEndpoints collection.
            Available since 2.12.
          format: int64
      example:
        count: 9
    MsgVpnCollectionsTransactions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the transactions collection.
            Available since 2.12.
          format: int64
      example:
        count: 6
    MsgVpnConfigSyncRemoteNode:
      type: object
      properties:
        lastMsgRxTime:
          type: integer
          description: The amount of time in seconds since the last message was received
            from the config sync table of the remote Message VPN. Deprecated since
            2.22. This attribute has been deprecated.
          format: int32
        msgVpnName:
          type: string
          description: The name of the Message VPN. Deprecated since 2.22. This attribute
            has been deprecated.
        remoteNodeName:
          type: string
          description: The name of the Config Sync Remote Node. Deprecated since 2.22.
            This attribute has been deprecated.
        role:
          type: string
          description: |-
            The role of the config sync table of the remote Message VPN. The allowed values and their meaning are:

            <pre>
            "unknown" - The role is unknown.
            "primary" - Acts as the primary source of config data.
            "replica" - Acts as a replica of the primary config data.
            </pre>
             Deprecated since 2.22. This attribute has been deprecated.
        stale:
          type: boolean
          description: Indicates whether the config sync table of the remote Message
            VPN is stale. Deprecated since 2.22. This attribute has been deprecated.
        state:
          type: string
          description: |-
            The state of the config sync table of the remote Message VPN. The allowed values and their meaning are:

            <pre>
            "unknown" - The state is unknown.
            "in-sync" - The config data is synchronized between Message VPNs.
            "reconciling" - The config data is reconciling between Message VPNs.
            "blocked" - The config data is blocked from reconciling due to an error.
            "out-of-sync" - The config data is out of sync between Message VPNs.
            "down" - The state is down due to configuration.
            </pre>
             Deprecated since 2.22. This attribute has been deprecated.
        timeInState:
          type: integer
          description: The amount of time in seconds the config sync table of the
            remote Message VPN has been in the current state. Deprecated since 2.22.
            This attribute has been deprecated.
          format: int32
      example:
        timeInState: 6
        remoteNodeName: remoteNodeName
        role: role
        stale: true
        lastMsgRxTime: 0
        msgVpnName: msgVpnName
        state: state
    MsgVpnConfigSyncRemoteNodeCollections:
      type: object
    MsgVpnConfigSyncRemoteNodeLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Config Sync Remote Node object.
      example:
        uri: uri
    MsgVpnConfigSyncRemoteNodeResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodeCollections'
        data:
          $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNode'
        links:
          $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          timeInState: 6
          remoteNodeName: remoteNodeName
          role: role
          stale: true
          lastMsgRxTime: 0
          msgVpnName: msgVpnName
          state: state
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnConfigSyncRemoteNodesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodeCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNode'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - timeInState: 6
          remoteNodeName: remoteNodeName
          role: role
          stale: true
          lastMsgRxTime: 0
          msgVpnName: msgVpnName
          state: state
        - timeInState: 6
          remoteNodeName: remoteNodeName
          role: role
          stale: true
          lastMsgRxTime: 0
          msgVpnName: msgVpnName
          state: state
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnCounter:
      type: object
      properties:
        controlRxByteCount:
          type: integer
          description: "The amount of client control messages received from clients\
            \ by the Message VPN, in bytes (B). Deprecated since 2.13. This attribute\
            \ has been moved to the MsgVpn object."
          format: int64
        controlRxMsgCount:
          type: integer
          description: The number of client control messages received from clients
            by the Message VPN. Deprecated since 2.13. This attribute has been moved
            to the MsgVpn object.
          format: int64
        controlTxByteCount:
          type: integer
          description: "The amount of client control messages transmitted to clients\
            \ by the Message VPN, in bytes (B). Deprecated since 2.13. This attribute\
            \ has been moved to the MsgVpn object."
          format: int64
        controlTxMsgCount:
          type: integer
          description: The number of client control messages transmitted to clients
            by the Message VPN. Deprecated since 2.13. This attribute has been moved
            to the MsgVpn object.
          format: int64
        dataRxByteCount:
          type: integer
          description: "The amount of client data messages received from clients by\
            \ the Message VPN, in bytes (B). Deprecated since 2.13. This attribute\
            \ has been moved to the MsgVpn object."
          format: int64
        dataRxMsgCount:
          type: integer
          description: The number of client data messages received from clients by
            the Message VPN. Deprecated since 2.13. This attribute has been moved
            to the MsgVpn object.
          format: int64
        dataTxByteCount:
          type: integer
          description: "The amount of client data messages transmitted to clients\
            \ by the Message VPN, in bytes (B). Deprecated since 2.13. This attribute\
            \ has been moved to the MsgVpn object."
          format: int64
        dataTxMsgCount:
          type: integer
          description: The number of client data messages transmitted to clients by
            the Message VPN. Deprecated since 2.13. This attribute has been moved
            to the MsgVpn object.
          format: int64
        discardedRxMsgCount:
          type: integer
          description: The number of messages discarded during reception by the Message
            VPN. Deprecated since 2.13. This attribute has been moved to the MsgVpn
            object.
          format: int64
        discardedTxMsgCount:
          type: integer
          description: The number of messages discarded during transmission by the
            Message VPN. Deprecated since 2.13. This attribute has been moved to the
            MsgVpn object.
          format: int64
        loginRxMsgCount:
          type: integer
          description: The number of login request messages received by the Message
            VPN. Deprecated since 2.13. This attribute has been moved to the MsgVpn
            object.
          format: int64
        loginTxMsgCount:
          type: integer
          description: The number of login response messages transmitted by the Message
            VPN. Deprecated since 2.13. This attribute has been moved to the MsgVpn
            object.
          format: int64
        msgSpoolRxMsgCount:
          type: integer
          description: The number of guaranteed messages received by the Message VPN.
            Deprecated since 2.13. This attribute has been moved to the MsgVpn object.
          format: int64
        msgSpoolTxMsgCount:
          type: integer
          description: The number of guaranteed messages transmitted by the Message
            VPN. One message to multiple clients is counted as one message. Deprecated
            since 2.13. This attribute has been moved to the MsgVpn object.
          format: int64
        tlsRxByteCount:
          type: integer
          description: "The amount of TLS messages received by the Message VPN, in\
            \ bytes (B). Deprecated since 2.13. This attribute has been moved to the\
            \ MsgVpn object."
          format: int64
        tlsTxByteCount:
          type: integer
          description: "The amount of TLS messages transmitted by the Message VPN,\
            \ in bytes (B). Deprecated since 2.13. This attribute has been moved to\
            \ the MsgVpn object."
          format: int64
      description: The counters for the Message VPN. Deprecated since 2.13. All attributes
        in this object have been moved to the MsgVpn object.
      example:
        loginRxMsgCount: 1
        msgSpoolRxMsgCount: 7
        controlTxMsgCount: 7
        tlsRxByteCount: 0
        controlRxByteCount: 7
        tlsTxByteCount: 9
        dataRxByteCount: 5
        dataRxMsgCount: 3
        controlRxMsgCount: 3
        loginTxMsgCount: 4
        controlTxByteCount: 3
        dataTxByteCount: 4
        msgSpoolTxMsgCount: 9
        dataTxMsgCount: 0
        discardedRxMsgCount: 6
        discardedTxMsgCount: 4
    MsgVpnDistributedCache:
      type: object
      properties:
        cacheManagementUp:
          type: boolean
          description: Indicates whether managing of the distributed cache over the  message
            bus is operationally up in the Message VPN. Available since 2.28.
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        cacheVirtualRouter:
          type: string
          description: "The virtual router of the Distributed Cache. The allowed values\
            \ and their meaning are:\n\n<pre>\n\"auto\" - The Distributed Cache is\
            \ automatically assigned a virtual router at creation, depending on the\
            \ broker's active-standby role.\n</pre>\n Available since 2.28."
          enum:
          - auto
        enabled:
          type: boolean
          description: Indicates whether the Distributed Cache is enabled.
        heartbeat:
          type: integer
          description: "The heartbeat interval, in seconds, used by the Cache Instances\
            \ to monitor connectivity with the message broker."
          format: int64
        lastFailureReason:
          type: string
          description: The reason for the last distributed cache management failure.
            Available since 2.28.
        lastFailureTime:
          type: integer
          description: The timestamp of the last distributed cache management failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Available since 2.28.
          format: int32
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        msgsLost:
          type: boolean
          description: Indicates whether one or more messages were lost by any Cache
            Instance in the Distributed Cache.
        scheduledDeleteMsgDayList:
          type: string
          description: "The scheduled delete message day(s), specified as \"daily\"\
            \ or a comma-separated list of days. Days must be specified as \"Sun\"\
            , \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", or \"Sat\", with no spaces,\
            \ and in sorted order from Sunday to Saturday. The empty-string (\"\"\
            ) can also be specified, indicating no schedule is configured (\"scheduledDeleteMsgTimeList\"\
            \ must also be configured to the empty-string)."
        scheduledDeleteMsgTimeList:
          type: string
          description: "The scheduled delete message time(s), specified as \"hourly\"\
            \ or a comma-separated list of 24-hour times in the form hh:mm, or h:mm.\
            \ There must be no spaces, and times (up to 4) must be in sorted order\
            \ from 0:00 to 23:59. The empty-string (\"\") can also be specified, indicating\
            \ no schedule is configured (\"scheduledDeleteMsgDayList\" must also be\
            \ configured to the empty-string)."
      example:
        cacheManagementUp: true
        cacheName: cacheName
        heartbeat: 6
        scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
        lastFailureTime: 1
        msgVpnName: msgVpnName
        cacheVirtualRouter: auto
        scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
        enabled: true
        msgsLost: true
        lastFailureReason: lastFailureReason
    MsgVpnDistributedCacheCluster:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        deliverToOneOverrideEnabled:
          type: boolean
          description: Indicates whether deliver-to-one override is enabled for the
            Cache Cluster.
        enabled:
          type: boolean
          description: Indicates whether the Cache Cluster is enabled.
        eventDataByteRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventDataMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventMaxMemoryThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventMaxTopicsThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventRequestQueueDepthThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventRequestRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventResponseRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        globalCachingEnabled:
          type: boolean
          description: "Indicates whether global caching for the Cache Cluster is\
            \ enabled, and the Cache Instances will fetch topics from remote Home\
            \ Cache Clusters when requested, and subscribe to those topics to cache\
            \ them locally."
        globalCachingHeartbeat:
          type: integer
          description: "The heartbeat interval, in seconds, used by the Cache Instances\
            \ to monitor connectivity with the remote Home Cache Clusters."
          format: int64
        globalCachingTopicLifetime:
          type: integer
          description: "The topic lifetime, in seconds. If no client requests are\
            \ received for a given global topic over the duration of the topic lifetime,\
            \ then the Cache Instance will remove the subscription and cached messages\
            \ for that topic. A value of 0 disables aging."
          format: int64
        maxMemory:
          type: integer
          description: "The maximum memory usage, in megabytes (MB), for each Cache\
            \ Instance in the Cache Cluster."
          format: int64
        maxMsgsPerTopic:
          type: integer
          description: "The maximum number of messages per topic for each Cache Instance\
            \ in the Cache Cluster. When at the maximum, old messages are removed\
            \ as new messages arrive."
          format: int64
        maxRequestQueueDepth:
          type: integer
          description: The maximum queue depth for cache requests received by the
            Cache Cluster.
          format: int64
        maxTopicCount:
          type: integer
          description: The maximum number of topics for each Cache Instance in the
            Cache Cluster.
          format: int64
        msgLifetime:
          type: integer
          description: "The message lifetime, in seconds. If a message remains cached\
            \ for the duration of its lifetime, the Cache Instance will remove the\
            \ message. A lifetime of 0 results in the message being retained indefinitely."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        msgsLost:
          type: boolean
          description: Indicates whether one or more messages were lost by any Cache
            Instance in the Cache Cluster.
        newTopicAdvertisementEnabled:
          type: boolean
          description: Indicates whether advertising of new topics learned by the
            Cache Instances in this Cache Cluster is enabled.
      example:
        eventRequestQueueDepthThreshold: null
        eventResponseRateThreshold: null
        msgLifetime: 2
        eventDataByteRateThreshold:
          setValue: 3
          clearValue: 4
        eventDataMsgRateThreshold: null
        maxMemory: 2
        maxMsgsPerTopic: 7
        deliverToOneOverrideEnabled: true
        enabled: true
        eventRequestRateThreshold: null
        cacheName: cacheName
        globalCachingEnabled: true
        globalCachingHeartbeat: 5
        clusterName: clusterName
        newTopicAdvertisementEnabled: true
        eventMaxTopicsThreshold: null
        msgVpnName: msgVpnName
        eventMaxMemoryThreshold:
          clearPercent: 0
          setPercent: 4
        maxTopicCount: 3
        globalCachingTopicLifetime: 5
        maxRequestQueueDepth: 9
        msgsLost: true
    MsgVpnDistributedCacheClusterCollections:
      type: object
      properties:
        globalCachingHomeClusters:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterCollectionsGlobalCachingHomeClusters'
        instances:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterCollectionsInstances'
        topics:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterCollectionsTopics'
      example:
        globalCachingHomeClusters:
          count: 0
        instances:
          count: 6
        topics:
          count: 1
    MsgVpnDistributedCacheClusterCollectionsGlobalCachingHomeClusters:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the globalCachingHomeClusters
            collection.
          format: int64
      example:
        count: 0
    MsgVpnDistributedCacheClusterCollectionsInstances:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the instances collection.
          format: int64
      example:
        count: 6
    MsgVpnDistributedCacheClusterCollectionsTopics:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the topics collection.
          format: int64
      example:
        count: 1
    MsgVpnDistributedCacheClusterGlobalCachingHomeCluster:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        homeClusterName:
          type: string
          description: The name of the remote Home Cache Cluster.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        cacheName: cacheName
        clusterName: clusterName
        msgVpnName: msgVpnName
        homeClusterName: homeClusterName
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollections:
      type: object
      properties:
        topicPrefixes:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollectionsTopicPrefixes'
      example:
        topicPrefixes:
          count: 0
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollectionsTopicPrefixes:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the topicPrefixes collection.
          format: int64
      example:
        count: 0
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks:
      type: object
      properties:
        topicPrefixesUri:
          type: string
          description: The URI of this Home Cache Cluster's collection of Topic Prefix
            objects.
        uri:
          type: string
          description: The URI of this Home Cache Cluster object.
      example:
        topicPrefixesUri: topicPrefixesUri
        uri: uri
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        collections:
          topicPrefixes:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          topicPrefixesUri: topicPrefixesUri
          uri: uri
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        homeClusterName:
          type: string
          description: The name of the remote Home Cache Cluster.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        topicPrefix:
          type: string
          description: A topic prefix for global topics available from the remote
            Home Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
      example:
        cacheName: cacheName
        topicPrefix: topicPrefix
        clusterName: clusterName
        msgVpnName: msgVpnName
        homeClusterName: homeClusterName
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixCollections:
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic Prefix object.
      example:
        uri: uri
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        - cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        - cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        collections:
        - topicPrefixes:
            count: 0
        - topicPrefixes:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - topicPrefixesUri: topicPrefixesUri
          uri: uri
        - topicPrefixesUri: topicPrefixesUri
          uri: uri
    MsgVpnDistributedCacheClusterInstance:
      type: object
      properties:
        autoStartEnabled:
          type: boolean
          description: "Indicates whether auto-start for the Cache Instance is enabled,\
            \ and the Cache Instance will automatically attempt to transition from\
            \ the Stopped operational state to Up whenever it restarts or reconnects\
            \ to the message broker."
        averageDataRxBytePeakRate:
          type: integer
          description: "The peak of the one minute average of the data message rate\
            \ received by the Cache Instance, in bytes per second (B/sec). Available\
            \ since 2.13."
          format: int64
        averageDataRxByteRate:
          type: integer
          description: "The one minute average of the data message rate received by\
            \ the Cache Instance, in bytes per second (B/sec). Available since 2.13."
          format: int64
        averageDataRxMsgPeakRate:
          type: integer
          description: "The peak of the one minute average of the data message rate\
            \ received by the Cache Instance, in messages per second (msg/sec). Available\
            \ since 2.13."
          format: int64
        averageDataRxMsgRate:
          type: integer
          description: "The one minute average of the data message rate received by\
            \ the Cache Instance, in messages per second (msg/sec). Available since\
            \ 2.13."
          format: int64
        averageDataTxMsgPeakRate:
          type: integer
          description: "The peak of the one minute average of the data message rate\
            \ transmitted by the Cache Instance, in messages per second (msg/sec).\
            \ Available since 2.13."
          format: int64
        averageDataTxMsgRate:
          type: integer
          description: "The one minute average of the data message rate transmitted\
            \ by the Cache Instance, in messages per second (msg/sec). Available since\
            \ 2.13."
          format: int64
        averageRequestRxPeakRate:
          type: integer
          description: "The peak of the one minute average of the request rate received\
            \ by the Cache Instance, in requests per second (req/sec). Available since\
            \ 2.13."
          format: int64
        averageRequestRxRate:
          type: integer
          description: "The one minute average of the request rate received by the\
            \ Cache Instance, in requests per second (req/sec). Available since 2.13."
          format: int64
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        counter:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceCounter'
        dataRxBytePeakRate:
          type: integer
          description: "The data message peak rate received by the Cache Instance,\
            \ in bytes per second (B/sec). Available since 2.13."
          format: int64
        dataRxByteRate:
          type: integer
          description: "The data message rate received by the Cache Instance, in bytes\
            \ per second (B/sec). Available since 2.13."
          format: int64
        dataRxMsgPeakRate:
          type: integer
          description: "The data message peak rate received by the Cache Instance,\
            \ in messages per second (msg/sec). Available since 2.13."
          format: int64
        dataRxMsgRate:
          type: integer
          description: "The data message rate received by the Cache Instance, in messages\
            \ per second (msg/sec). Available since 2.13."
          format: int64
        dataTxMsgPeakRate:
          type: integer
          description: "The data message peak rate transmitted by the Cache Instance,\
            \ in messages per second (msg/sec). Available since 2.13."
          format: int64
        dataTxMsgRate:
          type: integer
          description: "The data message rate transmitted by the Cache Instance, in\
            \ messages per second (msg/sec). Available since 2.13."
          format: int64
        enabled:
          type: boolean
          description: Indicates whether the Cache Instance is enabled.
        instanceName:
          type: string
          description: The name of the Cache Instance.
        lastRegisteredTime:
          type: integer
          description: The timestamp of when the Cache Instance last registered with
            the message broker. This value represents the number of seconds since
            1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        lastRxHeartbeatTime:
          type: integer
          description: The timestamp of the last heartbeat message received from the
            Cache Instance. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time).
          format: int32
        lastRxSetLostMsgTime:
          type: integer
          description: The timestamp of the last request for setting the lost message
            indication received from the Cache Instance. This value represents the
            number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        lastStoppedReason:
          type: string
          description: The reason why the Cache Instance was last stopped.
        lastStoppedTime:
          type: integer
          description: The timestamp of when the Cache Instance was last stopped.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        lastTxClearLostMsgTime:
          type: integer
          description: The timestamp of the last request for clearing the lost message
            indication transmitted to the Cache Instance. This value represents the
            number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        memoryUsage:
          type: integer
          description: "The memory usage of the Cache Instance, in megabytes (MB)."
          format: int32
        msgCount:
          type: integer
          description: The number of messages cached for the Cache Instance. Available
            since 2.13.
          format: int64
        msgPeakCount:
          type: integer
          description: The number of messages cached peak for the Cache Instance.
            Available since 2.13.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        msgsLost:
          type: boolean
          description: Indicates whether one or more messages were lost by the Cache
            Instance.
        rate:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRate'
        requestQueueDepthCount:
          type: integer
          description: The received request message queue depth for the Cache Instance.
            Available since 2.13.
          format: int64
        requestQueueDepthPeakCount:
          type: integer
          description: The received request message queue depth peak for the Cache
            Instance. Available since 2.13.
          format: int64
        requestRxPeakRate:
          type: integer
          description: "The request peak rate received by the Cache Instance, in requests\
            \ per second (req/sec). Available since 2.13."
          format: int64
        requestRxRate:
          type: integer
          description: "The request rate received by the Cache Instance, in requests\
            \ per second (req/sec). Available since 2.13."
          format: int64
        state:
          type: string
          description: |
            The operational state of the Cache Instance. The allowed values and their meaning are:

            <pre>
            "invalid" - The Cache Instance state is invalid.
            "down" - The Cache Instance is operationally down.
            "stopped" - The Cache Instance has stopped processing cache requests.
            "stopped-lost-msg" - The Cache Instance has stopped due to a lost message.
            "register" - The Cache Instance is registering with the broker.
            "config-sync" - The Cache Instance is synchronizing its configuration with the broker.
            "cluster-sync" - The Cache Instance is synchronizing its messages with the Cache Cluster.
            "up" - The Cache Instance is operationally up.
            "backup" - The Cache Instance is backing up its messages to disk.
            "restore" - The Cache Instance is restoring its messages from disk.
            "not-available" - The Cache Instance state is not available.
            </pre>
        stopOnLostMsgEnabled:
          type: boolean
          description: "Indicates whether stop-on-lost-message is enabled, and the\
            \ Cache Instance will transition to the Stopped operational state upon\
            \ losing a message. When Stopped, it cannot accept or respond to cache\
            \ requests, but continues to cache messages."
        topicCount:
          type: integer
          description: The number of topics cached for the Cache Instance. Available
            since 2.13.
          format: int64
        topicPeakCount:
          type: integer
          description: The number of topics cached peak for the Cache Instance. Available
            since 2.13.
          format: int64
      example:
        averageDataRxMsgRate: 2
        requestQueueDepthPeakCount: 5
        instanceName: instanceName
        averageDataRxByteRate: 5
        averageDataTxMsgPeakRate: 7
        averageDataTxMsgRate: 9
        lastStoppedTime: 6
        dataRxBytePeakRate: 7
        averageRequestRxRate: 2
        enabled: true
        dataTxMsgRate: 9
        lastRxSetLostMsgTime: 9
        requestRxPeakRate: 3
        cacheName: cacheName
        rate:
          averageDataRxMsgRate: 6
          averageDataRxByteRate: 6
          averageDataTxMsgPeakRate: 3
          averageDataTxMsgRate: 3
          dataRxByteRate: 6
          dataRxMsgRate: 4
          dataRxBytePeakRate: 7
          averageRequestRxRate: 0
          requestRxRate: 3
          dataTxMsgRate: 7
          requestRxPeakRate: 3
          dataRxMsgPeakRate: 0
          averageDataRxBytePeakRate: 6
          averageRequestRxPeakRate: 7
          averageDataRxMsgPeakRate: 5
          dataTxMsgPeakRate: 8
        clusterName: clusterName
        lastRegisteredTime: 6
        averageDataRxBytePeakRate: 1
        topicCount: 0
        msgVpnName: msgVpnName
        state: state
        msgsLost: true
        averageDataRxMsgPeakRate: 5
        lastStoppedReason: lastStoppedReason
        memoryUsage: 6
        dataRxByteRate: 1
        requestQueueDepthCount: 7
        counter:
          requestQueueDepthPeakCount: 1
          msgPeakCount: 7
          topicCount: 1
          msgCount: 4
          requestQueueDepthCount: 1
          topicPeakCount: 6
        dataRxMsgRate: 5
        topicPeakCount: 6
        requestRxRate: 4
        lastTxClearLostMsgTime: 3
        msgPeakCount: 2
        stopOnLostMsgEnabled: true
        dataRxMsgPeakRate: 4
        lastRxHeartbeatTime: 8
        msgCount: 1
        averageRequestRxPeakRate: 3
        autoStartEnabled: true
        dataTxMsgPeakRate: 9
    MsgVpnDistributedCacheClusterInstanceCollections:
      type: object
      properties:
        remoteGlobalCachingHomeClusters:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceCollectionsRemoteGlobalCachingHomeClusters'
        remoteTopics:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceCollectionsRemoteTopics'
      example:
        remoteGlobalCachingHomeClusters:
          count: 0
        remoteTopics:
          count: 6
    MsgVpnDistributedCacheClusterInstanceCollectionsRemoteGlobalCachingHomeClusters:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the remoteGlobalCachingHomeClusters
            collection.
          format: int64
      example:
        count: 0
    MsgVpnDistributedCacheClusterInstanceCollectionsRemoteTopics:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the remoteTopics collection.
          format: int64
      example:
        count: 6
    MsgVpnDistributedCacheClusterInstanceCounter:
      type: object
      properties:
        msgCount:
          type: integer
          description: The number of messages cached for the Cache Instance. Deprecated
            since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
        msgPeakCount:
          type: integer
          description: The number of messages cached peak for the Cache Instance.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
        requestQueueDepthCount:
          type: integer
          description: The received request message queue depth for the Cache Instance.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
        requestQueueDepthPeakCount:
          type: integer
          description: The received request message queue depth peak for the Cache
            Instance. Deprecated since 2.13. This attribute has been moved to the
            MsgVpnDistributedCacheClusterInstance object.
          format: int64
        topicCount:
          type: integer
          description: The number of topics cached for the Cache Instance. Deprecated
            since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
        topicPeakCount:
          type: integer
          description: The number of topics cached peak for the Cache Instance. Deprecated
            since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
      description: The counters associated with the Cache Instance. Deprecated since
        2.13. All attributes in this object have been moved to the MsgVpnDistributedCacheClusterInstance
        object.
      example:
        requestQueueDepthPeakCount: 1
        msgPeakCount: 7
        topicCount: 1
        msgCount: 4
        requestQueueDepthCount: 1
        topicPeakCount: 6
    MsgVpnDistributedCacheClusterInstanceLinks:
      type: object
      properties:
        remoteGlobalCachingHomeClustersUri:
          type: string
          description: The URI of this Cache Instance's collection of Remote Home
            Cache Cluster objects.
        remoteTopicsUri:
          type: string
          description: The URI of this Cache Instance's collection of Remote Topic
            objects.
        uri:
          type: string
          description: The URI of this Cache Instance object.
      example:
        remoteGlobalCachingHomeClustersUri: remoteGlobalCachingHomeClustersUri
        remoteTopicsUri: remoteTopicsUri
        uri: uri
    MsgVpnDistributedCacheClusterInstanceRate:
      type: object
      properties:
        averageDataRxBytePeakRate:
          type: integer
          description: "The peak of the one minute average of the data message rate\
            \ received by the Cache Instance, in bytes per second (B/sec). Deprecated\
            \ since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance\
            \ object."
          format: int64
        averageDataRxByteRate:
          type: integer
          description: "The one minute average of the data message rate received by\
            \ the Cache Instance, in bytes per second (B/sec). Deprecated since 2.13.\
            \ This attribute has been moved to the MsgVpnDistributedCacheClusterInstance\
            \ object."
          format: int64
        averageDataRxMsgPeakRate:
          type: integer
          description: "The peak of the one minute average of the data message rate\
            \ received by the Cache Instance, in messages per second (msg/sec). Deprecated\
            \ since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance\
            \ object."
          format: int64
        averageDataRxMsgRate:
          type: integer
          description: "The one minute average of the data message rate received by\
            \ the Cache Instance, in messages per second (msg/sec). Deprecated since\
            \ 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance\
            \ object."
          format: int64
        averageDataTxMsgPeakRate:
          type: integer
          description: "The peak of the one minute average of the data message rate\
            \ transmitted by the Cache Instance, in messages per second (msg/sec).\
            \ Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance\
            \ object."
          format: int64
        averageDataTxMsgRate:
          type: integer
          description: "The one minute average of the data message rate transmitted\
            \ by the Cache Instance, in messages per second (msg/sec). Deprecated\
            \ since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance\
            \ object."
          format: int64
        averageRequestRxPeakRate:
          type: integer
          description: "The peak of the one minute average of the request rate received\
            \ by the Cache Instance, in requests per second (req/sec). Deprecated\
            \ since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance\
            \ object."
          format: int64
        averageRequestRxRate:
          type: integer
          description: "The one minute average of the request rate received by the\
            \ Cache Instance, in requests per second (req/sec). Deprecated since 2.13.\
            \ This attribute has been moved to the MsgVpnDistributedCacheClusterInstance\
            \ object."
          format: int64
        dataRxBytePeakRate:
          type: integer
          description: "The data message peak rate received by the Cache Instance,\
            \ in bytes per second (B/sec). Deprecated since 2.13. This attribute has\
            \ been moved to the MsgVpnDistributedCacheClusterInstance object."
          format: int64
        dataRxByteRate:
          type: integer
          description: "The data message rate received by the Cache Instance, in bytes\
            \ per second (B/sec). Deprecated since 2.13. This attribute has been moved\
            \ to the MsgVpnDistributedCacheClusterInstance object."
          format: int64
        dataRxMsgPeakRate:
          type: integer
          description: "The data message peak rate received by the Cache Instance,\
            \ in messages per second (msg/sec). Deprecated since 2.13. This attribute\
            \ has been moved to the MsgVpnDistributedCacheClusterInstance object."
          format: int64
        dataRxMsgRate:
          type: integer
          description: "The data message rate received by the Cache Instance, in messages\
            \ per second (msg/sec). Deprecated since 2.13. This attribute has been\
            \ moved to the MsgVpnDistributedCacheClusterInstance object."
          format: int64
        dataTxMsgPeakRate:
          type: integer
          description: "The data message peak rate transmitted by the Cache Instance,\
            \ in messages per second (msg/sec). Deprecated since 2.13. This attribute\
            \ has been moved to the MsgVpnDistributedCacheClusterInstance object."
          format: int64
        dataTxMsgRate:
          type: integer
          description: "The data message rate transmitted by the Cache Instance, in\
            \ messages per second (msg/sec). Deprecated since 2.13. This attribute\
            \ has been moved to the MsgVpnDistributedCacheClusterInstance object."
          format: int64
        requestRxPeakRate:
          type: integer
          description: "The request peak rate received by the Cache Instance, in requests\
            \ per second (req/sec). Deprecated since 2.13. This attribute has been\
            \ moved to the MsgVpnDistributedCacheClusterInstance object."
          format: int64
        requestRxRate:
          type: integer
          description: "The request rate received by the Cache Instance, in requests\
            \ per second (req/sec). Deprecated since 2.13. This attribute has been\
            \ moved to the MsgVpnDistributedCacheClusterInstance object."
          format: int64
      description: The rates associated with the Cache Instance. Deprecated since
        2.13. All attributes in this object have been moved to the MsgVpnDistributedCacheClusterInstance
        object.
      example:
        averageDataRxMsgRate: 6
        averageDataRxByteRate: 6
        averageDataTxMsgPeakRate: 3
        averageDataTxMsgRate: 3
        dataRxByteRate: 6
        dataRxMsgRate: 4
        dataRxBytePeakRate: 7
        averageRequestRxRate: 0
        requestRxRate: 3
        dataTxMsgRate: 7
        requestRxPeakRate: 3
        dataRxMsgPeakRate: 0
        averageDataRxBytePeakRate: 6
        averageRequestRxPeakRate: 7
        averageDataRxMsgPeakRate: 5
        dataTxMsgPeakRate: 8
    MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        cacheRequestForwardedCount:
          type: integer
          description: The number of cache requests forwarded to the remote Home Cache
            Cluster.
          format: int64
        cacheRequestRxCount:
          type: integer
          description: The number of cache requests received from the remote Home
            Cache Cluster.
          format: int64
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        heartbeatRxCount:
          type: integer
          description: The number of heartbeat messages received from the remote Home
            Cache Cluster.
          format: int64
        heartbeatUp:
          type: boolean
          description: Indicates whether the operational state of the heartbeat with
            the remote Home Cache Cluster is up.
        homeClusterName:
          type: string
          description: The name of the remote Home Cache Cluster.
        instanceName:
          type: string
          description: The name of the Cache Instance.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        cacheName: cacheName
        heartbeatRxCount: 1
        cacheRequestForwardedCount: 0
        instanceName: instanceName
        heartbeatUp: true
        clusterName: clusterName
        msgVpnName: msgVpnName
        cacheRequestRxCount: 6
        homeClusterName: homeClusterName
    MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterCollections:
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Remote Home Cache Cluster object.
      example:
        uri: uri
    MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          heartbeatRxCount: 1
          cacheRequestForwardedCount: 0
          instanceName: instanceName
          heartbeatUp: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          cacheRequestRxCount: 6
          homeClusterName: homeClusterName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClustersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          heartbeatRxCount: 1
          cacheRequestForwardedCount: 0
          instanceName: instanceName
          heartbeatUp: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          cacheRequestRxCount: 6
          homeClusterName: homeClusterName
        - cacheName: cacheName
          heartbeatRxCount: 1
          cacheRequestForwardedCount: 0
          instanceName: instanceName
          heartbeatUp: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          cacheRequestRxCount: 6
          homeClusterName: homeClusterName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnDistributedCacheClusterInstanceRemoteTopic:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        globalTopic:
          type: boolean
          description: Indicates whether the type of the remote Topic is global.
        homeClusterName:
          type: string
          description: The name of the remote Home Cache Cluster.
        instanceName:
          type: string
          description: The name of the Cache Instance.
        msgCount:
          type: integer
          description: The number of messages cached for the remote Topic.
          format: int32
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        suspect:
          type: boolean
          description: Indicates whether the remote Topic is suspect due to the remote
            Home Cache Cluster being in the lost message state.
        topic:
          type: string
          description: The value of the remote Topic.
      example:
        cacheName: cacheName
        instanceName: instanceName
        globalTopic: true
        clusterName: clusterName
        topic: topic
        msgCount: 0
        msgVpnName: msgVpnName
        suspect: true
        homeClusterName: homeClusterName
    MsgVpnDistributedCacheClusterInstanceRemoteTopicCollections:
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Remote Topic object.
      example:
        uri: uri
    MsgVpnDistributedCacheClusterInstanceRemoteTopicResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopic'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          instanceName: instanceName
          globalTopic: true
          clusterName: clusterName
          topic: topic
          msgCount: 0
          msgVpnName: msgVpnName
          suspect: true
          homeClusterName: homeClusterName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnDistributedCacheClusterInstanceRemoteTopicsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopic'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          instanceName: instanceName
          globalTopic: true
          clusterName: clusterName
          topic: topic
          msgCount: 0
          msgVpnName: msgVpnName
          suspect: true
          homeClusterName: homeClusterName
        - cacheName: cacheName
          instanceName: instanceName
          globalTopic: true
          clusterName: clusterName
          topic: topic
          msgCount: 0
          msgVpnName: msgVpnName
          suspect: true
          homeClusterName: homeClusterName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnDistributedCacheClusterInstanceResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          averageDataRxMsgRate: 2
          requestQueueDepthPeakCount: 5
          instanceName: instanceName
          averageDataRxByteRate: 5
          averageDataTxMsgPeakRate: 7
          averageDataTxMsgRate: 9
          lastStoppedTime: 6
          dataRxBytePeakRate: 7
          averageRequestRxRate: 2
          enabled: true
          dataTxMsgRate: 9
          lastRxSetLostMsgTime: 9
          requestRxPeakRate: 3
          cacheName: cacheName
          rate:
            averageDataRxMsgRate: 6
            averageDataRxByteRate: 6
            averageDataTxMsgPeakRate: 3
            averageDataTxMsgRate: 3
            dataRxByteRate: 6
            dataRxMsgRate: 4
            dataRxBytePeakRate: 7
            averageRequestRxRate: 0
            requestRxRate: 3
            dataTxMsgRate: 7
            requestRxPeakRate: 3
            dataRxMsgPeakRate: 0
            averageDataRxBytePeakRate: 6
            averageRequestRxPeakRate: 7
            averageDataRxMsgPeakRate: 5
            dataTxMsgPeakRate: 8
          clusterName: clusterName
          lastRegisteredTime: 6
          averageDataRxBytePeakRate: 1
          topicCount: 0
          msgVpnName: msgVpnName
          state: state
          msgsLost: true
          averageDataRxMsgPeakRate: 5
          lastStoppedReason: lastStoppedReason
          memoryUsage: 6
          dataRxByteRate: 1
          requestQueueDepthCount: 7
          counter:
            requestQueueDepthPeakCount: 1
            msgPeakCount: 7
            topicCount: 1
            msgCount: 4
            requestQueueDepthCount: 1
            topicPeakCount: 6
          dataRxMsgRate: 5
          topicPeakCount: 6
          requestRxRate: 4
          lastTxClearLostMsgTime: 3
          msgPeakCount: 2
          stopOnLostMsgEnabled: true
          dataRxMsgPeakRate: 4
          lastRxHeartbeatTime: 8
          msgCount: 1
          averageRequestRxPeakRate: 3
          autoStartEnabled: true
          dataTxMsgPeakRate: 9
        collections:
          remoteGlobalCachingHomeClusters:
            count: 0
          remoteTopics:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          remoteGlobalCachingHomeClustersUri: remoteGlobalCachingHomeClustersUri
          remoteTopicsUri: remoteTopicsUri
          uri: uri
    MsgVpnDistributedCacheClusterInstancesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - averageDataRxMsgRate: 2
          requestQueueDepthPeakCount: 5
          instanceName: instanceName
          averageDataRxByteRate: 5
          averageDataTxMsgPeakRate: 7
          averageDataTxMsgRate: 9
          lastStoppedTime: 6
          dataRxBytePeakRate: 7
          averageRequestRxRate: 2
          enabled: true
          dataTxMsgRate: 9
          lastRxSetLostMsgTime: 9
          requestRxPeakRate: 3
          cacheName: cacheName
          rate:
            averageDataRxMsgRate: 6
            averageDataRxByteRate: 6
            averageDataTxMsgPeakRate: 3
            averageDataTxMsgRate: 3
            dataRxByteRate: 6
            dataRxMsgRate: 4
            dataRxBytePeakRate: 7
            averageRequestRxRate: 0
            requestRxRate: 3
            dataTxMsgRate: 7
            requestRxPeakRate: 3
            dataRxMsgPeakRate: 0
            averageDataRxBytePeakRate: 6
            averageRequestRxPeakRate: 7
            averageDataRxMsgPeakRate: 5
            dataTxMsgPeakRate: 8
          clusterName: clusterName
          lastRegisteredTime: 6
          averageDataRxBytePeakRate: 1
          topicCount: 0
          msgVpnName: msgVpnName
          state: state
          msgsLost: true
          averageDataRxMsgPeakRate: 5
          lastStoppedReason: lastStoppedReason
          memoryUsage: 6
          dataRxByteRate: 1
          requestQueueDepthCount: 7
          counter:
            requestQueueDepthPeakCount: 1
            msgPeakCount: 7
            topicCount: 1
            msgCount: 4
            requestQueueDepthCount: 1
            topicPeakCount: 6
          dataRxMsgRate: 5
          topicPeakCount: 6
          requestRxRate: 4
          lastTxClearLostMsgTime: 3
          msgPeakCount: 2
          stopOnLostMsgEnabled: true
          dataRxMsgPeakRate: 4
          lastRxHeartbeatTime: 8
          msgCount: 1
          averageRequestRxPeakRate: 3
          autoStartEnabled: true
          dataTxMsgPeakRate: 9
        - averageDataRxMsgRate: 2
          requestQueueDepthPeakCount: 5
          instanceName: instanceName
          averageDataRxByteRate: 5
          averageDataTxMsgPeakRate: 7
          averageDataTxMsgRate: 9
          lastStoppedTime: 6
          dataRxBytePeakRate: 7
          averageRequestRxRate: 2
          enabled: true
          dataTxMsgRate: 9
          lastRxSetLostMsgTime: 9
          requestRxPeakRate: 3
          cacheName: cacheName
          rate:
            averageDataRxMsgRate: 6
            averageDataRxByteRate: 6
            averageDataTxMsgPeakRate: 3
            averageDataTxMsgRate: 3
            dataRxByteRate: 6
            dataRxMsgRate: 4
            dataRxBytePeakRate: 7
            averageRequestRxRate: 0
            requestRxRate: 3
            dataTxMsgRate: 7
            requestRxPeakRate: 3
            dataRxMsgPeakRate: 0
            averageDataRxBytePeakRate: 6
            averageRequestRxPeakRate: 7
            averageDataRxMsgPeakRate: 5
            dataTxMsgPeakRate: 8
          clusterName: clusterName
          lastRegisteredTime: 6
          averageDataRxBytePeakRate: 1
          topicCount: 0
          msgVpnName: msgVpnName
          state: state
          msgsLost: true
          averageDataRxMsgPeakRate: 5
          lastStoppedReason: lastStoppedReason
          memoryUsage: 6
          dataRxByteRate: 1
          requestQueueDepthCount: 7
          counter:
            requestQueueDepthPeakCount: 1
            msgPeakCount: 7
            topicCount: 1
            msgCount: 4
            requestQueueDepthCount: 1
            topicPeakCount: 6
          dataRxMsgRate: 5
          topicPeakCount: 6
          requestRxRate: 4
          lastTxClearLostMsgTime: 3
          msgPeakCount: 2
          stopOnLostMsgEnabled: true
          dataRxMsgPeakRate: 4
          lastRxHeartbeatTime: 8
          msgCount: 1
          averageRequestRxPeakRate: 3
          autoStartEnabled: true
          dataTxMsgPeakRate: 9
        collections:
        - remoteGlobalCachingHomeClusters:
            count: 0
          remoteTopics:
            count: 6
        - remoteGlobalCachingHomeClusters:
            count: 0
          remoteTopics:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - remoteGlobalCachingHomeClustersUri: remoteGlobalCachingHomeClustersUri
          remoteTopicsUri: remoteTopicsUri
          uri: uri
        - remoteGlobalCachingHomeClustersUri: remoteGlobalCachingHomeClustersUri
          remoteTopicsUri: remoteTopicsUri
          uri: uri
    MsgVpnDistributedCacheClusterLinks:
      type: object
      properties:
        globalCachingHomeClustersUri:
          type: string
          description: The URI of this Cache Cluster's collection of Home Cache Cluster
            objects.
        instancesUri:
          type: string
          description: The URI of this Cache Cluster's collection of Cache Instance
            objects.
        topicsUri:
          type: string
          description: The URI of this Cache Cluster's collection of Topic objects.
        uri:
          type: string
          description: The URI of this Cache Cluster object.
      example:
        globalCachingHomeClustersUri: globalCachingHomeClustersUri
        instancesUri: instancesUri
        topicsUri: topicsUri
        uri: uri
    MsgVpnDistributedCacheClusterResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          eventRequestQueueDepthThreshold: null
          eventResponseRateThreshold: null
          msgLifetime: 2
          eventDataByteRateThreshold:
            setValue: 3
            clearValue: 4
          eventDataMsgRateThreshold: null
          maxMemory: 2
          maxMsgsPerTopic: 7
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold: null
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 5
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold: null
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 0
            setPercent: 4
          maxTopicCount: 3
          globalCachingTopicLifetime: 5
          maxRequestQueueDepth: 9
          msgsLost: true
        collections:
          globalCachingHomeClusters:
            count: 0
          instances:
            count: 6
          topics:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
    MsgVpnDistributedCacheClusterTopic:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        topic:
          type: string
          description: The value of the Topic in the form a/b/c.
      example:
        cacheName: cacheName
        clusterName: clusterName
        topic: topic
        msgVpnName: msgVpnName
    MsgVpnDistributedCacheClusterTopicCollections:
      type: object
    MsgVpnDistributedCacheClusterTopicLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic object.
      example:
        uri: uri
    MsgVpnDistributedCacheClusterTopicResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopic'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnDistributedCacheClusterTopicsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopic'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        - cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnDistributedCacheClustersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - eventRequestQueueDepthThreshold: null
          eventResponseRateThreshold: null
          msgLifetime: 2
          eventDataByteRateThreshold:
            setValue: 3
            clearValue: 4
          eventDataMsgRateThreshold: null
          maxMemory: 2
          maxMsgsPerTopic: 7
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold: null
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 5
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold: null
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 0
            setPercent: 4
          maxTopicCount: 3
          globalCachingTopicLifetime: 5
          maxRequestQueueDepth: 9
          msgsLost: true
        - eventRequestQueueDepthThreshold: null
          eventResponseRateThreshold: null
          msgLifetime: 2
          eventDataByteRateThreshold:
            setValue: 3
            clearValue: 4
          eventDataMsgRateThreshold: null
          maxMemory: 2
          maxMsgsPerTopic: 7
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold: null
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 5
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold: null
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 0
            setPercent: 4
          maxTopicCount: 3
          globalCachingTopicLifetime: 5
          maxRequestQueueDepth: 9
          msgsLost: true
        collections:
        - globalCachingHomeClusters:
            count: 0
          instances:
            count: 6
          topics:
            count: 1
        - globalCachingHomeClusters:
            count: 0
          instances:
            count: 6
          topics:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
        - globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
    MsgVpnDistributedCacheCollections:
      type: object
      properties:
        clusters:
          $ref: '#/components/schemas/MsgVpnDistributedCacheCollectionsClusters'
      example:
        clusters:
          count: 0
    MsgVpnDistributedCacheCollectionsClusters:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the clusters collection.
          format: int64
      example:
        count: 0
    MsgVpnDistributedCacheLinks:
      type: object
      properties:
        clustersUri:
          type: string
          description: The URI of this Distributed Cache's collection of Cache Cluster
            objects.
        uri:
          type: string
          description: The URI of this Distributed Cache object.
      example:
        clustersUri: clustersUri
        uri: uri
    MsgVpnDistributedCacheResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCache'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheManagementUp: true
          cacheName: cacheName
          heartbeat: 6
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          lastFailureTime: 1
          msgVpnName: msgVpnName
          cacheVirtualRouter: auto
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
          msgsLost: true
          lastFailureReason: lastFailureReason
        collections:
          clusters:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          clustersUri: clustersUri
          uri: uri
    MsgVpnDistributedCachesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCache'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheManagementUp: true
          cacheName: cacheName
          heartbeat: 6
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          lastFailureTime: 1
          msgVpnName: msgVpnName
          cacheVirtualRouter: auto
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
          msgsLost: true
          lastFailureReason: lastFailureReason
        - cacheManagementUp: true
          cacheName: cacheName
          heartbeat: 6
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          lastFailureTime: 1
          msgVpnName: msgVpnName
          cacheVirtualRouter: auto
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
          msgsLost: true
          lastFailureReason: lastFailureReason
        collections:
        - clusters:
            count: 0
        - clusters:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - clustersUri: clustersUri
          uri: uri
        - clustersUri: clustersUri
          uri: uri
    MsgVpnDmrBridge:
      type: object
      properties:
        failureReason:
          type: string
          description: The last failure reason for the DMR Bridge.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        remoteMsgVpnName:
          type: string
          description: The remote Message VPN of the DMR Bridge.
        remoteNodeName:
          type: string
          description: The name of the node at the remote end of the DMR Bridge.
        up:
          type: boolean
          description: Indicates whether the operational state of the DMR Bridge is
            up.
        uptime:
          type: integer
          description: The amount of time in seconds since the DMR Bridge was up.
          format: int64
      example:
        remoteMsgVpnName: remoteMsgVpnName
        remoteNodeName: remoteNodeName
        failureReason: failureReason
        msgVpnName: msgVpnName
        up: true
        uptime: 0
    MsgVpnDmrBridgeCollections:
      type: object
    MsgVpnDmrBridgeLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this DMR Bridge object.
      example:
        uri: uri
    MsgVpnDmrBridgeResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDmrBridgeCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDmrBridge'
        links:
          $ref: '#/components/schemas/MsgVpnDmrBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          failureReason: failureReason
          msgVpnName: msgVpnName
          up: true
          uptime: 0
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnDmrBridgesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDmrBridgeCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDmrBridge'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDmrBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          failureReason: failureReason
          msgVpnName: msgVpnName
          up: true
          uptime: 0
        - remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          failureReason: failureReason
          msgVpnName: msgVpnName
          up: true
          uptime: 0
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnJndiConnectionFactoriesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        - messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnJndiConnectionFactory:
      type: object
      properties:
        allowDuplicateClientIdEnabled:
          type: boolean
          description: Indicates whether new JMS connections can use the same Client
            identifier (ID) as an existing connection.
        clientDescription:
          type: string
          description: The description of the Client.
        clientId:
          type: string
          description: "The Client identifier (ID). If not specified, a unique value\
            \ for it will be generated."
        connectionFactoryName:
          type: string
          description: The name of the JMS Connection Factory.
        dtoReceiveOverrideEnabled:
          type: boolean
          description: "Indicates whether overriding by the Subscriber (Consumer)\
            \ of the deliver-to-one (DTO) property on messages is enabled. When enabled,\
            \ the Subscriber can receive all DTO tagged messages."
        dtoReceiveSubscriberLocalPriority:
          type: integer
          description: The priority for receiving deliver-to-one (DTO) messages by
            the Subscriber (Consumer) if the messages are published on the local broker
            that the Subscriber is directly connected to.
          format: int32
        dtoReceiveSubscriberNetworkPriority:
          type: integer
          description: The priority for receiving deliver-to-one (DTO) messages by
            the Subscriber (Consumer) if the messages are published on a remote broker.
          format: int32
        dtoSendEnabled:
          type: boolean
          description: Indicates whether the deliver-to-one (DTO) property is enabled
            on messages sent by the Publisher (Producer).
        dynamicEndpointCreateDurableEnabled:
          type: boolean
          description: Indicates whether a durable endpoint will be dynamically created
            on the broker when the client calls "Session.createDurableSubscriber()"
            or "Session.createQueue()". The created endpoint respects the message
            time-to-live (TTL) according to the "dynamicEndpointRespectTtlEnabled"
            property.
        dynamicEndpointRespectTtlEnabled:
          type: boolean
          description: Indicates whether dynamically created durable and non-durable
            endpoints respect the message time-to-live (TTL) property.
        guaranteedReceiveAckTimeout:
          type: integer
          description: "The timeout for sending the acknowledgement (ACK) for guaranteed\
            \ messages received by the Subscriber (Consumer), in milliseconds."
          format: int32
        guaranteedReceiveReconnectRetryCount:
          type: integer
          description: The maximum number of attempts to reconnect to the host or
            list of hosts after the guaranteed  messaging connection has been lost.
            The value "-1" means to retry forever. Available since 2.14.
          format: int32
        guaranteedReceiveReconnectRetryWait:
          type: integer
          description: "The amount of time to wait before making another attempt to\
            \ connect or reconnect to the host after the guaranteed messaging connection\
            \ has been lost, in milliseconds. Available since 2.14."
          format: int32
        guaranteedReceiveWindowSize:
          type: integer
          description: "The size of the window for guaranteed messages received by\
            \ the Subscriber (Consumer), in messages."
          format: int32
        guaranteedReceiveWindowSizeAckThreshold:
          type: integer
          description: The threshold for sending the acknowledgement (ACK) for guaranteed
            messages received by the Subscriber (Consumer) as a percentage of `guaranteedReceiveWindowSize`.
          format: int32
        guaranteedSendAckTimeout:
          type: integer
          description: "The timeout for receiving the acknowledgement (ACK) for guaranteed\
            \ messages sent by the Publisher (Producer), in milliseconds."
          format: int32
        guaranteedSendWindowSize:
          type: integer
          description: "The size of the window for non-persistent guaranteed messages\
            \ sent by the Publisher (Producer), in messages. For persistent messages\
            \ the window size is fixed at 1."
          format: int32
        messagingDefaultDeliveryMode:
          type: string
          description: |
            The default delivery mode for messages sent by the Publisher (Producer). The allowed values and their meaning are:

            <pre>
            "persistent" - The broker spools messages (persists in the Message Spool) as part of the send operation.
            "non-persistent" - The broker does not spool messages (does not persist in the Message Spool) as part of the send operation.
            </pre>
          enum:
          - persistent
          - non-persistent
        messagingDefaultDmqEligibleEnabled:
          type: boolean
          description: Indicates whether messages sent by the Publisher (Producer)
            are Dead Message Queue (DMQ) eligible by default.
        messagingDefaultElidingEligibleEnabled:
          type: boolean
          description: Indicates whether messages sent by the Publisher (Producer)
            are Eliding eligible by default.
        messagingJmsxUserIdEnabled:
          type: boolean
          description: Indicates whether to include (add or replace) the JMSXUserID
            property in messages sent by the Publisher (Producer).
        messagingTextInXmlPayloadEnabled:
          type: boolean
          description: "Indicates whether encoding of JMS text messages in Publisher\
            \ (Producer) messages is as XML payload. When disabled, JMS text messages\
            \ are encoded as a binary attachment."
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        transportCompressionLevel:
          type: integer
          description: "The ZLIB compression level for the connection to the broker.\
            \ The value \"0\" means no compression, and the value \"-1\" means the\
            \ compression level is specified in the JNDI Properties file."
          format: int32
        transportConnectRetryCount:
          type: integer
          description: "The maximum number of retry attempts to establish an initial\
            \ connection to the host or list of hosts. The value \"0\" means a single\
            \ attempt (no retries), and the value \"-1\" means to retry forever."
          format: int32
        transportConnectRetryPerHostCount:
          type: integer
          description: "The maximum number of retry attempts to establish an initial\
            \ connection to each host on the list of hosts. The value \"0\" means\
            \ a single attempt (no retries), and the value \"-1\" means to retry forever."
          format: int32
        transportConnectTimeout:
          type: integer
          description: "The timeout for establishing an initial connection to the\
            \ broker, in milliseconds."
          format: int32
        transportDirectTransportEnabled:
          type: boolean
          description: "Indicates whether usage of the Direct Transport mode for sending\
            \ non-persistent messages is enabled. When disabled, the Guaranteed Transport\
            \ mode is used."
        transportKeepaliveCount:
          type: integer
          description: The maximum number of consecutive application-level keepalive
            messages sent without the broker response before the connection to the
            broker is closed.
          format: int32
        transportKeepaliveEnabled:
          type: boolean
          description: Indicates whether application-level keepalive messages are
            used to maintain a connection with the Router.
        transportKeepaliveInterval:
          type: integer
          description: "The interval between application-level keepalive messages,\
            \ in milliseconds."
          format: int32
        transportMsgCallbackOnIoThreadEnabled:
          type: boolean
          description: Indicates whether delivery of asynchronous messages is done
            directly from the I/O thread.
        transportOptimizeDirectEnabled:
          type: boolean
          description: "Indicates whether optimization for the Direct Transport delivery\
            \ mode is enabled. If enabled, the client application is limited to one\
            \ Publisher (Producer) and one non-durable Subscriber (Consumer)."
        transportPort:
          type: integer
          description: The connection port number on the broker for SMF clients. The
            value "-1" means the port is specified in the JNDI Properties file.
          format: int32
        transportReadTimeout:
          type: integer
          description: "The timeout for reading a reply from the broker, in milliseconds."
          format: int32
        transportReceiveBufferSize:
          type: integer
          description: "The size of the receive socket buffer, in bytes. It corresponds\
            \ to the SO_RCVBUF socket option."
          format: int32
        transportReconnectRetryCount:
          type: integer
          description: The maximum number of attempts to reconnect to the host or
            list of hosts after the connection has been lost. The value "-1" means
            to retry forever.
          format: int32
        transportReconnectRetryWait:
          type: integer
          description: "The amount of time before making another attempt to connect\
            \ or reconnect to the host after the connection has been lost, in milliseconds."
          format: int32
        transportSendBufferSize:
          type: integer
          description: "The size of the send socket buffer, in bytes. It corresponds\
            \ to the SO_SNDBUF socket option."
          format: int32
        transportTcpNoDelayEnabled:
          type: boolean
          description: "Indicates whether the TCP_NODELAY option is enabled, which\
            \ disables Nagle's algorithm for TCP/IP congestion control (RFC 896)."
        xaEnabled:
          type: boolean
          description: "Indicates whether this is an XA Connection Factory. When enabled,\
            \ the Connection Factory can be cast to \"XAConnectionFactory\", \"XAQueueConnectionFactory\"\
            \ or \"XATopicConnectionFactory\"."
      example:
        messagingDefaultDeliveryMode: persistent
        connectionFactoryName: connectionFactoryName
        guaranteedReceiveAckTimeout: 1
        transportReadTimeout: 7
        transportReconnectRetryCount: 4
        dtoReceiveSubscriberNetworkPriority: 6
        messagingDefaultElidingEligibleEnabled: true
        transportDirectTransportEnabled: true
        transportReconnectRetryWait: 5
        clientDescription: clientDescription
        guaranteedReceiveWindowSize: 2
        dtoReceiveSubscriberLocalPriority: 0
        transportCompressionLevel: 2
        transportConnectRetryPerHostCount: 7
        guaranteedSendAckTimeout: 9
        transportReceiveBufferSize: 1
        msgVpnName: msgVpnName
        transportKeepaliveEnabled: true
        allowDuplicateClientIdEnabled: true
        transportPort: 6
        guaranteedReceiveReconnectRetryCount: 5
        transportConnectRetryCount: 4
        transportConnectTimeout: 1
        dynamicEndpointCreateDurableEnabled: true
        clientId: clientId
        messagingJmsxUserIdEnabled: true
        guaranteedReceiveWindowSizeAckThreshold: 7
        dynamicEndpointRespectTtlEnabled: true
        messagingTextInXmlPayloadEnabled: true
        guaranteedSendWindowSize: 3
        transportKeepaliveInterval: 1
        transportOptimizeDirectEnabled: true
        transportTcpNoDelayEnabled: true
        guaranteedReceiveReconnectRetryWait: 5
        transportSendBufferSize: 9
        transportKeepaliveCount: 1
        xaEnabled: true
        dtoSendEnabled: true
        messagingDefaultDmqEligibleEnabled: true
        dtoReceiveOverrideEnabled: true
        transportMsgCallbackOnIoThreadEnabled: true
    MsgVpnJndiConnectionFactoryCollections:
      type: object
    MsgVpnJndiConnectionFactoryLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this JNDI Connection Factory object.
      example:
        uri: uri
    MsgVpnJndiConnectionFactoryResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryCollections'
        data:
          $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        links:
          $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnJndiQueue:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        physicalName:
          type: string
          description: The physical name of the JMS Queue.
        queueName:
          type: string
          description: The JNDI name of the JMS Queue.
      example:
        queueName: queueName
        physicalName: physicalName
        msgVpnName: msgVpnName
    MsgVpnJndiQueueCollections:
      type: object
    MsgVpnJndiQueueLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this JNDI Queue object.
      example:
        uri: uri
    MsgVpnJndiQueueResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnJndiQueueCollections'
        data:
          $ref: '#/components/schemas/MsgVpnJndiQueue'
        links:
          $ref: '#/components/schemas/MsgVpnJndiQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnJndiQueuesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiQueueCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiQueue'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        - queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnJndiTopic:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        physicalName:
          type: string
          description: The physical name of the JMS Topic.
        topicName:
          type: string
          description: The JNDI name of the JMS Topic.
      example:
        physicalName: physicalName
        topicName: topicName
        msgVpnName: msgVpnName
    MsgVpnJndiTopicCollections:
      type: object
    MsgVpnJndiTopicLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this JNDI Topic object.
      example:
        uri: uri
    MsgVpnJndiTopicResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnJndiTopicCollections'
        data:
          $ref: '#/components/schemas/MsgVpnJndiTopic'
        links:
          $ref: '#/components/schemas/MsgVpnJndiTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnJndiTopicsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiTopicCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiTopic'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        - physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnLinks:
      type: object
      properties:
        aclProfilesUri:
          type: string
          description: The URI of this Message VPN's collection of ACL Profile objects.
        authenticationOauthProfilesUri:
          type: string
          description: The URI of this Message VPN's collection of OAuth Profile objects.
            Available since 2.25.
        authenticationOauthProvidersUri:
          type: string
          description: The URI of this Message VPN's collection of OAuth Provider
            objects. Deprecated since 2.25. Replaced by authenticationOauthProfiles.
        authorizationGroupsUri:
          type: string
          description: The URI of this Message VPN's collection of Authorization Group
            objects.
        bridgesUri:
          type: string
          description: The URI of this Message VPN's collection of Bridge objects.
        certMatchingRulesUri:
          type: string
          description: The URI of this Message VPN's collection of Certificate Matching
            Rule objects. Available since 2.27.
        clientProfilesUri:
          type: string
          description: The URI of this Message VPN's collection of Client Profile
            objects.
        clientUsernamesUri:
          type: string
          description: The URI of this Message VPN's collection of Client Username
            objects.
        clientsUri:
          type: string
          description: The URI of this Message VPN's collection of Client objects.
            Available since 2.12.
        configSyncRemoteNodesUri:
          type: string
          description: The URI of this Message VPN's collection of Config Sync Remote
            Node objects. Deprecated since 2.22. This attribute has been deprecated.
        distributedCachesUri:
          type: string
          description: The URI of this Message VPN's collection of Distributed Cache
            objects.
        dmrBridgesUri:
          type: string
          description: The URI of this Message VPN's collection of DMR Bridge objects.
        jndiConnectionFactoriesUri:
          type: string
          description: The URI of this Message VPN's collection of JNDI Connection
            Factory objects.
        jndiQueuesUri:
          type: string
          description: The URI of this Message VPN's collection of JNDI Queue objects.
        jndiTopicsUri:
          type: string
          description: The URI of this Message VPN's collection of JNDI Topic objects.
        mqttRetainCachesUri:
          type: string
          description: The URI of this Message VPN's collection of MQTT Retain Cache
            objects.
        mqttSessionsUri:
          type: string
          description: The URI of this Message VPN's collection of MQTT Session objects.
        queueTemplatesUri:
          type: string
          description: The URI of this Message VPN's collection of Queue Template
            objects. Available since 2.14.
        queuesUri:
          type: string
          description: The URI of this Message VPN's collection of Queue objects.
            Available since 2.12.
        replayLogsUri:
          type: string
          description: The URI of this Message VPN's collection of Replay Log objects.
        replicatedTopicsUri:
          type: string
          description: The URI of this Message VPN's collection of Replicated Topic
            objects. Available since 2.12.
        restDeliveryPointsUri:
          type: string
          description: The URI of this Message VPN's collection of REST Delivery Point
            objects.
        telemetryProfilesUri:
          type: string
          description: The URI of this Message VPN's collection of Telemetry Profile
            objects. Available since 2.31.
        topicEndpointTemplatesUri:
          type: string
          description: The URI of this Message VPN's collection of Topic Endpoint
            Template objects. Available since 2.14.
        topicEndpointsUri:
          type: string
          description: The URI of this Message VPN's collection of Topic Endpoint
            objects. Available since 2.12.
        transactionsUri:
          type: string
          description: The URI of this Message VPN's collection of Replicated Local
            Transaction or XA Transaction objects. Available since 2.12.
        uri:
          type: string
          description: The URI of this Message VPN object.
      example:
        telemetryProfilesUri: telemetryProfilesUri
        authenticationOauthProvidersUri: authenticationOauthProvidersUri
        transactionsUri: transactionsUri
        authenticationOauthProfilesUri: authenticationOauthProfilesUri
        clientProfilesUri: clientProfilesUri
        jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
        configSyncRemoteNodesUri: configSyncRemoteNodesUri
        clientsUri: clientsUri
        replicatedTopicsUri: replicatedTopicsUri
        topicEndpointTemplatesUri: topicEndpointTemplatesUri
        aclProfilesUri: aclProfilesUri
        dmrBridgesUri: dmrBridgesUri
        queueTemplatesUri: queueTemplatesUri
        queuesUri: queuesUri
        restDeliveryPointsUri: restDeliveryPointsUri
        distributedCachesUri: distributedCachesUri
        mqttSessionsUri: mqttSessionsUri
        jndiQueuesUri: jndiQueuesUri
        topicEndpointsUri: topicEndpointsUri
        mqttRetainCachesUri: mqttRetainCachesUri
        clientUsernamesUri: clientUsernamesUri
        bridgesUri: bridgesUri
        uri: uri
        jndiTopicsUri: jndiTopicsUri
        replayLogsUri: replayLogsUri
        certMatchingRulesUri: certMatchingRulesUri
        authorizationGroupsUri: authorizationGroupsUri
    MsgVpnMqttRetainCache:
      type: object
      properties:
        backupCacheInstance:
          type: string
          description: The name of the backup Cache Instance associated with this
            MQTT Retain Cache.
        backupFailureReason:
          type: string
          description: "The reason why the backup cache associated with this MQTT\
            \ Retain Cache is operationally down, if any."
        backupUp:
          type: boolean
          description: Indicates whether the backup cache associated with this MQTT
            Retain Cache is operationally up.
        backupUptime:
          type: integer
          description: The number of seconds that the backup cache associated with
            this MQTT Retain Cache has been operationally up.
          format: int32
        cacheCluster:
          type: string
          description: The name of the Cache Cluster associated with this MQTT Retain
            Cache.
        cacheName:
          type: string
          description: The name of the MQTT Retain Cache.
        distributedCache:
          type: string
          description: The name of the Distributed Cache associated with this MQTT
            Retain Cache.
        enabled:
          type: boolean
          description: "Indicates whether this MQTT Retain Cache is enabled. When\
            \ the cache is disabled, neither retain messages nor retain requests will\
            \ be delivered by the cache. However, live retain messages will continue\
            \ to be delivered to currently connected MQTT clients."
        failureReason:
          type: string
          description: "The reason why this MQTT Retain Cache is operationally down,\
            \ if any."
        msgLifetime:
          type: integer
          description: "The message lifetime, in seconds. If a message remains cached\
            \ for the duration of its lifetime, the cache will remove the message.\
            \ A lifetime of 0 results in the message being retained indefinitely,\
            \ otherwise it must be 3 seconds or more."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        primaryCacheInstance:
          type: string
          description: The name of the primary Cache Instance associated with this
            MQTT Retain Cache.
        primaryFailureReason:
          type: string
          description: "The reason why the primary cache associated with this MQTT\
            \ Retain Cache is operationally down, if any."
        primaryUp:
          type: boolean
          description: Indicates whether the primary cache associated with this MQTT
            Retain Cache is operationally up.
        primaryUptime:
          type: integer
          description: The number of seconds that the primary cache associated with
            this MQTT Retain Cache has been operationally up.
          format: int32
        up:
          type: boolean
          description: Indicates whether this MQTT Retain Cache is operationally up.
        uptime:
          type: integer
          description: The number of seconds that the MQTT Retain Cache has been operationally
            up.
          format: int32
      example:
        cacheCluster: cacheCluster
        primaryCacheInstance: primaryCacheInstance
        backupUp: true
        msgLifetime: 6
        primaryUp: true
        enabled: true
        uptime: 5
        backupUptime: 0
        primaryFailureReason: primaryFailureReason
        cacheName: cacheName
        failureReason: failureReason
        distributedCache: distributedCache
        primaryUptime: 1
        msgVpnName: msgVpnName
        up: true
        backupFailureReason: backupFailureReason
        backupCacheInstance: backupCacheInstance
    MsgVpnMqttRetainCacheCollections:
      type: object
    MsgVpnMqttRetainCacheLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this MQTT Retain Cache object.
      example:
        uri: uri
    MsgVpnMqttRetainCacheResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnMqttRetainCacheCollections'
        data:
          $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        links:
          $ref: '#/components/schemas/MsgVpnMqttRetainCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheCluster: cacheCluster
          primaryCacheInstance: primaryCacheInstance
          backupUp: true
          msgLifetime: 6
          primaryUp: true
          enabled: true
          uptime: 5
          backupUptime: 0
          primaryFailureReason: primaryFailureReason
          cacheName: cacheName
          failureReason: failureReason
          distributedCache: distributedCache
          primaryUptime: 1
          msgVpnName: msgVpnName
          up: true
          backupFailureReason: backupFailureReason
          backupCacheInstance: backupCacheInstance
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnMqttRetainCachesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttRetainCacheCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttRetainCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheCluster: cacheCluster
          primaryCacheInstance: primaryCacheInstance
          backupUp: true
          msgLifetime: 6
          primaryUp: true
          enabled: true
          uptime: 5
          backupUptime: 0
          primaryFailureReason: primaryFailureReason
          cacheName: cacheName
          failureReason: failureReason
          distributedCache: distributedCache
          primaryUptime: 1
          msgVpnName: msgVpnName
          up: true
          backupFailureReason: backupFailureReason
          backupCacheInstance: backupCacheInstance
        - cacheCluster: cacheCluster
          primaryCacheInstance: primaryCacheInstance
          backupUp: true
          msgLifetime: 6
          primaryUp: true
          enabled: true
          uptime: 5
          backupUptime: 0
          primaryFailureReason: primaryFailureReason
          cacheName: cacheName
          failureReason: failureReason
          distributedCache: distributedCache
          primaryUptime: 1
          msgVpnName: msgVpnName
          up: true
          backupFailureReason: backupFailureReason
          backupCacheInstance: backupCacheInstance
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnMqttSession:
      type: object
      properties:
        clean:
          type: boolean
          description: "Indicates whether the Client requested a clean (newly created)\
            \ MQTT Session when connecting. If not clean (already existing), then\
            \ previously stored messages for QoS 1 subscriptions are delivered."
        clientName:
          type: string
          description: The name of the MQTT Session Client.
        counter:
          $ref: '#/components/schemas/MsgVpnMqttSessionCounter'
        createdByManagement:
          type: boolean
          description: Indicates whether the MQTT Session was created by a Management
            API.
        durable:
          type: boolean
          description: Indicates whether the MQTT Session is durable. Disconnected
            durable MQTT Sessions are deleted when their expiry time is reached. Disconnected
            non-durable MQTT Sessions are deleted immediately. Available since 2.21.
        enabled:
          type: boolean
          description: Indicates whether the MQTT Session is enabled.
        expiryTime:
          type: integer
          description: "The timestamp of when the disconnected MQTT session expires\
            \ and is deleted. This value represents the number of seconds since 1970-01-01\
            \ 00:00:00 UTC (Unix time). A value of 0 indicates that the session is\
            \ either connected, or will never expire. Available since 2.21."
          format: int64
        maxPacketSize:
          type: integer
          description: "The maximum size of a packet, including all headers and payload,\
            \ that the Client has signaled it is willing to accept. A value of zero\
            \ indicates no limit. Note that there are other broker settings which\
            \ may further limit packet size. Available since 2.21."
          format: int64
        mqttConnackErrorTxCount:
          type: integer
          description: The number of MQTT connect acknowledgment (CONNACK) refused
            response packets transmitted to the Client. Available since 2.13.
          format: int64
        mqttConnackTxCount:
          type: integer
          description: The number of MQTT connect acknowledgment (CONNACK) accepted
            response packets transmitted to the Client. Available since 2.13.
          format: int64
        mqttConnectRxCount:
          type: integer
          description: The number of MQTT connect (CONNECT) request packets received
            from the Client. Available since 2.13.
          format: int64
        mqttDisconnectRxCount:
          type: integer
          description: The number of MQTT disconnect (DISCONNECT) request packets
            received from the Client. Available since 2.13.
          format: int64
        mqttPingreqRxCount:
          type: integer
          description: The number of MQTT ping request (PINGREQ) packets received
            from the Client. Available since 2.23.
          format: int64
        mqttPingrespTxCount:
          type: integer
          description: The number of MQTT ping response (PINGRESP) packets transmitted
            to the Client. Available since 2.23.
          format: int64
        mqttPubackRxCount:
          type: integer
          description: The number of MQTT publish acknowledgement (PUBACK) response
            packets received from the Client. Available since 2.23.
          format: int64
        mqttPubackTxCount:
          type: integer
          description: The number of MQTT publish acknowledgement (PUBACK) response
            packets transmitted to the Client. Available since 2.23.
          format: int64
        mqttPubcompTxCount:
          type: integer
          description: The number of MQTT publish complete (PUBCOMP) packets transmitted
            to the Client in response to a PUBREL packet. These packets are the fourth
            and final packet of a QoS 2 protocol exchange. Available since 2.13.
          format: int64
        mqttPublishQos0RxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 0 message delivery. Available since 2.13.
          format: int64
        mqttPublishQos0TxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 0 message delivery. Available since
            2.13.
          format: int64
        mqttPublishQos1RxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 1 message delivery. Available since 2.13.
          format: int64
        mqttPublishQos1TxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 1 message delivery. Available since
            2.13.
          format: int64
        mqttPublishQos2RxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 2 message delivery. Available since 2.13.
          format: int64
        mqttPubrecTxCount:
          type: integer
          description: The number of MQTT publish received (PUBREC) packets transmitted
            to the Client in response to a PUBLISH packet with QoS 2. These packets
            are the second packet of a QoS 2 protocol exchange. Available since 2.13.
          format: int64
        mqttPubrelRxCount:
          type: integer
          description: The number of MQTT publish release (PUBREL) packets received
            from the Client in response to a PUBREC packet. These packets are the
            third packet of a QoS 2 protocol exchange. Available since 2.13.
          format: int64
        mqttSessionClientId:
          type: string
          description: "The Client ID of the MQTT Session, which corresponds to the\
            \ ClientId provided in the MQTT CONNECT packet."
        mqttSessionVirtualRouter:
          type: string
          description: "The virtual router of the MQTT Session. The allowed values\
            \ and their meaning are:\n\n<pre>\n\"primary\" - The MQTT Session belongs\
            \ to the primary virtual router.\n\"backup\" - The MQTT Session belongs\
            \ to the backup virtual router.\n\"auto\" - The MQTT Session is automatically\
            \ assigned a virtual router at creation, depending on the broker's active-standby\
            \ role.\n</pre>\n"
          enum:
          - primary
          - backup
          - auto
        mqttSubackErrorTxCount:
          type: integer
          description: The number of MQTT subscribe acknowledgement (SUBACK) failure
            response packets transmitted to the Client. Available since 2.23.
          format: int64
        mqttSubackTxCount:
          type: integer
          description: The number of MQTT subscribe acknowledgement (SUBACK) response
            packets transmitted to the Client. Available since 2.23.
          format: int64
        mqttSubscribeRxCount:
          type: integer
          description: The number of MQTT subscribe (SUBSCRIBE) request packets received
            from the Client to create one or more topic subscriptions. Available since
            2.23.
          format: int64
        mqttUnsubackTxCount:
          type: integer
          description: The number of MQTT unsubscribe acknowledgement (UNSUBACK) response
            packets transmitted to the Client. Available since 2.23.
          format: int64
        mqttUnsubscribeRxCount:
          type: integer
          description: The number of MQTT unsubscribe (UNSUBSCRIBE) request packets
            received from the Client to remove one or more topic subscriptions. Available
            since 2.23.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        owner:
          type: string
          description: The Client Username which owns the MQTT Session.
        queueConsumerAckPropagationEnabled:
          type: boolean
          description: Indicates whether consumer acknowledgements (ACKs) received
            on the active replication Message VPN are propagated to the standby replication
            Message VPN. Available since 2.14.
        queueDeadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ) used by the MQTT Session
            Queue. Available since 2.14.
        queueEventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueEventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueEventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueMaxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind to the MQTT
            Session Queue. Available since 2.14.
          format: int64
        queueMaxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow for the MQTT Session Queue. Available since 2.14.
          format: int64
        queueMaxMsgSize:
          type: integer
          description: "The maximum message size allowed in the MQTT Session Queue,\
            \ in bytes (B). Available since 2.14."
          format: int32
        queueMaxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed by the MQTT Session\
            \ Queue, in megabytes (MB). A value of 0 only allows spooling of the last\
            \ message received and disables quota checking. Available since 2.14."
          format: int64
        queueMaxRedeliveryCount:
          type: integer
          description: The maximum number of times the MQTT Session Queue will attempt
            redelivery of a message prior to it being discarded or moved to the DMQ.
            A value of 0 means to retry forever. Available since 2.14.
          format: int64
        queueMaxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in the MQTT\
            \ Session Queue when `queueRespectTtlEnabled` is `\"true\"`. A message\
            \ expires when the lesser of the sender assigned time-to-live (TTL) in\
            \ the message and the `queueMaxTtl` configured for the MQTT Session Queue,\
            \ is exceeded. A value of 0 disables expiry. Available since 2.14."
          format: int64
        queueName:
          type: string
          description: The name of the MQTT Session Queue.
        queueRejectLowPriorityMsgEnabled:
          type: boolean
          description: Indicates whether to return negative acknowledgements (NACKs)
            to sending clients on message discards. Note that NACKs cause the message
            to not be delivered to any destination and Transacted Session commits
            to fail. Available since 2.14.
        queueRejectLowPriorityMsgLimit:
          type: integer
          description: The number of messages of any priority in the MQTT Session
            Queue above which low priority messages are not admitted but higher priority
            messages are allowed. Available since 2.14.
          format: int64
        queueRejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |-
            Indicates whether negative acknowledgements (NACKs) are returned to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
             Available since 2.14.
          enum:
          - always
          - when-queue-enabled
          - never
        queueRespectTtlEnabled:
          type: boolean
          description: "Indicates whether the time-to-live (TTL) for messages in the\
            \ MQTT Session Queue is respected. When enabled, expired messages are\
            \ discarded or moved to the DMQ. Available since 2.14."
        rxMax:
          type: integer
          description: The maximum number of outstanding QoS1 and QoS2 messages that
            the Client has signaled it is willing to accept. Note that there are other
            broker settings which may further limit the number of outstanding messasges.
            Available since 2.21.
          format: int64
        will:
          type: boolean
          description: Indicates whether the MQTT Session has the Will message specified
            by the Client. The Will message is published if the Client disconnects
            without sending the MQTT DISCONNECT packet.
      example:
        mqttUnsubscribeRxCount: 3
        queueMaxRedeliveryCount: 0
        queueDeadMsgQueue: queueDeadMsgQueue
        mqttConnectRxCount: 1
        mqttDisconnectRxCount: 4
        mqttPublishQos0TxCount: 6
        mqttPublishQos1TxCount: 6
        msgVpnName: msgVpnName
        mqttPingrespTxCount: 9
        queueMaxMsgSpoolUsage: 6
        mqttSubscribeRxCount: 6
        mqttConnackTxCount: 7
        mqttPingreqRxCount: 5
        queueRejectLowPriorityMsgEnabled: true
        queueRespectTtlEnabled: true
        createdByManagement: true
        queueRejectMsgToSenderOnDiscardBehavior: always
        queueMaxMsgSize: 7
        mqttPubackRxCount: 9
        mqttSessionVirtualRouter: primary
        queueMaxBindCount: 7
        rxMax: 7
        clientName: clientName
        queueMaxDeliveredUnackedMsgsPerFlow: 0
        maxPacketSize: 1
        enabled: true
        queueRejectLowPriorityMsgLimit: 8
        mqttPublishQos1RxCount: 3
        durable: true
        mqttPublishQos0RxCount: 9
        queueEventBindCountThreshold:
          clearPercent: 7
          setPercent: 7
          setValue: 6
          clearValue: 0
        mqttPublishQos2RxCount: 1
        queueEventMsgSpoolUsageThreshold: null
        owner: owner
        mqttSessionClientId: mqttSessionClientId
        mqttPubrelRxCount: 6
        will: true
        mqttSubackTxCount: 5
        counter:
          mqttPublishQos1RxCount: 3
          mqttConnackErrorTxCount: 6
          mqttConnackTxCount: 1
          mqttPublishQos0RxCount: 7
          mqttPubrelRxCount: 1
          mqttPublishQos2RxCount: 4
          mqttConnectRxCount: 5
          mqttPubcompTxCount: 2
          mqttDisconnectRxCount: 5
          mqttPubrecTxCount: 7
          mqttPublishQos0TxCount: 9
          mqttPublishQos1TxCount: 2
        clean: true
        queueMaxTtl: 4
        mqttConnackErrorTxCount: 6
        queueName: queueName
        mqttSubackErrorTxCount: 6
        mqttPubackTxCount: 6
        mqttPubcompTxCount: 8
        expiryTime: 1
        mqttPubrecTxCount: 2
        mqttUnsubackTxCount: 3
        queueEventRejectLowPriorityMsgLimitThreshold: null
        queueConsumerAckPropagationEnabled: true
    MsgVpnMqttSessionCollections:
      type: object
      properties:
        subscriptions:
          $ref: '#/components/schemas/MsgVpnMqttSessionCollectionsSubscriptions'
      example:
        subscriptions:
          count: 0
    MsgVpnMqttSessionCollectionsSubscriptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the subscriptions collection.
          format: int64
      example:
        count: 0
    MsgVpnMqttSessionCounter:
      type: object
      properties:
        mqttConnackErrorTxCount:
          type: integer
          description: The number of MQTT connect acknowledgment (CONNACK) refused
            response packets transmitted to the Client. Deprecated since 2.13. This
            attribute has been moved to the MsgVpnMqttSession object.
          format: int64
        mqttConnackTxCount:
          type: integer
          description: The number of MQTT connect acknowledgment (CONNACK) accepted
            response packets transmitted to the Client. Deprecated since 2.13. This
            attribute has been moved to the MsgVpnMqttSession object.
          format: int64
        mqttConnectRxCount:
          type: integer
          description: The number of MQTT connect (CONNECT) request packets received
            from the Client. Deprecated since 2.13. This attribute has been moved
            to the MsgVpnMqttSession object.
          format: int64
        mqttDisconnectRxCount:
          type: integer
          description: The number of MQTT disconnect (DISCONNECT) request packets
            received from the Client. Deprecated since 2.13. This attribute has been
            moved to the MsgVpnMqttSession object.
          format: int64
        mqttPubcompTxCount:
          type: integer
          description: The number of MQTT publish complete (PUBCOMP) packets transmitted
            to the Client in response to a PUBREL packet. These packets are the fourth
            and final packet of a QoS 2 protocol exchange. Deprecated since 2.13.
            This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
        mqttPublishQos0RxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 0 message delivery. Deprecated since
            2.13. This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
        mqttPublishQos0TxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 0 message delivery. Deprecated since
            2.13. This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
        mqttPublishQos1RxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 1 message delivery. Deprecated since
            2.13. This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
        mqttPublishQos1TxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 1 message delivery. Deprecated since
            2.13. This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
        mqttPublishQos2RxCount:
          type: integer
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 2 message delivery. Deprecated since
            2.13. This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
        mqttPubrecTxCount:
          type: integer
          description: The number of MQTT publish received (PUBREC) packets transmitted
            to the Client in response to a PUBLISH packet with QoS 2. These packets
            are the second packet of a QoS 2 protocol exchange. Deprecated since 2.13.
            This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
        mqttPubrelRxCount:
          type: integer
          description: The number of MQTT publish release (PUBREL) packets received
            from the Client in response to a PUBREC packet. These packets are the
            third packet of a QoS 2 protocol exchange. Deprecated since 2.13. This
            attribute has been moved to the MsgVpnMqttSession object.
          format: int64
      description: The counters for the MQTT Session. Deprecated since 2.13. All attributes
        in this object have been moved to the MsgVpnMqttSession object.
      example:
        mqttPublishQos1RxCount: 3
        mqttConnackErrorTxCount: 6
        mqttConnackTxCount: 1
        mqttPublishQos0RxCount: 7
        mqttPubrelRxCount: 1
        mqttPublishQos2RxCount: 4
        mqttConnectRxCount: 5
        mqttPubcompTxCount: 2
        mqttDisconnectRxCount: 5
        mqttPubrecTxCount: 7
        mqttPublishQos0TxCount: 9
        mqttPublishQos1TxCount: 2
    MsgVpnMqttSessionLinks:
      type: object
      properties:
        subscriptionsUri:
          type: string
          description: The URI of this MQTT Session's collection of Subscription objects.
        uri:
          type: string
          description: The URI of this MQTT Session object.
      example:
        subscriptionsUri: subscriptionsUri
        uri: uri
    MsgVpnMqttSessionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnMqttSessionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnMqttSession'
        links:
          $ref: '#/components/schemas/MsgVpnMqttSessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          mqttUnsubscribeRxCount: 3
          queueMaxRedeliveryCount: 0
          queueDeadMsgQueue: queueDeadMsgQueue
          mqttConnectRxCount: 1
          mqttDisconnectRxCount: 4
          mqttPublishQos0TxCount: 6
          mqttPublishQos1TxCount: 6
          msgVpnName: msgVpnName
          mqttPingrespTxCount: 9
          queueMaxMsgSpoolUsage: 6
          mqttSubscribeRxCount: 6
          mqttConnackTxCount: 7
          mqttPingreqRxCount: 5
          queueRejectLowPriorityMsgEnabled: true
          queueRespectTtlEnabled: true
          createdByManagement: true
          queueRejectMsgToSenderOnDiscardBehavior: always
          queueMaxMsgSize: 7
          mqttPubackRxCount: 9
          mqttSessionVirtualRouter: primary
          queueMaxBindCount: 7
          rxMax: 7
          clientName: clientName
          queueMaxDeliveredUnackedMsgsPerFlow: 0
          maxPacketSize: 1
          enabled: true
          queueRejectLowPriorityMsgLimit: 8
          mqttPublishQos1RxCount: 3
          durable: true
          mqttPublishQos0RxCount: 9
          queueEventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          mqttPublishQos2RxCount: 1
          queueEventMsgSpoolUsageThreshold: null
          owner: owner
          mqttSessionClientId: mqttSessionClientId
          mqttPubrelRxCount: 6
          will: true
          mqttSubackTxCount: 5
          counter:
            mqttPublishQos1RxCount: 3
            mqttConnackErrorTxCount: 6
            mqttConnackTxCount: 1
            mqttPublishQos0RxCount: 7
            mqttPubrelRxCount: 1
            mqttPublishQos2RxCount: 4
            mqttConnectRxCount: 5
            mqttPubcompTxCount: 2
            mqttDisconnectRxCount: 5
            mqttPubrecTxCount: 7
            mqttPublishQos0TxCount: 9
            mqttPublishQos1TxCount: 2
          clean: true
          queueMaxTtl: 4
          mqttConnackErrorTxCount: 6
          queueName: queueName
          mqttSubackErrorTxCount: 6
          mqttPubackTxCount: 6
          mqttPubcompTxCount: 8
          expiryTime: 1
          mqttPubrecTxCount: 2
          mqttUnsubackTxCount: 3
          queueEventRejectLowPriorityMsgLimitThreshold: null
          queueConsumerAckPropagationEnabled: true
        collections:
          subscriptions:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          subscriptionsUri: subscriptionsUri
          uri: uri
    MsgVpnMqttSessionSubscription:
      type: object
      properties:
        mqttSessionClientId:
          type: string
          description: "The Client ID of the MQTT Session, which corresponds to the\
            \ ClientId provided in the MQTT CONNECT packet."
        mqttSessionVirtualRouter:
          type: string
          description: "The virtual router of the MQTT Session. The allowed values\
            \ and their meaning are:\n\n<pre>\n\"primary\" - The MQTT Session belongs\
            \ to the primary virtual router.\n\"backup\" - The MQTT Session belongs\
            \ to the backup virtual router.\n\"auto\" - The MQTT Session is automatically\
            \ assigned a virtual router at creation, depending on the broker's active-standby\
            \ role.\n</pre>\n"
          enum:
          - primary
          - backup
          - auto
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        subscriptionQos:
          type: integer
          description: The quality of service (QoS) for the MQTT Session subscription.
          format: int64
        subscriptionTopic:
          type: string
          description: The MQTT subscription topic.
      example:
        mqttSessionClientId: mqttSessionClientId
        subscriptionQos: 0
        msgVpnName: msgVpnName
        subscriptionTopic: subscriptionTopic
        mqttSessionVirtualRouter: primary
    MsgVpnMqttSessionSubscriptionCollections:
      type: object
    MsgVpnMqttSessionSubscriptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Subscription object.
      example:
        uri: uri
    MsgVpnMqttSessionSubscriptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnMqttSessionSubscriptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        - mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnMqttSessionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttSession'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - mqttUnsubscribeRxCount: 3
          queueMaxRedeliveryCount: 0
          queueDeadMsgQueue: queueDeadMsgQueue
          mqttConnectRxCount: 1
          mqttDisconnectRxCount: 4
          mqttPublishQos0TxCount: 6
          mqttPublishQos1TxCount: 6
          msgVpnName: msgVpnName
          mqttPingrespTxCount: 9
          queueMaxMsgSpoolUsage: 6
          mqttSubscribeRxCount: 6
          mqttConnackTxCount: 7
          mqttPingreqRxCount: 5
          queueRejectLowPriorityMsgEnabled: true
          queueRespectTtlEnabled: true
          createdByManagement: true
          queueRejectMsgToSenderOnDiscardBehavior: always
          queueMaxMsgSize: 7
          mqttPubackRxCount: 9
          mqttSessionVirtualRouter: primary
          queueMaxBindCount: 7
          rxMax: 7
          clientName: clientName
          queueMaxDeliveredUnackedMsgsPerFlow: 0
          maxPacketSize: 1
          enabled: true
          queueRejectLowPriorityMsgLimit: 8
          mqttPublishQos1RxCount: 3
          durable: true
          mqttPublishQos0RxCount: 9
          queueEventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          mqttPublishQos2RxCount: 1
          queueEventMsgSpoolUsageThreshold: null
          owner: owner
          mqttSessionClientId: mqttSessionClientId
          mqttPubrelRxCount: 6
          will: true
          mqttSubackTxCount: 5
          counter:
            mqttPublishQos1RxCount: 3
            mqttConnackErrorTxCount: 6
            mqttConnackTxCount: 1
            mqttPublishQos0RxCount: 7
            mqttPubrelRxCount: 1
            mqttPublishQos2RxCount: 4
            mqttConnectRxCount: 5
            mqttPubcompTxCount: 2
            mqttDisconnectRxCount: 5
            mqttPubrecTxCount: 7
            mqttPublishQos0TxCount: 9
            mqttPublishQos1TxCount: 2
          clean: true
          queueMaxTtl: 4
          mqttConnackErrorTxCount: 6
          queueName: queueName
          mqttSubackErrorTxCount: 6
          mqttPubackTxCount: 6
          mqttPubcompTxCount: 8
          expiryTime: 1
          mqttPubrecTxCount: 2
          mqttUnsubackTxCount: 3
          queueEventRejectLowPriorityMsgLimitThreshold: null
          queueConsumerAckPropagationEnabled: true
        - mqttUnsubscribeRxCount: 3
          queueMaxRedeliveryCount: 0
          queueDeadMsgQueue: queueDeadMsgQueue
          mqttConnectRxCount: 1
          mqttDisconnectRxCount: 4
          mqttPublishQos0TxCount: 6
          mqttPublishQos1TxCount: 6
          msgVpnName: msgVpnName
          mqttPingrespTxCount: 9
          queueMaxMsgSpoolUsage: 6
          mqttSubscribeRxCount: 6
          mqttConnackTxCount: 7
          mqttPingreqRxCount: 5
          queueRejectLowPriorityMsgEnabled: true
          queueRespectTtlEnabled: true
          createdByManagement: true
          queueRejectMsgToSenderOnDiscardBehavior: always
          queueMaxMsgSize: 7
          mqttPubackRxCount: 9
          mqttSessionVirtualRouter: primary
          queueMaxBindCount: 7
          rxMax: 7
          clientName: clientName
          queueMaxDeliveredUnackedMsgsPerFlow: 0
          maxPacketSize: 1
          enabled: true
          queueRejectLowPriorityMsgLimit: 8
          mqttPublishQos1RxCount: 3
          durable: true
          mqttPublishQos0RxCount: 9
          queueEventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          mqttPublishQos2RxCount: 1
          queueEventMsgSpoolUsageThreshold: null
          owner: owner
          mqttSessionClientId: mqttSessionClientId
          mqttPubrelRxCount: 6
          will: true
          mqttSubackTxCount: 5
          counter:
            mqttPublishQos1RxCount: 3
            mqttConnackErrorTxCount: 6
            mqttConnackTxCount: 1
            mqttPublishQos0RxCount: 7
            mqttPubrelRxCount: 1
            mqttPublishQos2RxCount: 4
            mqttConnectRxCount: 5
            mqttPubcompTxCount: 2
            mqttDisconnectRxCount: 5
            mqttPubrecTxCount: 7
            mqttPublishQos0TxCount: 9
            mqttPublishQos1TxCount: 2
          clean: true
          queueMaxTtl: 4
          mqttConnackErrorTxCount: 6
          queueName: queueName
          mqttSubackErrorTxCount: 6
          mqttPubackTxCount: 6
          mqttPubcompTxCount: 8
          expiryTime: 1
          mqttPubrecTxCount: 2
          mqttUnsubackTxCount: 3
          queueEventRejectLowPriorityMsgLimitThreshold: null
          queueConsumerAckPropagationEnabled: true
        collections:
        - subscriptions:
            count: 0
        - subscriptions:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - subscriptionsUri: subscriptionsUri
          uri: uri
        - subscriptionsUri: subscriptionsUri
          uri: uri
    MsgVpnQueue:
      type: object
      properties:
        accessType:
          type: string
          description: |
            The access type for delivering messages to consumer flows bound to the Queue. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to bound consumer flows in a round-robin (if partition count is zero) or partitioned (if partition count is non-zero) fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
        alreadyBoundBindFailureCount:
          type: integer
          description: The number of Queue bind failures due to being already bound.
          format: int64
        averageBindRequestRate:
          type: integer
          description: "The one minute average of the bind request rate received by\
            \ the Queue, in binds per second (binds/sec). Available since 2.25."
          format: int64
        averageRxByteRate:
          type: integer
          description: "The one minute average of the message rate received by the\
            \ Queue, in bytes per second (B/sec)."
          format: int64
        averageRxMsgRate:
          type: integer
          description: "The one minute average of the message rate received by the\
            \ Queue, in messages per second (msg/sec)."
          format: int64
        averageTxByteRate:
          type: integer
          description: "The one minute average of the message rate transmitted by\
            \ the Queue, in bytes per second (B/sec)."
          format: int64
        averageTxMsgRate:
          type: integer
          description: "The one minute average of the message rate transmitted by\
            \ the Queue, in messages per second (msg/sec)."
          format: int64
        bindRequestCount:
          type: integer
          description: The number of consumer requests to bind to the Queue.
          format: int64
        bindRequestRate:
          type: integer
          description: "The current bind request rate received by the Queue, in binds\
            \ per second (binds/sec). Available since 2.25."
          format: int64
        bindSuccessCount:
          type: integer
          description: The number of successful consumer requests to bind to the Queue.
          format: int64
        bindTimeForwardingMode:
          type: string
          description: |
            The forwarding mode of the Queue at bind time. The allowed values and their meaning are:

            <pre>
            "store-and-forward" - Deliver messages using the guaranteed data path.
            "cut-through" - Deliver messages using the direct and guaranteed data paths for lower latency.
            </pre>
        clientProfileDeniedDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to being denied by the Client Profile.
          format: int64
        consumerAckPropagationEnabled:
          type: boolean
          description: Indicates whether the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN is enabled.
        createdByManagement:
          type: boolean
          description: Indicates whether the Queue was created by a management API
            (CLI or SEMP).
        deadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ) used by the Queue.
        deletedMsgCount:
          type: integer
          description: The number of guaranteed messages deleted from the Queue.
          format: int64
        deliveryCountEnabled:
          type: boolean
          description: Enable or disable the ability for client applications to query
            the message delivery count of messages received from the Queue. This is
            a controlled availability feature. Please contact support to find out
            if this feature is supported for your use case. Available since 2.19.
        deliveryDelay:
          type: integer
          description: "The delay, in seconds, to apply to messages arriving on the\
            \ Queue before the messages are eligible for delivery. Available since\
            \ 2.22."
          format: int64
        destinationGroupErrorDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to a destination group error.
          format: int64
        disabledBindFailureCount:
          type: integer
          description: The number of Queue bind failures due to being disabled.
          format: int64
        disabledDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to it being disabled.
          format: int64
        durable:
          type: boolean
          description: Indicates whether the Queue is durable and not temporary.
        egressEnabled:
          type: boolean
          description: Indicates whether the transmission of messages from the Queue
            is enabled.
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        highestAckedMsgId:
          type: integer
          description: The highest identifier (ID) of guaranteed messages in the Queue
            that were acknowledged.
          format: int64
        highestMsgId:
          type: integer
          description: The highest identifier (ID) of guaranteed messages in the Queue.
          format: int64
        inProgressAckMsgCount:
          type: integer
          description: The number of acknowledgement messages received by the Queue
            that are in the process of updating and deleting associated guaranteed
            messages.
          format: int64
        ingressEnabled:
          type: boolean
          description: Indicates whether the reception of messages to the Queue is
            enabled.
        invalidSelectorBindFailureCount:
          type: integer
          description: The number of Queue bind failures due to an invalid selector.
          format: int64
        lastReplayCompleteTime:
          type: integer
          description: The timestamp of the last completed replay for the Queue. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time).
          format: int32
        lastReplayFailureReason:
          type: string
          description: The reason for the last replay failure for the Queue.
        lastReplayFailureTime:
          type: integer
          description: The timestamp of the last replay failure for the Queue. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time).
          format: int32
        lastReplayStartTime:
          type: integer
          description: The timestamp of the last replay started for the Queue. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time).
          format: int32
        lastReplayedMsgTxTime:
          type: integer
          description: The timestamp of the last replayed message transmitted by the
            Queue. This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        lastSpooledMsgId:
          type: integer
          description: The identifier (ID) of the last guaranteed message spooled
            in the Queue.
          format: int64
        lowPriorityMsgCongestionDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to low priority message congestion control.
          format: int64
        lowPriorityMsgCongestionState:
          type: string
          description: |
            The state of the low priority message congestion in the Queue. The allowed values and their meaning are:

            <pre>
            "disabled" - Messages are not being checked for priority.
            "not-congested" - Low priority messages are being stored and delivered.
            "congested" - Low priority messages are being discarded.
            </pre>
        lowestAckedMsgId:
          type: integer
          description: The lowest identifier (ID) of guaranteed messages in the Queue
            that were acknowledged.
          format: int64
        lowestMsgId:
          type: integer
          description: The lowest identifier (ID) of guaranteed messages in the Queue.
          format: int64
        maxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind to the Queue.
          format: int64
        maxBindCountExceededBindFailureCount:
          type: integer
          description: The number of Queue bind failures due to the maximum bind count
            being exceeded.
          format: int64
        maxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Queue.
          format: int64
        maxMsgSize:
          type: integer
          description: "The maximum message size allowed in the Queue, in bytes (B)."
          format: int32
        maxMsgSizeExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum message size being exceeded.
          format: int64
        maxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed by the Queue, in megabytes\
            \ (MB). A value of 0 only allows spooling of the last message received\
            \ and disables quota checking."
          format: int64
        maxMsgSpoolUsageExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum message spool usage being exceeded.
          format: int64
        maxRedeliveryCount:
          type: integer
          description: The maximum number of times the Queue will attempt redelivery
            of a message prior to it being discarded or moved to the DMQ. A value
            of 0 means to retry forever.
          format: int64
        maxRedeliveryExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum redelivery attempts being exceeded.
          format: int64
        maxRedeliveryExceededToDmqFailedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum redelivery attempts being exceeded and failing to move
            to the Dead Message Queue (DMQ).
          format: int64
        maxRedeliveryExceededToDmqMsgCount:
          type: integer
          description: The number of guaranteed messages moved to the Dead Message
            Queue (DMQ) by the Queue due to the maximum redelivery attempts being
            exceeded.
          format: int64
        maxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in the Queue\
            \ when `respectTtlEnabled` is `\"true\"`. A message expires when the lesser\
            \ of the sender assigned time-to-live (TTL) in the message and the `maxTtl`\
            \ configured for the Queue, is exceeded. A value of 0 disables expiry."
          format: int64
        maxTtlExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum time-to-live (TTL) in hops being exceeded. The TTL hop
            count is incremented when the message crosses a bridge.
          format: int64
        maxTtlExpiredDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum time-to-live (TTL) timestamp expiring.
          format: int64
        maxTtlExpiredToDmqFailedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum time-to-live (TTL) timestamp expiring and failing to move
            to the Dead Message Queue (DMQ).
          format: int64
        maxTtlExpiredToDmqMsgCount:
          type: integer
          description: The number of guaranteed messages moved to the Dead Message
            Queue (DMQ) by the Queue due to the maximum time-to-live (TTL) timestamp
            expiring.
          format: int64
        msgSpoolPeakUsage:
          type: integer
          description: "The message spool peak usage by the Queue, in bytes (B)."
          format: int64
        msgSpoolUsage:
          type: integer
          description: "The message spool usage by the Queue, in bytes (B)."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        networkTopic:
          type: string
          description: The name of the network topic for the Queue.
        noLocalDeliveryDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to no local delivery being requested.
          format: int64
        otherBindFailureCount:
          type: integer
          description: The number of Queue bind failures due to other reasons.
          format: int64
        owner:
          type: string
          description: The Client Username that owns the Queue and has permission
            equivalent to `"delete"`.
        partitionClientName:
          type: string
          description: The name of the client assigned to the partition if the client
            is currently bound to the queue. Only relevant for queues implementing
            an individual partition. Available since (will be released in next SEMP
            version).
        partitionCount:
          type: integer
          description: "The count of partitions of the queue. Only relevant for queues\
            \ with an access type of non-exclusive. When zero, bound clients receive\
            \ messages round-robin. Otherwise, bound clients receive messages from\
            \ individually assigned partitions. Available since (will be released\
            \ in next SEMP version)."
          format: int32
        partitionNumber:
          type: integer
          description: The partition number. Only relevant for queues implementing
            an individual partition. Available since (will be released in next SEMP
            version).
          format: int32
        partitionOperationalCount:
          type: integer
          description: The operational count of partitions of the queue. Only relevant
            for queues with an access type of non-exclusive. This may not match the
            configured count while scaling is underway. Available since (will be released
            in next SEMP version).
          format: int32
        partitionQueueName:
          type: string
          description: The name of our partitioned queue. Only relevant for queues
            implementing an individual partition. Available since (will be released
            in next SEMP version).
        partitionRebalanceDelay:
          type: integer
          description: The delay (in seconds) before a partition rebalance is started
            once needed. Available since (will be released in next SEMP version).
          format: int64
        partitionRebalanceMaxHandoffTime:
          type: integer
          description: The maximum time (in seconds) to wait before handing off a
            partition while rebalancing. Available since (will be released in next
            SEMP version).
          format: int64
        partitionRebalanceStatus:
          type: string
          description: |-
            The rebalance status of the partitioned queue. Only relevant for queues with an access type of non-exclusive and at least 1 partition. The allowed values and their meaning are:

            <pre>
            "ready" - Rebalancing is complete.
            "holddown" - Rebalancing will start after delay.
            "rebalancing" - Rebalancing is underway.
            </pre>
             Available since (will be released in next SEMP version).
        partitionScaleStatus:
          type: string
          description: |-
            The scale status of the partitioned queue. Only relevant for queues with an access type of non-exclusive and at least 1 partition. The allowed values and their meaning are:

            <pre>
            "invalid-exclusive" - Exclusive queues have no partitions.
            "ready" - Partition scaling is complete.
            "scaling-up" - Partitions are being added.
            "scaling-down" - Partitions are being removed.
            "max-partitioned-queues-exceeded" - Maximum number of partitioned queues has been exceeded.
            "max-partitions-exceeded" - Maximum number of partitions has been exceeded for this partitioned queue.
            </pre>
             Available since (will be released in next SEMP version).
        partitionStatus:
          type: string
          description: |-
            The status of the partition of the partitioned queue. Only relevant for queues implementing an individual partition. The allowed values and their meaning are:

            <pre>
            "unassigned" - Partition is not assigned to a client.
            "ready" - Partition is assigned to a client.
            "paused" - Partition is being handed off to another client.
            "unbound" - Assigned client is not bound.
            </pre>
             Available since (will be released in next SEMP version).
        permission:
          type: string
          description: "The permission level for all consumers of the Queue, excluding\
            \ the owner. The allowed values and their meaning are:\n\n<pre>\n\"no-access\"\
            \ - Disallows all access.\n\"read-only\" - Read-only access to the messages.\n\
            \"consume\" - Consume (read and remove) messages.\n\"modify-topic\" -\
            \ Consume messages or modify the topic/selector.\n\"delete\" - Consume\
            \ messages, modify the topic/selector or delete the Client created endpoint\
            \ altogether.\n</pre>\n"
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
        queueName:
          type: string
          description: The name of the Queue.
        redeliveredMsgCount:
          type: integer
          description: The number of guaranteed messages transmitted by the Queue
            for redelivery.
          format: int64
        redeliveryDelayEnabled:
          type: boolean
          description: "Enable or disable a message redelivery delay. When false,\
            \ messages are redelivered as soon as possible.  When true, messages are\
            \ redelivered according to the initial, max and multiplier.  This should\
            \ only be enabled when redelivery is enabled. Available since 2.33."
        redeliveryDelayInitialInterval:
          type: integer
          description: The delay to be used between the first 2 redelivery attempts.  This
            value is in milliseconds. Available since 2.33.
          format: int32
        redeliveryDelayMaxInterval:
          type: integer
          description: "The maximum delay to be used between any 2 redelivery attempts.\
            \  This value is in milliseconds.  Due to technical limitations, some\
            \ redelivery attempt delays may slightly exceed this value. Available\
            \ since 2.33."
          format: int32
        redeliveryDelayMultiplier:
          type: integer
          description: "The amount each delay interval is multiplied by after each\
            \ failed delivery attempt.  This number is in a fixed-point decimal format\
            \ in which you must divide by 100 to get the floating point value. For\
            \ example, a value of 125 would cause the delay to be multiplied by 1.25.\
            \ Available since 2.33."
          format: int32
        redeliveryEnabled:
          type: boolean
          description: "Enable or disable message redelivery. When enabled, the number\
            \ of redelivery attempts is controlled by maxRedeliveryCount. When disabled,\
            \ the message will never be delivered from the queue more than once. Available\
            \ since 2.18."
        rejectLowPriorityMsgEnabled:
          type: boolean
          description: Indicates whether the checking of low priority messages against
            the `rejectLowPriorityMsgLimit` is enabled.
        rejectLowPriorityMsgLimit:
          type: integer
          description: The number of messages of any priority in the Queue above which
            low priority messages are not admitted but higher priority messages are
            allowed.
          format: int64
        rejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-queue-enabled
          - never
        replayFailureCount:
          type: integer
          description: The number of replays that failed for the Queue.
          format: int64
        replayStartCount:
          type: integer
          description: The number of replays started for the Queue.
          format: int64
        replayState:
          type: string
          description: "The state of replay for the Queue. The allowed values and\
            \ their meaning are:\n\n<pre>\n\"initializing\" - All messages are being\
            \ deleted from the endpoint before replay starts.\n\"active\" - Subscription\
            \ matching logged messages are being replayed to the endpoint.\n\"pending-complete\"\
            \ - Replay is complete, but final accounting is in progress.\n\"complete\"\
            \ - Replay and all related activities are complete.\n\"failed\" - Replay\
            \ has failed and is waiting for an unbind response.\n</pre>\n"
        replaySuccessCount:
          type: integer
          description: The number of replays that succeeded for the Queue.
          format: int64
        replayedAckedMsgCount:
          type: integer
          description: The number of replayed messages transmitted by the Queue and
            acked by all consumers.
          format: int64
        replayedTxMsgCount:
          type: integer
          description: The number of replayed messages transmitted by the Queue.
          format: int64
        replicationActiveAckPropTxMsgCount:
          type: integer
          description: The number of acknowledgement messages propagated by the Queue
            to the replication standby remote Message VPN.
          format: int64
        replicationStandbyAckPropRxMsgCount:
          type: integer
          description: The number of propagated acknowledgement messages received
            by the Queue from the replication active remote Message VPN.
          format: int64
        replicationStandbyAckedByAckPropMsgCount:
          type: integer
          description: The number of messages acknowledged in the Queue by acknowledgement
            propagation from the replication active remote Message VPN.
          format: int64
        replicationStandbyRxMsgCount:
          type: integer
          description: The number of messages received by the Queue from the replication
            active remote Message VPN.
          format: int64
        respectMsgPriorityEnabled:
          type: boolean
          description: "Indicates whether message priorities are respected. When enabled,\
            \ messages contained in the Queue are delivered in priority order, from\
            \ 9 (highest) to 0 (lowest)."
        respectTtlEnabled:
          type: boolean
          description: "Indicates whether the the time-to-live (TTL) for messages\
            \ in the Queue is respected. When enabled, expired messages are discarded\
            \ or moved to the DMQ."
        rxByteRate:
          type: integer
          description: "The current message rate received by the Queue, in bytes per\
            \ second (B/sec)."
          format: int64
        rxMsgRate:
          type: integer
          description: "The current message rate received by the Queue, in messages\
            \ per second (msg/sec)."
          format: int64
        spooledByteCount:
          type: integer
          description: "The amount of guaranteed messages that were spooled in the\
            \ Queue, in bytes (B)."
          format: int64
        spooledMsgCount:
          type: integer
          description: The number of guaranteed messages that were spooled in the
            Queue.
          format: int64
        transportRetransmitMsgCount:
          type: integer
          description: The number of guaranteed messages that were retransmitted by
            the Queue at the transport layer as part of a single delivery attempt.
            Available since 2.18.
          format: int64
        txByteRate:
          type: integer
          description: "The current message rate transmitted by the Queue, in bytes\
            \ per second (B/sec)."
          format: int64
        txMsgRate:
          type: integer
          description: "The current message rate transmitted by the Queue, in messages\
            \ per second (msg/sec)."
          format: int64
        txSelector:
          type: boolean
          description: Indicates whether the Queue has consumers with selectors to
            filter transmitted messages.
        txUnackedMsgCount:
          type: integer
          description: The number of guaranteed messages in the Queue that have been
            transmitted but not acknowledged by all consumers.
          format: int64
        virtualRouter:
          type: string
          description: "The virtual router of the Queue. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"primary\" - The endpoint belongs to the primary\
            \ virtual router.\n\"backup\" - The endpoint belongs to the backup virtual\
            \ router.\n</pre>\n Deprecated since 2.31. This attribute has been deprecated.\
            \ When Guaranteed Messaging is active, this value is always the virtual\
            \ router for which Guaranteed Messaging is enabled. Otherwise, this value\
            \ should be ignored."
        xaTransactionNotSupportedDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Queue due
            to XA Transactions not being supported. Available since (will be released
            in next SEMP version).
          format: int64
      example:
        averageRxByteRate: 7
        maxTtlExpiredDiscardedMsgCount: 3
        txMsgRate: 3
        redeliveryEnabled: true
        maxMsgSizeExceededDiscardedMsgCount: 3
        txUnackedMsgCount: 9
        maxMsgSize: 3
        bindRequestRate: 7
        partitionCount: 6
        rejectMsgToSenderOnDiscardBehavior: always
        redeliveryDelayEnabled: true
        eventBindCountThreshold:
          clearPercent: 7
          setPercent: 7
          setValue: 6
          clearValue: 0
        replayFailureCount: 5
        respectMsgPriorityEnabled: true
        bindSuccessCount: 1
        partitionClientName: partitionClientName
        replicationStandbyRxMsgCount: 1
        maxDeliveredUnackedMsgsPerFlow: 6
        lastSpooledMsgId: 6
        lowestMsgId: 6
        egressEnabled: true
        partitionRebalanceDelay: 4
        respectTtlEnabled: true
        lastReplayStartTime: 6
        msgSpoolUsage: 3
        lastReplayedMsgTxTime: 3
        partitionOperationalCount: 1
        rxByteRate: 8
        alreadyBoundBindFailureCount: 5
        highestAckedMsgId: 5
        maxRedeliveryExceededToDmqFailedMsgCount: 0
        redeliveryDelayMaxInterval: 9
        maxRedeliveryExceededDiscardedMsgCount: 6
        rejectLowPriorityMsgLimit: 7
        partitionQueueName: partitionQueueName
        txByteRate: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        deliveryCountEnabled: true
        replayedAckedMsgCount: 8
        averageTxByteRate: 3
        maxBindCountExceededBindFailureCount: 5
        destinationGroupErrorDiscardedMsgCount: 7
        noLocalDeliveryDiscardedMsgCount: 4
        rejectLowPriorityMsgEnabled: true
        replicationStandbyAckedByAckPropMsgCount: 2
        maxTtl: 8
        spooledByteCount: 4
        averageRxMsgRate: 9
        maxTtlExpiredToDmqFailedMsgCount: 3
        redeliveredMsgCount: 9
        virtualRouter: virtualRouter
        ingressEnabled: true
        spooledMsgCount: 8
        queueName: queueName
        inProgressAckMsgCount: 9
        partitionRebalanceStatus: partitionRebalanceStatus
        partitionNumber: 4
        replicationActiveAckPropTxMsgCount: 3
        maxTtlExceededDiscardedMsgCount: 7
        rxMsgRate: 6
        consumerAckPropagationEnabled: true
        networkTopic: networkTopic
        msgVpnName: msgVpnName
        averageTxMsgRate: 2
        lastReplayFailureTime: 9
        bindRequestCount: 4
        eventMsgSpoolUsageThreshold: null
        replayedTxMsgCount: 4
        replayStartCount: 4
        clientProfileDeniedDiscardedMsgCount: 1
        disabledBindFailureCount: 1
        createdByManagement: true
        disabledDiscardedMsgCount: 4
        replicationStandbyAckPropRxMsgCount: 0
        partitionStatus: partitionStatus
        xaTransactionNotSupportedDiscardedMsgCount: 8
        maxTtlExpiredToDmqMsgCount: 7
        maxRedeliveryExceededToDmqMsgCount: 4
        partitionScaleStatus: partitionScaleStatus
        txSelector: true
        eventRejectLowPriorityMsgLimitThreshold: null
        otherBindFailureCount: 0
        lastReplayFailureReason: lastReplayFailureReason
        highestMsgId: 9
        lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
        transportRetransmitMsgCount: 9
        lowestAckedMsgId: 2
        maxMsgSpoolUsageExceededDiscardedMsgCount: 0
        durable: true
        replayState: replayState
        bindTimeForwardingMode: bindTimeForwardingMode
        lastReplayCompleteTime: 8
        redeliveryDelayInitialInterval: 0
        deliveryDelay: 6
        maxBindCount: 6
        owner: owner
        replaySuccessCount: 6
        partitionRebalanceMaxHandoffTime: 7
        permission: no-access
        maxRedeliveryCount: 7
        msgSpoolPeakUsage: 5
        deletedMsgCount: 1
        invalidSelectorBindFailureCount: 6
        averageBindRequestRate: 2
        redeliveryDelayMultiplier: 0
        maxMsgSpoolUsage: 7
        lowPriorityMsgCongestionDiscardedMsgCount: 1
    MsgVpnQueueCollections:
      type: object
      properties:
        msgs:
          $ref: '#/components/schemas/MsgVpnQueueCollectionsMsgs'
        priorities:
          $ref: '#/components/schemas/MsgVpnQueueCollectionsPriorities'
        subscriptions:
          $ref: '#/components/schemas/MsgVpnQueueCollectionsSubscriptions'
        txFlows:
          $ref: '#/components/schemas/MsgVpnQueueCollectionsTxFlows'
      example:
        msgs:
          count: 0
        priorities:
          count: 6
        subscriptions:
          count: 1
        txFlows:
          count: 5
    MsgVpnQueueCollectionsMsgs:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the msgs collection.
          format: int64
      example:
        count: 0
    MsgVpnQueueCollectionsPriorities:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the priorities collection.
          format: int64
      example:
        count: 6
    MsgVpnQueueCollectionsSubscriptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the subscriptions collection.
          format: int64
      example:
        count: 1
    MsgVpnQueueCollectionsTxFlows:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the txFlows collection.
          format: int64
      example:
        count: 5
    MsgVpnQueueLinks:
      type: object
      properties:
        msgsUri:
          type: string
          description: The URI of this Queue's collection of Queue Message objects.
        prioritiesUri:
          type: string
          description: The URI of this Queue's collection of Queue Priority objects.
        subscriptionsUri:
          type: string
          description: The URI of this Queue's collection of Queue Subscription objects.
        txFlowsUri:
          type: string
          description: The URI of this Queue's collection of Queue Transmit Flow objects.
        uri:
          type: string
          description: The URI of this Queue object.
      example:
        txFlowsUri: txFlowsUri
        subscriptionsUri: subscriptionsUri
        prioritiesUri: prioritiesUri
        uri: uri
        msgsUri: msgsUri
    MsgVpnQueueMsg:
      type: object
      properties:
        attachmentSize:
          type: integer
          description: "The size of the Message attachment, in bytes (B)."
          format: int64
        contentSize:
          type: integer
          description: "The size of the Message content, in bytes (B)."
          format: int64
        deliveryEligibleTime:
          type: integer
          description: The timestamp of when the Message is eligible for delivery.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Available since 2.22.
          format: int32
        dmqEligible:
          type: boolean
          description: Indicates whether the Message is eligible for the Dead Message
            Queue (DMQ).
        expiryTime:
          type: integer
          description: The timestamp of when the Message expires. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        msgId:
          type: integer
          description: The identifier (ID) of the Message.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        partitionKey:
          type: string
          description: The partition key of the Message. Available since (will be
            released in next SEMP version).
        partitionKeyHash:
          type: integer
          description: The partition key hash of the Message. Available since (will
            be released in next SEMP version).
          format: int32
        priority:
          type: integer
          description: "The priority level of the Message, from 9 (highest) to 0 (lowest)."
          format: int32
        publisherId:
          type: integer
          description: The identifier (ID) of the Message publisher.
          format: int64
        queueName:
          type: string
          description: The name of the Queue.
        redeliveryCount:
          type: integer
          description: The number of times the Message has been redelivered.
          format: int32
        replicatedMateMsgId:
          type: integer
          description: The Message identifier (ID) on the replication mate. Applicable
            only to replicated messages.
          format: int64
        replicationGroupMsgId:
          type: string
          description: An ID that uniquely identifies this Message within this replication
            group. Available since 2.21.
        replicationState:
          type: string
          description: |
            The replication state of the Message. The allowed values and their meaning are:

            <pre>
            "replicated" - The Message is replicated to the remote Message VPN.
            "not-replicated" - The Message is not being replicated to the remote Message VPN.
            "pending-replication" - The Message is queued for replication to the remote Message VPN.
            </pre>
        spooledTime:
          type: integer
          description: The timestamp of when the Message was spooled in the Queue.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        undelivered:
          type: boolean
          description: Indicates whether delivery of the Message has never been attempted.
      example:
        replicationState: replicationState
        msgId: 5
        undelivered: true
        priority: 7
        publisherId: 9
        attachmentSize: 0
        queueName: queueName
        deliveryEligibleTime: 1
        dmqEligible: true
        partitionKey: partitionKey
        redeliveryCount: 3
        spooledTime: 4
        contentSize: 6
        expiryTime: 5
        partitionKeyHash: 2
        msgVpnName: msgVpnName
        replicationGroupMsgId: replicationGroupMsgId
        replicatedMateMsgId: 2
    MsgVpnQueueMsgCollections:
      type: object
    MsgVpnQueueMsgLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Queue Message object.
      example:
        uri: uri
    MsgVpnQueueMsgResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnQueueMsgCollections'
        data:
          $ref: '#/components/schemas/MsgVpnQueueMsg'
        links:
          $ref: '#/components/schemas/MsgVpnQueueMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          replicationState: replicationState
          msgId: 5
          undelivered: true
          priority: 7
          publisherId: 9
          attachmentSize: 0
          queueName: queueName
          deliveryEligibleTime: 1
          dmqEligible: true
          partitionKey: partitionKey
          redeliveryCount: 3
          spooledTime: 4
          contentSize: 6
          expiryTime: 5
          partitionKeyHash: 2
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 2
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnQueueMsgsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueMsgCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueMsg'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - replicationState: replicationState
          msgId: 5
          undelivered: true
          priority: 7
          publisherId: 9
          attachmentSize: 0
          queueName: queueName
          deliveryEligibleTime: 1
          dmqEligible: true
          partitionKey: partitionKey
          redeliveryCount: 3
          spooledTime: 4
          contentSize: 6
          expiryTime: 5
          partitionKeyHash: 2
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 2
        - replicationState: replicationState
          msgId: 5
          undelivered: true
          priority: 7
          publisherId: 9
          attachmentSize: 0
          queueName: queueName
          deliveryEligibleTime: 1
          dmqEligible: true
          partitionKey: partitionKey
          redeliveryCount: 3
          spooledTime: 4
          contentSize: 6
          expiryTime: 5
          partitionKeyHash: 2
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 2
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnQueuePrioritiesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueuePriorityCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueuePriority'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueuePriorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - spooledMsgCount: 1
          queueName: queueName
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        - spooledMsgCount: 1
          queueName: queueName
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnQueuePriority:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        priority:
          type: integer
          description: "The level of the Priority, from 9 (highest) to 0 (lowest)."
          format: int32
        queueName:
          type: string
          description: The name of the Queue.
        spooledByteCount:
          type: integer
          description: "The amount of guaranteed messages at this Priority spooled\
            \ by the Queue, in bytes (B)."
          format: int64
        spooledMsgCount:
          type: integer
          description: The number of guaranteed messages at this Priority spooled
            by the Queue.
          format: int64
      example:
        spooledMsgCount: 1
        queueName: queueName
        spooledByteCount: 6
        msgVpnName: msgVpnName
        priority: 0
    MsgVpnQueuePriorityCollections:
      type: object
    MsgVpnQueuePriorityLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Queue Priority object.
      example:
        uri: uri
    MsgVpnQueuePriorityResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnQueuePriorityCollections'
        data:
          $ref: '#/components/schemas/MsgVpnQueuePriority'
        links:
          $ref: '#/components/schemas/MsgVpnQueuePriorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          spooledMsgCount: 1
          queueName: queueName
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnQueueResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnQueueCollections'
        data:
          $ref: '#/components/schemas/MsgVpnQueue'
        links:
          $ref: '#/components/schemas/MsgVpnQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          averageRxByteRate: 7
          maxTtlExpiredDiscardedMsgCount: 3
          txMsgRate: 3
          redeliveryEnabled: true
          maxMsgSizeExceededDiscardedMsgCount: 3
          txUnackedMsgCount: 9
          maxMsgSize: 3
          bindRequestRate: 7
          partitionCount: 6
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          replayFailureCount: 5
          respectMsgPriorityEnabled: true
          bindSuccessCount: 1
          partitionClientName: partitionClientName
          replicationStandbyRxMsgCount: 1
          maxDeliveredUnackedMsgsPerFlow: 6
          lastSpooledMsgId: 6
          lowestMsgId: 6
          egressEnabled: true
          partitionRebalanceDelay: 4
          respectTtlEnabled: true
          lastReplayStartTime: 6
          msgSpoolUsage: 3
          lastReplayedMsgTxTime: 3
          partitionOperationalCount: 1
          rxByteRate: 8
          alreadyBoundBindFailureCount: 5
          highestAckedMsgId: 5
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          redeliveryDelayMaxInterval: 9
          maxRedeliveryExceededDiscardedMsgCount: 6
          rejectLowPriorityMsgLimit: 7
          partitionQueueName: partitionQueueName
          txByteRate: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          replayedAckedMsgCount: 8
          averageTxByteRate: 3
          maxBindCountExceededBindFailureCount: 5
          destinationGroupErrorDiscardedMsgCount: 7
          noLocalDeliveryDiscardedMsgCount: 4
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 2
          maxTtl: 8
          spooledByteCount: 4
          averageRxMsgRate: 9
          maxTtlExpiredToDmqFailedMsgCount: 3
          redeliveredMsgCount: 9
          virtualRouter: virtualRouter
          ingressEnabled: true
          spooledMsgCount: 8
          queueName: queueName
          inProgressAckMsgCount: 9
          partitionRebalanceStatus: partitionRebalanceStatus
          partitionNumber: 4
          replicationActiveAckPropTxMsgCount: 3
          maxTtlExceededDiscardedMsgCount: 7
          rxMsgRate: 6
          consumerAckPropagationEnabled: true
          networkTopic: networkTopic
          msgVpnName: msgVpnName
          averageTxMsgRate: 2
          lastReplayFailureTime: 9
          bindRequestCount: 4
          eventMsgSpoolUsageThreshold: null
          replayedTxMsgCount: 4
          replayStartCount: 4
          clientProfileDeniedDiscardedMsgCount: 1
          disabledBindFailureCount: 1
          createdByManagement: true
          disabledDiscardedMsgCount: 4
          replicationStandbyAckPropRxMsgCount: 0
          partitionStatus: partitionStatus
          xaTransactionNotSupportedDiscardedMsgCount: 8
          maxTtlExpiredToDmqMsgCount: 7
          maxRedeliveryExceededToDmqMsgCount: 4
          partitionScaleStatus: partitionScaleStatus
          txSelector: true
          eventRejectLowPriorityMsgLimitThreshold: null
          otherBindFailureCount: 0
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 9
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          transportRetransmitMsgCount: 9
          lowestAckedMsgId: 2
          maxMsgSpoolUsageExceededDiscardedMsgCount: 0
          durable: true
          replayState: replayState
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 8
          redeliveryDelayInitialInterval: 0
          deliveryDelay: 6
          maxBindCount: 6
          owner: owner
          replaySuccessCount: 6
          partitionRebalanceMaxHandoffTime: 7
          permission: no-access
          maxRedeliveryCount: 7
          msgSpoolPeakUsage: 5
          deletedMsgCount: 1
          invalidSelectorBindFailureCount: 6
          averageBindRequestRate: 2
          redeliveryDelayMultiplier: 0
          maxMsgSpoolUsage: 7
          lowPriorityMsgCongestionDiscardedMsgCount: 1
        collections:
          msgs:
            count: 0
          priorities:
            count: 6
          subscriptions:
            count: 1
          txFlows:
            count: 5
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          txFlowsUri: txFlowsUri
          subscriptionsUri: subscriptionsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
    MsgVpnQueueSubscription:
      type: object
      properties:
        createdByManagement:
          type: boolean
          description: Indicates whether the Subscription topic was created by a management
            API (CLI or SEMP).
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        queueName:
          type: string
          description: The name of the Queue.
        subscriptionTopic:
          type: string
          description: The topic of the Subscription.
      example:
        queueName: queueName
        msgVpnName: msgVpnName
        subscriptionTopic: subscriptionTopic
        createdByManagement: true
    MsgVpnQueueSubscriptionCollections:
      type: object
    MsgVpnQueueSubscriptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Queue Subscription object.
      example:
        uri: uri
    MsgVpnQueueSubscriptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnQueueSubscriptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnQueueSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnQueueSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          createdByManagement: true
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnQueueSubscriptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueSubscriptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueSubscription'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          createdByManagement: true
        - queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          createdByManagement: true
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnQueueTemplate:
      type: object
      properties:
        accessType:
          type: string
          description: |
            The access type for delivering messages to consumer flows. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to bound consumer flows in a round-robin (if partition count is zero) or partitioned (if partition count is non-zero) fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
        consumerAckPropagationEnabled:
          type: boolean
          description: Indicates whether the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN is enabled.
        deadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ).
        deliveryDelay:
          type: integer
          description: "The delay, in seconds, to apply to messages arriving on the\
            \ Queue before the messages are eligible for delivery. This attribute\
            \ does not apply to MQTT queues created from this template, but it may\
            \ apply in future releases. Therefore, to maintain forward compatibility,\
            \ do not set this value on templates that might be used for MQTT queues.\
            \ Available since 2.22."
          format: int64
        durabilityOverride:
          type: string
          description: "Controls the durability of queues created from this template.\
            \ If non-durable, the created queue will be non-durable, regardless of\
            \ the specified durability. If none, the created queue will have the requested\
            \ durability. The allowed values and their meaning are:\n\n<pre>\n\"none\"\
            \ - The durability of the endpoint will be as requested on create.\n\"\
            non-durable\" - The durability of the created queue will be non-durable,\
            \ regardless of what was requested.\n</pre>\n"
          enum:
          - none
          - non-durable
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind.
          format: int64
        maxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow.
          format: int64
        maxMsgSize:
          type: integer
          description: "The maximum message size allowed, in bytes (B)."
          format: int32
        maxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed, in megabytes (MB).\
            \ A value of 0 only allows spooling of the last message received and disables\
            \ quota checking."
          format: int64
        maxRedeliveryCount:
          type: integer
          description: The maximum number of message redelivery attempts that will
            occur prior to the message being discarded or moved to the DMQ. A value
            of 0 means to retry forever.
          format: int64
        maxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in a Queue\
            \ when `respectTtlEnabled` is `\"true\"`. A message expires when the lesser\
            \ of the sender assigned time-to-live (TTL) in the message and the `maxTtl`\
            \ configured for the Queue, is exceeded. A value of 0 disables expiry."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        permission:
          type: string
          description: "The permission level for all consumers, excluding the owner.\
            \ The allowed values and their meaning are:\n\n<pre>\n\"no-access\" -\
            \ Disallows all access.\n\"read-only\" - Read-only access to the messages.\n\
            \"consume\" - Consume (read and remove) messages.\n\"modify-topic\" -\
            \ Consume messages or modify the topic/selector.\n\"delete\" - Consume\
            \ messages, modify the topic/selector or delete the Client created endpoint\
            \ altogether.\n</pre>\n"
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
        queueNameFilter:
          type: string
          description: "A wildcardable pattern used to determine which Queues use\
            \ settings from this Template. Two different wildcards are supported:\
            \ * and >. Similar to topic filters or subscription patterns, a > matches\
            \ anything (but only when used at the end), and a * matches zero or more\
            \ characters but never a slash (/). A > is only a wildcard when used at\
            \ the end, after a /. A * is only allowed at the end, after a slash (/)."
        queueTemplateName:
          type: string
          description: The name of the Queue Template.
        redeliveryDelayEnabled:
          type: boolean
          description: "Enable or disable a message redelivery delay. When false,\
            \ messages are redelivered as soon as possible.  When true, messages are\
            \ redelivered according to the initial, max and multiplier.  This should\
            \ only be enabled when redelivery is enabled. Available since 2.33."
        redeliveryDelayInitialInterval:
          type: integer
          description: The delay to be used between the first 2 redelivery attempts.  This
            value is in milliseconds. Available since 2.33.
          format: int32
        redeliveryDelayMaxInterval:
          type: integer
          description: "The maximum delay to be used between any 2 redelivery attempts.\
            \  This value is in milliseconds.  Due to technical limitations, some\
            \ redelivery attempt delays may slightly exceed this value. Available\
            \ since 2.33."
          format: int32
        redeliveryDelayMultiplier:
          type: integer
          description: "The amount each delay interval is multiplied by after each\
            \ failed delivery attempt.  This number is in a fixed-point decimal format\
            \ in which you must divide by 100 to get the floating point value. For\
            \ example, a value of 125 would cause the delay to be multiplied by 1.25.\
            \ Available since 2.33."
          format: int32
        redeliveryEnabled:
          type: boolean
          description: "Enable or disable message redelivery. When enabled, the number\
            \ of redelivery attempts is controlled by maxRedeliveryCount. When disabled,\
            \ the message will never be delivered from the queue more than once. Available\
            \ since 2.18."
        rejectLowPriorityMsgEnabled:
          type: boolean
          description: Indicates whether the checking of low priority messages against
            the `rejectLowPriorityMsgLimit` is enabled.
        rejectLowPriorityMsgLimit:
          type: integer
          description: The number of messages of any priority above which low priority
            messages are not admitted but higher priority messages are allowed.
          format: int64
        rejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs prevent the message from being delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-queue-enabled
          - never
        respectMsgPriorityEnabled:
          type: boolean
          description: "Indicates whether message priorities are respected. When enabled,\
            \ messages are delivered in priority order, from 9 (highest) to 0 (lowest)."
        respectTtlEnabled:
          type: boolean
          description: "Indicates whether the the time-to-live (TTL) for messages\
            \ is respected. When enabled, expired messages are discarded or moved\
            \ to the DMQ."
      example:
        redeliveryEnabled: true
        redeliveryDelayMaxInterval: 3
        rejectLowPriorityMsgLimit: 4
        maxMsgSize: 5
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        queueNameFilter: queueNameFilter
        rejectMsgToSenderOnDiscardBehavior: always
        redeliveryDelayEnabled: true
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 7
          setPercent: 7
          setValue: 6
          clearValue: 0
        respectMsgPriorityEnabled: true
        durabilityOverride: none
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 1
        redeliveryDelayInitialInterval: 9
        rejectLowPriorityMsgEnabled: true
        deliveryDelay: 0
        maxBindCount: 6
        eventMsgSpoolUsageThreshold: null
        maxTtl: 7
        respectTtlEnabled: true
        permission: no-access
        maxRedeliveryCount: 2
        redeliveryDelayMultiplier: 2
        queueTemplateName: queueTemplateName
        eventRejectLowPriorityMsgLimitThreshold: null
        maxMsgSpoolUsage: 5
    MsgVpnQueueTemplateCollections:
      type: object
    MsgVpnQueueTemplateLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Queue Template object.
      example:
        uri: uri
    MsgVpnQueueTemplateResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnQueueTemplateCollections'
        data:
          $ref: '#/components/schemas/MsgVpnQueueTemplate'
        links:
          $ref: '#/components/schemas/MsgVpnQueueTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          redeliveryEnabled: true
          redeliveryDelayMaxInterval: 3
          rejectLowPriorityMsgLimit: 4
          maxMsgSize: 5
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 1
          redeliveryDelayInitialInterval: 9
          rejectLowPriorityMsgEnabled: true
          deliveryDelay: 0
          maxBindCount: 6
          eventMsgSpoolUsageThreshold: null
          maxTtl: 7
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 2
          redeliveryDelayMultiplier: 2
          queueTemplateName: queueTemplateName
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnQueueTemplatesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueTemplateCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueTemplate'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - redeliveryEnabled: true
          redeliveryDelayMaxInterval: 3
          rejectLowPriorityMsgLimit: 4
          maxMsgSize: 5
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 1
          redeliveryDelayInitialInterval: 9
          rejectLowPriorityMsgEnabled: true
          deliveryDelay: 0
          maxBindCount: 6
          eventMsgSpoolUsageThreshold: null
          maxTtl: 7
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 2
          redeliveryDelayMultiplier: 2
          queueTemplateName: queueTemplateName
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
        - redeliveryEnabled: true
          redeliveryDelayMaxInterval: 3
          rejectLowPriorityMsgLimit: 4
          maxMsgSize: 5
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 1
          redeliveryDelayInitialInterval: 9
          rejectLowPriorityMsgEnabled: true
          deliveryDelay: 0
          maxBindCount: 6
          eventMsgSpoolUsageThreshold: null
          maxTtl: 7
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 2
          redeliveryDelayMultiplier: 2
          queueTemplateName: queueTemplateName
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnQueueTxFlow:
      type: object
      properties:
        ackedMsgCount:
          type: integer
          description: The number of guaranteed messages delivered and acknowledged
            by the consumer.
          format: int64
        activationTime:
          type: integer
          description: The timestamp of when the bound Flow became active. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        activityState:
          type: string
          description: |
            The activity state of the Flow. The allowed values and their meaning are:

            <pre>
            "active-browser" - The Flow is active as a browser.
            "active-consumer" - The Flow is active as a consumer.
            "inactive" - The Flow is inactive.
            </pre>
        activityUpdateState:
          type: string
          description: |
            The state of updating the consumer with the Flow activity. The allowed values and their meaning are:

            <pre>
            "in-progress" - The Flow is in the process of updating the client with its activity state.
            "synchronized" - The Flow has updated the client with its activity state.
            "not-requested" - The Flow has not been requested by the client to provide activity updates.
            </pre>
        bindTime:
          type: integer
          description: The timestamp of when the Flow bound to the Queue. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        clientName:
          type: string
          description: The name of the Client.
        consumerRedeliveryRequestAllowed:
          type: boolean
          description: Indicates whether redelivery requests can be received as negative
            acknowledgements (NACKs) from the consumer. Applicable only to REST consumers.
        cutThroughAckedMsgCount:
          type: integer
          description: The number of guaranteed messages that used cut-through delivery
            and are acknowledged by the consumer.
          format: int64
        deliveryState:
          type: string
          description: |
            The delivery state of the Flow. The allowed values and their meaning are:

            <pre>
            "closed" - The Flow is unbound.
            "opened" - The Flow is bound but inactive.
            "unbinding" - The Flow received an unbind request.
            "handshaking" - The Flow is handshaking to become active.
            "deliver-cut-through" - The Flow is streaming messages using direct+guaranteed delivery.
            "deliver-from-input-stream" - The Flow is streaming messages using guaranteed delivery.
            "deliver-from-memory" - The Flow throttled causing message delivery from memory (RAM).
            "deliver-from-spool" - The Flow stalled causing message delivery from spool (ADB or disk).
            </pre>
        flowId:
          type: integer
          description: The identifier (ID) of the Flow.
          format: int64
        highestAckPendingMsgId:
          type: integer
          description: The highest identifier (ID) of message transmitted and waiting
            for acknowledgement.
          format: int64
        lastAckedMsgId:
          type: integer
          description: The identifier (ID) of the last message transmitted and acknowledged
            by the consumer.
          format: int64
        lastSelectorExaminedMsgId:
          type: integer
          description: The identifier (ID) of the last message examined by the Flow
            selector.
          format: int64
        lowestAckPendingMsgId:
          type: integer
          description: The lowest identifier (ID) of message transmitted and waiting
            for acknowledgement.
          format: int64
        maxUnackedMsgsExceededMsgCount:
          type: integer
          description: The number of guaranteed messages that exceeded the maximum
            number of delivered unacknowledged messages.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        noLocalDelivery:
          type: boolean
          description: Indicates whether not to deliver messages to a consumer that
            published them.
        queueName:
          type: string
          description: The name of the Queue.
        redeliveredMsgCount:
          type: integer
          description: The number of guaranteed messages that were redelivered.
          format: int64
        redeliveryRequestCount:
          type: integer
          description: The number of consumer requests via negative acknowledgements
            (NACKs) to redeliver guaranteed messages.
          format: int64
        selector:
          type: string
          description: The value of the Flow selector.
        selectorExaminedMsgCount:
          type: integer
          description: The number of guaranteed messages examined by the Flow selector.
          format: int64
        selectorMatchedMsgCount:
          type: integer
          description: The number of guaranteed messages for which the Flow selector
            matched.
          format: int64
        selectorNotMatchedMsgCount:
          type: integer
          description: The number of guaranteed messages for which the Flow selector
            did not match.
          format: int64
        sessionName:
          type: string
          description: The name of the Transacted Session for the Flow.
        storeAndForwardAckedMsgCount:
          type: integer
          description: The number of guaranteed messages that used store and forward
            delivery and are acknowledged by the consumer.
          format: int64
        transportRetransmitMsgCount:
          type: integer
          description: The number of guaranteed messages that were retransmitted at
            the transport layer as part of a single delivery attempt. Available since
            2.18.
          format: int64
        unackedMsgCount:
          type: integer
          description: The number of guaranteed messages delivered but not yet acknowledged
            by the consumer.
          format: int64
        usedWindowSize:
          type: integer
          description: The number of guaranteed messages using the available window
            size.
          format: int64
        windowClosedCount:
          type: integer
          description: The number of times the window for guaranteed messages was
            filled and closed before an acknowledgement was received.
          format: int64
        windowSize:
          type: integer
          description: The number of outstanding guaranteed messages that can be transmitted
            over the Flow before an acknowledgement is received.
          format: int64
      example:
        clientName: clientName
        transportRetransmitMsgCount: 7
        selectorExaminedMsgCount: 1
        noLocalDelivery: true
        selectorNotMatchedMsgCount: 1
        windowSize: 9
        windowClosedCount: 5
        usedWindowSize: 4
        bindTime: 1
        activityState: activityState
        cutThroughAckedMsgCount: 5
        selector: selector
        msgVpnName: msgVpnName
        unackedMsgCount: 1
        activationTime: 6
        flowId: 5
        lowestAckPendingMsgId: 3
        storeAndForwardAckedMsgCount: 6
        ackedMsgCount: 0
        lastAckedMsgId: 7
        sessionName: sessionName
        highestAckPendingMsgId: 2
        redeliveredMsgCount: 4
        lastSelectorExaminedMsgId: 9
        activityUpdateState: activityUpdateState
        queueName: queueName
        deliveryState: deliveryState
        consumerRedeliveryRequestAllowed: true
        maxUnackedMsgsExceededMsgCount: 2
        redeliveryRequestCount: 7
        selectorMatchedMsgCount: 1
    MsgVpnQueueTxFlowCollections:
      type: object
    MsgVpnQueueTxFlowLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Queue Transmit Flow object.
      example:
        uri: uri
    MsgVpnQueueTxFlowResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnQueueTxFlowCollections'
        data:
          $ref: '#/components/schemas/MsgVpnQueueTxFlow'
        links:
          $ref: '#/components/schemas/MsgVpnQueueTxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          clientName: clientName
          transportRetransmitMsgCount: 7
          selectorExaminedMsgCount: 1
          noLocalDelivery: true
          selectorNotMatchedMsgCount: 1
          windowSize: 9
          windowClosedCount: 5
          usedWindowSize: 4
          bindTime: 1
          activityState: activityState
          cutThroughAckedMsgCount: 5
          selector: selector
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          activationTime: 6
          flowId: 5
          lowestAckPendingMsgId: 3
          storeAndForwardAckedMsgCount: 6
          ackedMsgCount: 0
          lastAckedMsgId: 7
          sessionName: sessionName
          highestAckPendingMsgId: 2
          redeliveredMsgCount: 4
          lastSelectorExaminedMsgId: 9
          activityUpdateState: activityUpdateState
          queueName: queueName
          deliveryState: deliveryState
          consumerRedeliveryRequestAllowed: true
          maxUnackedMsgsExceededMsgCount: 2
          redeliveryRequestCount: 7
          selectorMatchedMsgCount: 1
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnQueueTxFlowsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueTxFlowCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueTxFlow'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueTxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - clientName: clientName
          transportRetransmitMsgCount: 7
          selectorExaminedMsgCount: 1
          noLocalDelivery: true
          selectorNotMatchedMsgCount: 1
          windowSize: 9
          windowClosedCount: 5
          usedWindowSize: 4
          bindTime: 1
          activityState: activityState
          cutThroughAckedMsgCount: 5
          selector: selector
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          activationTime: 6
          flowId: 5
          lowestAckPendingMsgId: 3
          storeAndForwardAckedMsgCount: 6
          ackedMsgCount: 0
          lastAckedMsgId: 7
          sessionName: sessionName
          highestAckPendingMsgId: 2
          redeliveredMsgCount: 4
          lastSelectorExaminedMsgId: 9
          activityUpdateState: activityUpdateState
          queueName: queueName
          deliveryState: deliveryState
          consumerRedeliveryRequestAllowed: true
          maxUnackedMsgsExceededMsgCount: 2
          redeliveryRequestCount: 7
          selectorMatchedMsgCount: 1
        - clientName: clientName
          transportRetransmitMsgCount: 7
          selectorExaminedMsgCount: 1
          noLocalDelivery: true
          selectorNotMatchedMsgCount: 1
          windowSize: 9
          windowClosedCount: 5
          usedWindowSize: 4
          bindTime: 1
          activityState: activityState
          cutThroughAckedMsgCount: 5
          selector: selector
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          activationTime: 6
          flowId: 5
          lowestAckPendingMsgId: 3
          storeAndForwardAckedMsgCount: 6
          ackedMsgCount: 0
          lastAckedMsgId: 7
          sessionName: sessionName
          highestAckPendingMsgId: 2
          redeliveredMsgCount: 4
          lastSelectorExaminedMsgId: 9
          activityUpdateState: activityUpdateState
          queueName: queueName
          deliveryState: deliveryState
          consumerRedeliveryRequestAllowed: true
          maxUnackedMsgsExceededMsgCount: 2
          redeliveryRequestCount: 7
          selectorMatchedMsgCount: 1
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnQueuesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueue'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - averageRxByteRate: 7
          maxTtlExpiredDiscardedMsgCount: 3
          txMsgRate: 3
          redeliveryEnabled: true
          maxMsgSizeExceededDiscardedMsgCount: 3
          txUnackedMsgCount: 9
          maxMsgSize: 3
          bindRequestRate: 7
          partitionCount: 6
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          replayFailureCount: 5
          respectMsgPriorityEnabled: true
          bindSuccessCount: 1
          partitionClientName: partitionClientName
          replicationStandbyRxMsgCount: 1
          maxDeliveredUnackedMsgsPerFlow: 6
          lastSpooledMsgId: 6
          lowestMsgId: 6
          egressEnabled: true
          partitionRebalanceDelay: 4
          respectTtlEnabled: true
          lastReplayStartTime: 6
          msgSpoolUsage: 3
          lastReplayedMsgTxTime: 3
          partitionOperationalCount: 1
          rxByteRate: 8
          alreadyBoundBindFailureCount: 5
          highestAckedMsgId: 5
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          redeliveryDelayMaxInterval: 9
          maxRedeliveryExceededDiscardedMsgCount: 6
          rejectLowPriorityMsgLimit: 7
          partitionQueueName: partitionQueueName
          txByteRate: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          replayedAckedMsgCount: 8
          averageTxByteRate: 3
          maxBindCountExceededBindFailureCount: 5
          destinationGroupErrorDiscardedMsgCount: 7
          noLocalDeliveryDiscardedMsgCount: 4
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 2
          maxTtl: 8
          spooledByteCount: 4
          averageRxMsgRate: 9
          maxTtlExpiredToDmqFailedMsgCount: 3
          redeliveredMsgCount: 9
          virtualRouter: virtualRouter
          ingressEnabled: true
          spooledMsgCount: 8
          queueName: queueName
          inProgressAckMsgCount: 9
          partitionRebalanceStatus: partitionRebalanceStatus
          partitionNumber: 4
          replicationActiveAckPropTxMsgCount: 3
          maxTtlExceededDiscardedMsgCount: 7
          rxMsgRate: 6
          consumerAckPropagationEnabled: true
          networkTopic: networkTopic
          msgVpnName: msgVpnName
          averageTxMsgRate: 2
          lastReplayFailureTime: 9
          bindRequestCount: 4
          eventMsgSpoolUsageThreshold: null
          replayedTxMsgCount: 4
          replayStartCount: 4
          clientProfileDeniedDiscardedMsgCount: 1
          disabledBindFailureCount: 1
          createdByManagement: true
          disabledDiscardedMsgCount: 4
          replicationStandbyAckPropRxMsgCount: 0
          partitionStatus: partitionStatus
          xaTransactionNotSupportedDiscardedMsgCount: 8
          maxTtlExpiredToDmqMsgCount: 7
          maxRedeliveryExceededToDmqMsgCount: 4
          partitionScaleStatus: partitionScaleStatus
          txSelector: true
          eventRejectLowPriorityMsgLimitThreshold: null
          otherBindFailureCount: 0
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 9
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          transportRetransmitMsgCount: 9
          lowestAckedMsgId: 2
          maxMsgSpoolUsageExceededDiscardedMsgCount: 0
          durable: true
          replayState: replayState
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 8
          redeliveryDelayInitialInterval: 0
          deliveryDelay: 6
          maxBindCount: 6
          owner: owner
          replaySuccessCount: 6
          partitionRebalanceMaxHandoffTime: 7
          permission: no-access
          maxRedeliveryCount: 7
          msgSpoolPeakUsage: 5
          deletedMsgCount: 1
          invalidSelectorBindFailureCount: 6
          averageBindRequestRate: 2
          redeliveryDelayMultiplier: 0
          maxMsgSpoolUsage: 7
          lowPriorityMsgCongestionDiscardedMsgCount: 1
        - averageRxByteRate: 7
          maxTtlExpiredDiscardedMsgCount: 3
          txMsgRate: 3
          redeliveryEnabled: true
          maxMsgSizeExceededDiscardedMsgCount: 3
          txUnackedMsgCount: 9
          maxMsgSize: 3
          bindRequestRate: 7
          partitionCount: 6
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          replayFailureCount: 5
          respectMsgPriorityEnabled: true
          bindSuccessCount: 1
          partitionClientName: partitionClientName
          replicationStandbyRxMsgCount: 1
          maxDeliveredUnackedMsgsPerFlow: 6
          lastSpooledMsgId: 6
          lowestMsgId: 6
          egressEnabled: true
          partitionRebalanceDelay: 4
          respectTtlEnabled: true
          lastReplayStartTime: 6
          msgSpoolUsage: 3
          lastReplayedMsgTxTime: 3
          partitionOperationalCount: 1
          rxByteRate: 8
          alreadyBoundBindFailureCount: 5
          highestAckedMsgId: 5
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          redeliveryDelayMaxInterval: 9
          maxRedeliveryExceededDiscardedMsgCount: 6
          rejectLowPriorityMsgLimit: 7
          partitionQueueName: partitionQueueName
          txByteRate: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          replayedAckedMsgCount: 8
          averageTxByteRate: 3
          maxBindCountExceededBindFailureCount: 5
          destinationGroupErrorDiscardedMsgCount: 7
          noLocalDeliveryDiscardedMsgCount: 4
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 2
          maxTtl: 8
          spooledByteCount: 4
          averageRxMsgRate: 9
          maxTtlExpiredToDmqFailedMsgCount: 3
          redeliveredMsgCount: 9
          virtualRouter: virtualRouter
          ingressEnabled: true
          spooledMsgCount: 8
          queueName: queueName
          inProgressAckMsgCount: 9
          partitionRebalanceStatus: partitionRebalanceStatus
          partitionNumber: 4
          replicationActiveAckPropTxMsgCount: 3
          maxTtlExceededDiscardedMsgCount: 7
          rxMsgRate: 6
          consumerAckPropagationEnabled: true
          networkTopic: networkTopic
          msgVpnName: msgVpnName
          averageTxMsgRate: 2
          lastReplayFailureTime: 9
          bindRequestCount: 4
          eventMsgSpoolUsageThreshold: null
          replayedTxMsgCount: 4
          replayStartCount: 4
          clientProfileDeniedDiscardedMsgCount: 1
          disabledBindFailureCount: 1
          createdByManagement: true
          disabledDiscardedMsgCount: 4
          replicationStandbyAckPropRxMsgCount: 0
          partitionStatus: partitionStatus
          xaTransactionNotSupportedDiscardedMsgCount: 8
          maxTtlExpiredToDmqMsgCount: 7
          maxRedeliveryExceededToDmqMsgCount: 4
          partitionScaleStatus: partitionScaleStatus
          txSelector: true
          eventRejectLowPriorityMsgLimitThreshold: null
          otherBindFailureCount: 0
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 9
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          transportRetransmitMsgCount: 9
          lowestAckedMsgId: 2
          maxMsgSpoolUsageExceededDiscardedMsgCount: 0
          durable: true
          replayState: replayState
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 8
          redeliveryDelayInitialInterval: 0
          deliveryDelay: 6
          maxBindCount: 6
          owner: owner
          replaySuccessCount: 6
          partitionRebalanceMaxHandoffTime: 7
          permission: no-access
          maxRedeliveryCount: 7
          msgSpoolPeakUsage: 5
          deletedMsgCount: 1
          invalidSelectorBindFailureCount: 6
          averageBindRequestRate: 2
          redeliveryDelayMultiplier: 0
          maxMsgSpoolUsage: 7
          lowPriorityMsgCongestionDiscardedMsgCount: 1
        collections:
        - msgs:
            count: 0
          priorities:
            count: 6
          subscriptions:
            count: 1
          txFlows:
            count: 5
        - msgs:
            count: 0
          priorities:
            count: 6
          subscriptions:
            count: 1
          txFlows:
            count: 5
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - txFlowsUri: txFlowsUri
          subscriptionsUri: subscriptionsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
        - txFlowsUri: txFlowsUri
          subscriptionsUri: subscriptionsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
    MsgVpnRate:
      type: object
      properties:
        averageRxByteRate:
          type: integer
          description: "The one minute average of the message rate received by the\
            \ Message VPN, in bytes per second (B/sec). Deprecated since 2.13. This\
            \ attribute has been moved to the MsgVpn object."
          format: int64
        averageRxMsgRate:
          type: integer
          description: "The one minute average of the message rate received by the\
            \ Message VPN, in messages per second (msg/sec). Deprecated since 2.13.\
            \ This attribute has been moved to the MsgVpn object."
          format: int64
        averageTxByteRate:
          type: integer
          description: "The one minute average of the message rate transmitted by\
            \ the Message VPN, in bytes per second (B/sec). Deprecated since 2.13.\
            \ This attribute has been moved to the MsgVpn object."
          format: int64
        averageTxMsgRate:
          type: integer
          description: "The one minute average of the message rate transmitted by\
            \ the Message VPN, in messages per second (msg/sec). Deprecated since\
            \ 2.13. This attribute has been moved to the MsgVpn object."
          format: int64
        rxByteRate:
          type: integer
          description: "The current message rate received by the Message VPN, in bytes\
            \ per second (B/sec). Deprecated since 2.13. This attribute has been moved\
            \ to the MsgVpn object."
          format: int64
        rxMsgRate:
          type: integer
          description: "The current message rate received by the Message VPN, in messages\
            \ per second (msg/sec). Deprecated since 2.13. This attribute has been\
            \ moved to the MsgVpn object."
          format: int64
        tlsAverageRxByteRate:
          type: integer
          description: "The one minute average of the TLS message rate received by\
            \ the Message VPN, in bytes per second (B/sec). Deprecated since 2.13.\
            \ This attribute has been moved to the MsgVpn object."
          format: int64
        tlsAverageTxByteRate:
          type: integer
          description: "The one minute average of the TLS message rate transmitted\
            \ by the Message VPN, in bytes per second (B/sec). Deprecated since 2.13.\
            \ This attribute has been moved to the MsgVpn object."
          format: int64
        tlsRxByteRate:
          type: integer
          description: "The current TLS message rate received by the Message VPN,\
            \ in bytes per second (B/sec). Deprecated since 2.13. This attribute has\
            \ been moved to the MsgVpn object."
          format: int64
        tlsTxByteRate:
          type: integer
          description: "The current TLS message rate transmitted by the Message VPN,\
            \ in bytes per second (B/sec). Deprecated since 2.13. This attribute has\
            \ been moved to the MsgVpn object."
          format: int64
        txByteRate:
          type: integer
          description: "The current message rate transmitted by the Message VPN, in\
            \ bytes per second (B/sec). Deprecated since 2.13. This attribute has\
            \ been moved to the MsgVpn object."
          format: int64
        txMsgRate:
          type: integer
          description: "The current message rate transmitted by the Message VPN, in\
            \ messages per second (msg/sec). Deprecated since 2.13. This attribute\
            \ has been moved to the MsgVpn object."
          format: int64
      description: The rates for the Message VPN. Deprecated since 2.13. All attributes
        in this object have been moved to the MsgVpn object.
      example:
        tlsAverageTxByteRate: 9
        averageRxByteRate: 8
        txMsgRate: 4
        averageTxByteRate: 0
        tlsRxByteRate: 0
        tlsTxByteRate: 2
        averageRxMsgRate: 4
        tlsAverageRxByteRate: 2
        rxByteRate: 7
        rxMsgRate: 4
        averageTxMsgRate: 0
        txByteRate: 6
    MsgVpnReplayLog:
      type: object
      properties:
        egressEnabled:
          type: boolean
          description: Indicates whether the transmission of messages from the Replay
            Log is enabled.
        ingressEnabled:
          type: boolean
          description: Indicates whether the reception of messages to the Replay Log
            is enabled.
        maxSpoolUsage:
          type: integer
          description: "The maximum spool usage allowed by the Replay Log, in megabytes\
            \ (MB). If this limit is exceeded, old messages will be trimmed."
          format: int64
        msgSpoolUsage:
          type: integer
          description: "The spool usage of the Replay Log, in bytes (B)."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        replayLogName:
          type: string
          description: The name of the Replay Log.
        topicFilterEnabled:
          type: boolean
          description: Enable or disable topic filtering for the Replay Log. Available
            since 2.27.
      example:
        ingressEnabled: true
        replayLogName: replayLogName
        msgSpoolUsage: 5
        maxSpoolUsage: 1
        egressEnabled: true
        msgVpnName: msgVpnName
        topicFilterEnabled: true
    MsgVpnReplayLogCollections:
      type: object
      properties:
        msgs:
          $ref: '#/components/schemas/MsgVpnReplayLogCollectionsMsgs'
        topicFilterSubscriptions:
          $ref: '#/components/schemas/MsgVpnReplayLogCollectionsTopicFilterSubscriptions'
      example:
        msgs:
          count: 0
        topicFilterSubscriptions:
          count: 6
    MsgVpnReplayLogCollectionsMsgs:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the msgs collection.
          format: int64
      example:
        count: 0
    MsgVpnReplayLogCollectionsTopicFilterSubscriptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the topicFilterSubscriptions
            collection. Available since 2.27.
          format: int64
      example:
        count: 6
    MsgVpnReplayLogLinks:
      type: object
      properties:
        msgsUri:
          type: string
          description: The URI of this Replay Log's collection of Message objects.
        topicFilterSubscriptionsUri:
          type: string
          description: The URI of this Replay Log's collection of Topic Filter Subscription
            objects. Available since 2.27.
        uri:
          type: string
          description: The URI of this Replay Log object.
      example:
        topicFilterSubscriptionsUri: topicFilterSubscriptionsUri
        uri: uri
        msgsUri: msgsUri
    MsgVpnReplayLogMsg:
      type: object
      properties:
        attachmentSize:
          type: integer
          description: "The size of the message attachment, in bytes (B)."
          format: int64
        contentSize:
          type: integer
          description: "The size of the message content, in bytes (B)."
          format: int64
        dmqEligible:
          type: boolean
          description: Indicates whether the message is eligible for the Dead Message
            Queue (DMQ).
        msgId:
          type: integer
          description: The identifier (ID) of the message.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        priority:
          type: integer
          description: The priority level of the message.
          format: int32
        publisherId:
          type: integer
          description: The identifier (ID) of the message publisher.
          format: int64
        replayLogName:
          type: string
          description: The name of the Replay Log.
        replicationGroupMsgId:
          type: string
          description: An ID that uniquely identifies this Message within this replication
            group. Available since 2.21.
        sequenceNumber:
          type: integer
          description: The sequence number assigned to the message. Applicable only
            to messages received on sequenced topics.
          format: int64
        spooledTime:
          type: integer
          description: The timestamp of when the message was spooled in the Replay
            Log. This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
      example:
        replayLogName: replayLogName
        sequenceNumber: 2
        publisherId: 5
        attachmentSize: 0
        dmqEligible: true
        spooledTime: 7
        contentSize: 6
        msgId: 1
        msgVpnName: msgVpnName
        replicationGroupMsgId: replicationGroupMsgId
        priority: 5
    MsgVpnReplayLogMsgCollections:
      type: object
    MsgVpnReplayLogMsgLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Message object.
      example:
        uri: uri
    MsgVpnReplayLogMsgResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnReplayLogMsgCollections'
        data:
          $ref: '#/components/schemas/MsgVpnReplayLogMsg'
        links:
          $ref: '#/components/schemas/MsgVpnReplayLogMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          replayLogName: replayLogName
          sequenceNumber: 2
          publisherId: 5
          attachmentSize: 0
          dmqEligible: true
          spooledTime: 7
          contentSize: 6
          msgId: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          priority: 5
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnReplayLogMsgsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogMsgCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogMsg'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - replayLogName: replayLogName
          sequenceNumber: 2
          publisherId: 5
          attachmentSize: 0
          dmqEligible: true
          spooledTime: 7
          contentSize: 6
          msgId: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          priority: 5
        - replayLogName: replayLogName
          sequenceNumber: 2
          publisherId: 5
          attachmentSize: 0
          dmqEligible: true
          spooledTime: 7
          contentSize: 6
          msgId: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          priority: 5
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnReplayLogResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnReplayLogCollections'
        data:
          $ref: '#/components/schemas/MsgVpnReplayLog'
        links:
          $ref: '#/components/schemas/MsgVpnReplayLogLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          ingressEnabled: true
          replayLogName: replayLogName
          msgSpoolUsage: 5
          maxSpoolUsage: 1
          egressEnabled: true
          msgVpnName: msgVpnName
          topicFilterEnabled: true
        collections:
          msgs:
            count: 0
          topicFilterSubscriptions:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          topicFilterSubscriptionsUri: topicFilterSubscriptionsUri
          uri: uri
          msgsUri: msgsUri
    MsgVpnReplayLogTopicFilterSubscription:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        replayLogName:
          type: string
          description: The name of the Replay Log.
        topicFilterSubscription:
          type: string
          description: The topic of the Subscription.
      example:
        replayLogName: replayLogName
        topicFilterSubscription: topicFilterSubscription
        msgVpnName: msgVpnName
    MsgVpnReplayLogTopicFilterSubscriptionCollections:
      type: object
    MsgVpnReplayLogTopicFilterSubscriptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic Filter Subscription object.
      example:
        uri: uri
    MsgVpnReplayLogTopicFilterSubscriptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnReplayLogTopicFilterSubscriptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnReplayLogTopicFilterSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnReplayLogTopicFilterSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          replayLogName: replayLogName
          topicFilterSubscription: topicFilterSubscription
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnReplayLogTopicFilterSubscriptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogTopicFilterSubscriptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogTopicFilterSubscription'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogTopicFilterSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - replayLogName: replayLogName
          topicFilterSubscription: topicFilterSubscription
          msgVpnName: msgVpnName
        - replayLogName: replayLogName
          topicFilterSubscription: topicFilterSubscription
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnReplayLogsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLog'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - ingressEnabled: true
          replayLogName: replayLogName
          msgSpoolUsage: 5
          maxSpoolUsage: 1
          egressEnabled: true
          msgVpnName: msgVpnName
          topicFilterEnabled: true
        - ingressEnabled: true
          replayLogName: replayLogName
          msgSpoolUsage: 5
          maxSpoolUsage: 1
          egressEnabled: true
          msgVpnName: msgVpnName
          topicFilterEnabled: true
        collections:
        - msgs:
            count: 0
          topicFilterSubscriptions:
            count: 6
        - msgs:
            count: 0
          topicFilterSubscriptions:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - topicFilterSubscriptionsUri: topicFilterSubscriptionsUri
          uri: uri
          msgsUri: msgsUri
        - topicFilterSubscriptionsUri: topicFilterSubscriptionsUri
          uri: uri
          msgsUri: msgsUri
    MsgVpnReplicatedTopic:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        replicatedTopic:
          type: string
          description: The topic for applying replication. Published messages matching
            this topic will be replicated to the standby site.
        replicationMode:
          type: string
          description: |
            The replication mode for the Replicated Topic. The allowed values and their meaning are:

            <pre>
            "sync" - Messages are acknowledged when replicated (spooled remotely).
            "async" - Messages are acknowledged when pending replication (spooled locally).
            </pre>
          enum:
          - sync
          - async
      example:
        replicationMode: sync
        replicatedTopic: replicatedTopic
        msgVpnName: msgVpnName
    MsgVpnReplicatedTopicCollections:
      type: object
    MsgVpnReplicatedTopicLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Replicated Topic object.
      example:
        uri: uri
    MsgVpnReplicatedTopicResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnReplicatedTopicCollections'
        data:
          $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        links:
          $ref: '#/components/schemas/MsgVpnReplicatedTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnReplicatedTopicsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplicatedTopicCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplicatedTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        - replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnCollections'
        data:
          $ref: '#/components/schemas/MsgVpn'
        links:
          $ref: '#/components/schemas/MsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          replicationRemoteBridgeName: replicationRemoteBridgeName
          averageRxByteRate: 1
          txUncompressedByteRate: 7
          bindRequestRate: 7
          serviceRestIncomingPlainTextEnabled: true
          txCompressedByteRate: 1
          discardedRxMsgCount: 6
          replicationAckPropagationIntervalMsgCount: 6
          state: state
          serviceWebPlainTextUp: true
          replicationStandbyAckPropOutOfSeqRxMsgCount: 7
          restTlsServerCertValidateDateEnabled: true
          serviceWebTlsFailureReason: serviceWebTlsFailureReason
          replicationActivePromotedQueuedMsgCount: 1
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 9
          authenticationClientCertUsernameSource: certificate-thumbprint
          configSyncLocalRole: configSyncLocalRole
          authenticationClientCertMaxChainDepth: 3
          msgSpoolUsage: 3
          serviceMqttWebSocketEnabled: true
          serviceWebPlainTextFailureReason: serviceWebPlainTextFailureReason
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceMqttWebSocketFailureReason: serviceMqttWebSocketFailureReason
          authenticationClientCertEnabled: true
          averageRxCompressedByteRate: 2
          serviceSmfPlainTextFailureReason: serviceSmfPlainTextFailureReason
          serviceWebTlsUp: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          serviceRestIncomingPlainTextFailureReason: serviceRestIncomingPlainTextFailureReason
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          serviceMqttPlainTextCompressed: true
          eventPublishTopicFormatSmfEnabled: true
          maxEffectiveEndpointCount: 6
          authenticationBasicProfileName: authenticationBasicProfileName
          replicationBridgeBoundToQueue: true
          serviceRestIncomingMaxConnectionCount: 9
          serviceAmqpTlsListenPort: 0
          averageTxByteRate: 5
          eventServiceAmqpConnectionCountThreshold: null
          serviceRestMode: gateway
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          replicationBridgeName: replicationBridgeName
          maxSubscriptionCount: 5
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 4
          replicationBridgeUp: true
          controlTxMsgCount: 8
          serviceAmqpMaxConnectionCount: 2
          serviceMqttTlsUp: true
          maxEgressFlowCount: 9
          serviceMqttWebSocketListenPort: 0
          loginTxMsgCount: 1
          serviceWebTlsEnabled: true
          replicationStandbyTransactionRequestFailureCount: 8
          eventIngressMsgRateThreshold: null
          replicationStandbyTransactionRequestCount: 3
          eventPublishSubscriptionMode: "off"
          eventConnectionCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 0
          serviceRestIncomingTlsListenPort: 7
          dataRxByteCount: 0
          tlsAverageTxByteRate: 1
          rxCompressedByteRate: 4
          dataTxMsgCount: 4
          eventPublishMsgVpnEnabled: true
          dmrEnabled: true
          txCompressionRatio: txCompressionRatio
          msgVpnName: msgVpnName
          eventEndpointCountThreshold: null
          replicationStandbyTransactionRequestSuccessCount: 2
          sempOverMsgBusAdminEnabled: true
          eventServiceRestIncomingConnectionCountThreshold: null
          serviceSmfMaxConnectionCount: 0
          tlsRxByteCount: 6
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          configSyncLocalState: configSyncLocalState
          replicationStandbyReconcileRequestTxMsgCount: 1
          rxByteCount: 4
          replicationQueueMaxMsgSpoolUsage: 7
          eventServiceMqttConnectionCountThreshold: null
          serviceSmfPlainTextUp: true
          sempOverMsgBusAdminClientEnabled: true
          averageTxCompressedByteRate: 6
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 6
          serviceSmfTlsUp: true
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          replicationActiveMateFlowNotCongestedPeakTime: 5
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          replicationActiveSyncIneligiblePeakTime: 5
          serviceAmqpPlainTextListenPort: 5
          systemManager: true
          authenticationClientCertValidateDateEnabled: true
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          serviceRestIncomingTlsFailureReason: serviceRestIncomingTlsFailureReason
          configSyncLocalTimeInState: 7
          eventLogTag: eventLogTag
          rate:
            tlsAverageTxByteRate: 9
            averageRxByteRate: 8
            txMsgRate: 4
            averageTxByteRate: 0
            tlsRxByteRate: 0
            tlsTxByteRate: 2
            averageRxMsgRate: 4
            tlsAverageRxByteRate: 2
            rxByteRate: 7
            rxMsgRate: 4
            averageTxMsgRate: 0
            txByteRate: 6
          distributedCacheManagementEnabled: true
          discardedTxMsgCount: 8
          maxEffectiveTxFlowCount: 3
          serviceRestIncomingTlsCompressed: true
          msgReplayInitializingCount: 5
          bridgingTlsServerCertValidateNameEnabled: true
          rxMsgCount: 8
          replicationActiveSyncQueuedMsgCount: 1
          subscriptionExportProgress: 0
          tlsRxByteRate: 2
          counter:
            loginRxMsgCount: 1
            msgSpoolRxMsgCount: 7
            controlTxMsgCount: 7
            tlsRxByteCount: 0
            controlRxByteCount: 7
            tlsTxByteCount: 9
            dataRxByteCount: 5
            dataRxMsgCount: 3
            controlRxMsgCount: 3
            loginTxMsgCount: 4
            controlTxByteCount: 3
            dataTxByteCount: 4
            msgSpoolTxMsgCount: 9
            dataTxMsgCount: 0
            discardedRxMsgCount: 6
            discardedTxMsgCount: 4
          serviceAmqpPlainTextFailureReason: serviceAmqpPlainTextFailureReason
          averageTxUncompressedByteRate: 3
          controlTxByteCount: 4
          rxUncompressedByteRate: 0
          mqttRetainMaxMemory: 3
          msgSpoolMsgCount: 0
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          msgReplayFailedCount: 9
          eventIngressFlowCountThreshold: null
          serviceMqttMaxConnectionCount: 7
          txMsgRate: 3
          authorizationProfileName: authorizationProfileName
          serviceMqttTlsFailureReason: serviceMqttTlsFailureReason
          replicationActiveReconcileRequestRxMsgCount: 4
          serviceAmqpPlainTextCompressed: true
          serviceMqttPlainTextFailureReason: serviceMqttPlainTextFailureReason
          serviceMqttWebSocketCompressed: true
          replicationActiveSyncQueuedAsAsyncMsgCount: 3
          replicationBridgeEgressFlowWindowSize: 9
          restTlsServerCertMaxChainDepth: 9
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold: null
          bridgingTlsServerCertValidateDateEnabled: true
          maxEffectiveSubscriptionCount: 8
          authorizationType: ldap
          replicationStandbyRxMsgCount: 4
          serviceMqttTlsWebSocketCompressed: true
          msgSpoolRxMsgCount: 3
          bridgingTlsServerCertMaxChainDepth: 0
          replicationBridgeCompressedDataEnabled: true
          rxCompressedByteCount: 6
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          averageRxUncompressedByteRate: 6
          eventTransactedSessionCountThreshold: null
          eventSubscriptionCountThreshold: null
          serviceMqttPlainTextListenPort: 6
          serviceMqttWebSocketUp: true
          dataTxByteCount: 5
          failureReason: failureReason
          serviceRestIncomingAuthorizationHeaderHandling: drop
          txUncompressedByteCount: 8
          rxByteRate: 8
          loginRxMsgCount: 2
          serviceRestIncomingPlainTextCompressed: true
          replicationQueueBound: true
          controlRxMsgCount: 0
          serviceMqttTlsWebSocketUp: true
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationActiveMateFlowCongestedPeakTime: 3
          txByteRate: 5
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          sempOverMsgBusEnabled: true
          maxTransactionCount: 7
          serviceMqttTlsListenPort: 4
          rxUncompressedByteCount: 6
          serviceRestIncomingTlsEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          tlsAverageRxByteRate: 7
          authenticationOauthEnabled: true
          tlsTxByteCount: 4
          averageRxMsgRate: 6
          dataRxMsgCount: 7
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 8
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          serviceAmqpTlsUp: true
          configSyncLocalLastResult: configSyncLocalLastResult
          authenticationClientCertCertificateMatchingRulesEnabled: true
          replicationActiveLocallyConsumedMsgCount: 1
          txByteCount: 3
          replicationActiveAsyncQueuedMsgCount: 1
          serviceMqttTlsEnabled: true
          maxEffectiveTransactionCount: 1
          serviceMqttPlainTextUp: true
          serviceMqttTlsWebSocketFailureReason: serviceMqttTlsWebSocketFailureReason
          serviceSmfTlsFailureReason: serviceSmfTlsFailureReason
          replicationActiveAckPropTxMsgCount: 9
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold: null
          rxMsgRate: 2
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          txMsgCount: 5
          averageTxMsgRate: 3
          eventEgressFlowCountThreshold: null
          serviceAmqpTlsCompressed: true
          eventMsgSpoolUsageThreshold: null
          replicationActiveTransitionToSyncIneligibleCount: 3
          configSyncLocalKey: configSyncLocalKey
          controlRxByteCount: 6
          jndiEnabled: true
          maxEffectiveTransactedSessionCount: 9
          eventPublishClientEnabled: true
          replicationSyncEligible: true
          replicationActiveSyncEligiblePeakTime: 5
          maxEffectiveRxFlowCount: 4
          tlsAllowDowngradeToPlainTextEnabled: true
          replicationStandbyAckPropRxMsgCount: 9
          maxConnectionCount: 8
          msgReplayActiveCount: 3
          eventServiceSmfConnectionCountThreshold: null
          tlsTxByteRate: 2
          serviceAmqpPlainTextUp: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 3
            clearValue: 4
          replicationBridgeRetryDelay: 7
          txCompressedByteCount: 3
          serviceAmqpTlsFailureReason: serviceAmqpTlsFailureReason
          alias: alias
          authenticationOauthDefaultProfileName: authenticationOauthDefaultProfileName
          serviceMqttTlsWebSocketListenPort: 0
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          rxCompressionRatio: rxCompressionRatio
          maxIngressFlowCount: 0
          serviceMqttTlsCompressed: true
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 8
          msgReplayPendingCompleteCount: 7
          serviceRestIncomingTlsUp: true
          serviceRestIncomingPlainTextUp: true
          averageBindRequestRate: 6
          msgSpoolTxMsgCount: 2
          replicationRemoteBridgeUp: true
          maxMsgSpoolUsage: 5
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
        collections:
          telemetryProfiles:
            count: 6
          clients:
            count: 3
          clientProfiles:
            count: 7
          topicEndpoints:
            count: 9
          queueTemplates:
            count: 1
          distributedCaches:
            count: 4
          jndiTopics:
            count: 1
          clientUsernames:
            count: 9
          mqttRetainCaches:
            count: 6
          replayLogs:
            count: 5
          authorizationGroups:
            count: 5
          mqttSessions:
            count: 7
          aclProfiles:
            count: 0
          restDeliveryPoints:
            count: 9
          jndiConnectionFactories:
            count: 1
          configSyncRemoteNodes:
            count: 2
          jndiQueues:
            count: 1
          authenticationOauthProfiles:
            count: 6
          bridges:
            count: 5
          transactions:
            count: 6
          dmrBridges:
            count: 7
          certMatchingRules:
            count: 2
          queues:
            count: 4
          topicEndpointTemplates:
            count: 8
          authenticationOauthProviders:
            count: 1
          replicatedTopics:
            count: 9
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          telemetryProfilesUri: telemetryProfilesUri
          authenticationOauthProvidersUri: authenticationOauthProvidersUri
          transactionsUri: transactionsUri
          authenticationOauthProfilesUri: authenticationOauthProfilesUri
          clientProfilesUri: clientProfilesUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          configSyncRemoteNodesUri: configSyncRemoteNodesUri
          clientsUri: clientsUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          dmrBridgesUri: dmrBridgesUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          jndiQueuesUri: jndiQueuesUri
          topicEndpointsUri: topicEndpointsUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          replayLogsUri: replayLogsUri
          certMatchingRulesUri: certMatchingRulesUri
          authorizationGroupsUri: authorizationGroupsUri
    MsgVpnRestDeliveryPoint:
      type: object
      properties:
        clientName:
          type: string
          description: The name of the Client for the REST Delivery Point.
        clientProfileName:
          type: string
          description: The name of the Client Profile for the REST Delivery Point.
        enabled:
          type: boolean
          description: Indicates whether the REST Delivery Point is enabled.
        lastFailureReason:
          type: string
          description: The reason for the last REST Delivery Point failure.
        lastFailureTime:
          type: integer
          description: The timestamp of the last REST Delivery Point failure. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time).
          format: int32
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point.
        service:
          type: string
          description: The name of the service that this REST Delivery Point connects
            to. Internally the broker does not use this value; it is informational
            only. Available since 2.19.
        timeConnectionsBlocked:
          type: integer
          description: The percentage of time the REST Delivery Point connections
            are blocked from transmitting data.
          format: int64
        up:
          type: boolean
          description: Indicates whether the operational state of the REST Delivery
            Point is up.
        vendor:
          type: string
          description: The name of the vendor that this REST Delivery Point connects
            to. Internally the broker does not use this value; it is informational
            only. Available since 2.19.
      example:
        clientName: clientName
        timeConnectionsBlocked: 5
        service: service
        vendor: vendor
        clientProfileName: clientProfileName
        lastFailureTime: 1
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        up: true
        enabled: true
        lastFailureReason: lastFailureReason
    MsgVpnRestDeliveryPointCollections:
      type: object
      properties:
        queueBindings:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointCollectionsQueueBindings'
        restConsumers:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointCollectionsRestConsumers'
      example:
        restConsumers:
          count: 6
        queueBindings:
          count: 0
    MsgVpnRestDeliveryPointCollectionsQueueBindings:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the queueBindings collection.
          format: int64
      example:
        count: 0
    MsgVpnRestDeliveryPointCollectionsRestConsumers:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the restConsumers collection.
          format: int64
      example:
        count: 6
    MsgVpnRestDeliveryPointLinks:
      type: object
      properties:
        queueBindingsUri:
          type: string
          description: The URI of this REST Delivery Point's collection of Queue Binding
            objects.
        restConsumersUri:
          type: string
          description: The URI of this REST Delivery Point's collection of REST Consumer
            objects.
        uri:
          type: string
          description: The URI of this REST Delivery Point object.
      example:
        restConsumersUri: restConsumersUri
        queueBindingsUri: queueBindingsUri
        uri: uri
    MsgVpnRestDeliveryPointQueueBinding:
      type: object
      properties:
        gatewayReplaceTargetAuthorityEnabled:
          type: boolean
          description: Indicates whether the authority for the request-target is replaced
            with that configured for the REST Consumer remote.
        lastFailureReason:
          type: string
          description: The reason for the last REST Delivery Point queue binding failure.
        lastFailureTime:
          type: integer
          description: The timestamp of the last REST Delivery Point queue binding
            failure. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time).
          format: int32
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        postRequestTarget:
          type: string
          description: The request-target string being used when sending requests
            to a REST Consumer.
        queueBindingName:
          type: string
          description: The name of a queue in the Message VPN.
        requestTargetEvaluation:
          type: string
          description: |-
            The type of evaluation to perform on the request target. The allowed values and their meaning are:

            <pre>
            "none" - Do not evaluate substitution expressions on the request target.
            "substitution-expressions" - Evaluate substitution expressions on the request target.
            </pre>
             Available since 2.23.
          enum:
          - none
          - substitution-expressions
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point.
        up:
          type: boolean
          description: Indicates whether the operational state of the REST Delivery
            Point queue binding is up.
        uptime:
          type: integer
          description: The amount of time in seconds since the REST Delivery Point
            queue binding was up.
          format: int64
      example:
        requestTargetEvaluation: none
        gatewayReplaceTargetAuthorityEnabled: true
        queueBindingName: queueBindingName
        lastFailureTime: 1
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        up: true
        lastFailureReason: lastFailureReason
        postRequestTarget: postRequestTarget
        uptime: 5
    MsgVpnRestDeliveryPointQueueBindingCollections:
      type: object
      properties:
        protectedRequestHeaders:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingCollectionsProtectedRequestHeaders'
        requestHeaders:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingCollectionsRequestHeaders'
      example:
        requestHeaders:
          count: 6
        protectedRequestHeaders:
          count: 0
    MsgVpnRestDeliveryPointQueueBindingCollectionsProtectedRequestHeaders:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the protectedRequestHeaders
            collection. Available since 2.30.
          format: int64
      example:
        count: 0
    MsgVpnRestDeliveryPointQueueBindingCollectionsRequestHeaders:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the requestHeaders collection.
            Available since 2.23.
          format: int64
      example:
        count: 6
    MsgVpnRestDeliveryPointQueueBindingLinks:
      type: object
      properties:
        protectedRequestHeadersUri:
          type: string
          description: The URI of this Queue Binding's collection of Protected Request
            Header objects. Available since 2.30.
        requestHeadersUri:
          type: string
          description: The URI of this Queue Binding's collection of Request Header
            objects. Available since 2.23.
        uri:
          type: string
          description: The URI of this Queue Binding object.
      example:
        requestHeadersUri: requestHeadersUri
        protectedRequestHeadersUri: protectedRequestHeadersUri
        uri: uri
    MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeader:
      type: object
      properties:
        headerName:
          type: string
          description: The name of the protected HTTP request header.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        queueBindingName:
          type: string
          description: The name of a queue in the Message VPN.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point.
      example:
        headerName: headerName
        queueBindingName: queueBindingName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
    MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderCollections:
      type: object
    MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Protected Request Header object.
      example:
        uri: uri
    MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderCollections'
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeader'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          headerName: headerName
          queueBindingName: queueBindingName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeadersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeader'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingProtectedRequestHeaderLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - headerName: headerName
          queueBindingName: queueBindingName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        - headerName: headerName
          queueBindingName: queueBindingName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnRestDeliveryPointQueueBindingRequestHeader:
      type: object
      properties:
        headerName:
          type: string
          description: The name of the HTTP request header.
        headerValue:
          type: string
          description: A substitution expression for the value of the HTTP request
            header.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        queueBindingName:
          type: string
          description: The name of a queue in the Message VPN.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point.
      example:
        headerName: headerName
        queueBindingName: queueBindingName
        headerValue: headerValue
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
    MsgVpnRestDeliveryPointQueueBindingRequestHeaderCollections:
      type: object
    MsgVpnRestDeliveryPointQueueBindingRequestHeaderLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Request Header object.
      example:
        uri: uri
    MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingRequestHeaderCollections'
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingRequestHeader'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingRequestHeaderLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          headerName: headerName
          queueBindingName: queueBindingName
          headerValue: headerValue
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnRestDeliveryPointQueueBindingRequestHeadersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingRequestHeaderCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingRequestHeader'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingRequestHeaderLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - headerName: headerName
          queueBindingName: queueBindingName
          headerValue: headerValue
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        - headerName: headerName
          queueBindingName: queueBindingName
          headerValue: headerValue
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnRestDeliveryPointQueueBindingResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingCollections'
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          requestTargetEvaluation: none
          gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          lastFailureTime: 1
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          lastFailureReason: lastFailureReason
          postRequestTarget: postRequestTarget
          uptime: 5
        collections:
          requestHeaders:
            count: 6
          protectedRequestHeaders:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          requestHeadersUri: requestHeadersUri
          protectedRequestHeadersUri: protectedRequestHeadersUri
          uri: uri
    MsgVpnRestDeliveryPointQueueBindingsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - requestTargetEvaluation: none
          gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          lastFailureTime: 1
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          lastFailureReason: lastFailureReason
          postRequestTarget: postRequestTarget
          uptime: 5
        - requestTargetEvaluation: none
          gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          lastFailureTime: 1
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          lastFailureReason: lastFailureReason
          postRequestTarget: postRequestTarget
          uptime: 5
        collections:
        - requestHeaders:
            count: 6
          protectedRequestHeaders:
            count: 0
        - requestHeaders:
            count: 6
          protectedRequestHeaders:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - requestHeadersUri: requestHeadersUri
          protectedRequestHeadersUri: protectedRequestHeadersUri
          uri: uri
        - requestHeadersUri: requestHeadersUri
          protectedRequestHeadersUri: protectedRequestHeadersUri
          uri: uri
    MsgVpnRestDeliveryPointResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointCollections'
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          clientName: clientName
          timeConnectionsBlocked: 5
          service: service
          vendor: vendor
          clientProfileName: clientProfileName
          lastFailureTime: 1
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          enabled: true
          lastFailureReason: lastFailureReason
        collections:
          restConsumers:
            count: 6
          queueBindings:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
    MsgVpnRestDeliveryPointRestConsumer:
      type: object
      properties:
        authenticationAwsAccessKeyId:
          type: string
          description: The AWS access key id. Available since 2.26.
        authenticationAwsRegion:
          type: string
          description: The AWS region id. Available since 2.26.
        authenticationAwsService:
          type: string
          description: The AWS service id. Available since 2.26.
        authenticationClientCertConfigTime:
          type: integer
          description: The timestamp of when the client-certificate was configured.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Available since 2.28.
          format: int32
        authenticationClientCertThumbprint:
          type: string
          description: The thumbprint of the client-certificate. Available since 2.28.
        authenticationHttpBasicUsername:
          type: string
          description: The username that the REST Consumer will use to login to the
            REST host.
        authenticationHttpHeaderName:
          type: string
          description: The authentication header name. Available since 2.15.
        authenticationOauthClientId:
          type: string
          description: The OAuth client ID. Available since 2.19.
        authenticationOauthClientLastFailureReason:
          type: string
          description: The reason for the most recent OAuth token retrieval failure.
            Available since 2.19.
        authenticationOauthClientLastFailureTime:
          type: integer
          description: The time of the last OAuth token retrieval failure. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
            Available since 2.19.
          format: int32
        authenticationOauthClientScope:
          type: string
          description: The OAuth scope. Available since 2.19.
        authenticationOauthClientTokenEndpoint:
          type: string
          description: The OAuth token endpoint URL that the REST Consumer will use
            to request a token for login to the REST host. Must begin with "https".
            Available since 2.19.
        authenticationOauthClientTokenExpiryDefault:
          type: integer
          description: "The default expiry time for a token, in seconds. Only used\
            \ when the token endpoint does not return an expiry time. Changes to this\
            \ attribute are synchronized to HA mates and replication sites via config-sync.\
            \ Available since 2.30."
          format: int32
        authenticationOauthClientTokenLifetime:
          type: integer
          description: The validity duration of the OAuth token. Available since 2.19.
          format: int64
        authenticationOauthClientTokenRetrievedTime:
          type: integer
          description: The time at which the broker requested the token from the OAuth
            token endpoint. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time). Available since 2.19.
          format: int32
        authenticationOauthClientTokenState:
          type: string
          description: |-
            The current state of the current OAuth token. The allowed values and their meaning are:

            <pre>
            "valid" - The token is valid.
            "invalid" - The token is invalid.
            </pre>
             Available since 2.19.
        authenticationOauthJwtLastFailureReason:
          type: string
          description: The reason for the most recent OAuth token retrieval failure.
            Available since 2.21.
        authenticationOauthJwtLastFailureTime:
          type: integer
          description: The time of the last OAuth token retrieval failure. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
            Available since 2.21.
          format: int32
        authenticationOauthJwtTokenEndpoint:
          type: string
          description: The OAuth token endpoint URL that the REST Consumer will use
            to request a token for login to the REST host. Available since 2.21.
        authenticationOauthJwtTokenExpiryDefault:
          type: integer
          description: "The default expiry time for a token, in seconds. Only used\
            \ when the token endpoint does not return an expiry time. Changes to this\
            \ attribute are synchronized to HA mates and replication sites via config-sync.\
            \ Available since 2.30."
          format: int32
        authenticationOauthJwtTokenLifetime:
          type: integer
          description: The validity duration of the OAuth token. Available since 2.21.
          format: int64
        authenticationOauthJwtTokenRetrievedTime:
          type: integer
          description: The time at which the broker requested the token from the OAuth
            token endpoint. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time). Available since 2.21.
          format: int32
        authenticationOauthJwtTokenState:
          type: string
          description: |-
            The current state of the current OAuth token. The allowed values and their meaning are:

            <pre>
            "valid" - The token is valid.
            "invalid" - The token is invalid.
            </pre>
             Available since 2.21.
        authenticationScheme:
          type: string
          description: "The authentication scheme used by the REST Consumer to login\
            \ to the REST host. The allowed values and their meaning are:\n\n<pre>\n\
            \"none\" - Login with no authentication. This may be useful for anonymous\
            \ connections or when a REST Consumer does not require authentication.\n\
            \"http-basic\" - Login with a username and optional password according\
            \ to HTTP Basic authentication as per RFC2616.\n\"client-certificate\"\
            \ - Login with a client TLS certificate as per RFC5246. Client certificate\
            \ authentication is only available on TLS connections.\n\"http-header\"\
            \ - Login with a specified HTTP header.\n\"oauth-client\" - Login with\
            \ OAuth 2.0 client credentials.\n\"oauth-jwt\" - Login with OAuth (RFC\
            \ 7523 JWT Profile).\n\"transparent\" - Login using the Authorization\
            \ header from the message properties, if present. Transparent authentication\
            \ passes along existing Authorization header metadata instead of discarding\
            \ it. Note that if the message is coming from a REST producer, the REST\
            \ service must be configured to forward the Authorization header.\n\"\
            aws\" - Login using AWS Signature Version 4 authentication (AWS4-HMAC-SHA256).\n\
            </pre>\n"
          enum:
          - none
          - http-basic
          - client-certificate
          - http-header
          - oauth-client
          - oauth-jwt
          - transparent
          - aws
        counter:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerCounter'
        enabled:
          type: boolean
          description: Indicates whether the REST Consumer is enabled.
        httpMethod:
          type: string
          description: |-
            The HTTP method to use (POST or PUT). This is used only when operating in the REST service "messaging" mode and is ignored in "gateway" mode. The allowed values and their meaning are:

            <pre>
            "post" - Use the POST HTTP method.
            "put" - Use the PUT HTTP method.
            </pre>
             Available since 2.17.
          enum:
          - post
          - put
        httpRequestConnectionCloseTxMsgCount:
          type: integer
          description: The number of HTTP request messages transmitted to the REST
            Consumer to close the connection. Available since 2.13.
          format: int64
        httpRequestOutstandingTxMsgCount:
          type: integer
          description: The number of HTTP request messages transmitted to the REST
            Consumer that are waiting for a response. Available since 2.13.
          format: int64
        httpRequestTimedOutTxMsgCount:
          type: integer
          description: The number of HTTP request messages transmitted to the REST
            Consumer that have timed out. Available since 2.13.
          format: int64
        httpRequestTxByteCount:
          type: integer
          description: "The amount of HTTP request messages transmitted to the REST\
            \ Consumer, in bytes (B). Available since 2.13."
          format: int64
        httpRequestTxMsgCount:
          type: integer
          description: The number of HTTP request messages transmitted to the REST
            Consumer. Available since 2.13.
          format: int64
        httpResponseErrorRxMsgCount:
          type: integer
          description: The number of HTTP client/server error response messages received
            from the REST Consumer. Available since 2.13.
          format: int64
        httpResponseRxByteCount:
          type: integer
          description: "The amount of HTTP response messages received from the REST\
            \ Consumer, in bytes (B). Available since 2.13."
          format: int64
        httpResponseRxMsgCount:
          type: integer
          description: The number of HTTP response messages received from the REST
            Consumer. Available since 2.13.
          format: int64
        httpResponseSuccessRxMsgCount:
          type: integer
          description: The number of HTTP successful response messages received from
            the REST Consumer. Available since 2.13.
          format: int64
        lastConnectionFailureLocalEndpoint:
          type: string
          description: The local endpoint at the time of the last connection failure.
        lastConnectionFailureReason:
          type: string
          description: The reason for the last connection failure between local and
            remote endpoints.
        lastConnectionFailureRemoteEndpoint:
          type: string
          description: The remote endpoint at the time of the last connection failure.
        lastConnectionFailureTime:
          type: integer
          description: The timestamp of the last connection failure between local
            and remote endpoints. This value represents the number of seconds since
            1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        lastFailureReason:
          type: string
          description: The reason for the last REST Consumer failure.
        lastFailureTime:
          type: integer
          description: The timestamp of the last REST Consumer failure. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        localInterface:
          type: string
          description: "The interface that will be used for all outgoing connections\
            \ associated with the REST Consumer. When unspecified, an interface is\
            \ automatically chosen."
        maxPostWaitTime:
          type: integer
          description: "The maximum amount of time (in seconds) to wait for an HTTP\
            \ POST response from the REST Consumer. Once this time is exceeded, the\
            \ TCP connection is reset."
          format: int32
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        outgoingConnectionCount:
          type: integer
          description: The number of concurrent TCP connections open to the REST Consumer.
          format: int32
        remoteHost:
          type: string
          description: The IP address or DNS name for the REST Consumer.
        remoteOutgoingConnectionUpCount:
          type: integer
          description: The number of outgoing connections for the REST Consumer that
            are up.
          format: int64
        remotePort:
          type: integer
          description: The port associated with the host of the REST Consumer.
          format: int64
        restConsumerName:
          type: string
          description: The name of the REST Consumer.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point.
        retryDelay:
          type: integer
          description: The number of seconds that must pass before retrying the remote
            REST Consumer connection.
          format: int32
        tlsCipherSuiteList:
          type: string
          description: The colon-separated list of cipher suites the REST Consumer
            uses in its encrypted connection. The value `"default"` implies all supported
            suites ordered from most secure to least secure. The list of default cipher
            suites is available in the `tlsCipherSuiteMsgBackboneDefaultList` attribute
            of the Broker object in the Monitoring API. The REST Consumer should choose
            the first suite from this list that it supports.
        tlsEnabled:
          type: boolean
          description: Indicates whether encryption (TLS) is enabled for the REST
            Consumer.
        up:
          type: boolean
          description: Indicates whether the operational state of the REST Consumer
            is up.
      example:
        authenticationOauthClientLastFailureReason: authenticationOauthClientLastFailureReason
        authenticationOauthJwtTokenRetrievedTime: 4
        remoteHost: remoteHost
        lastConnectionFailureTime: 2
        lastFailureReason: lastFailureReason
        authenticationAwsRegion: authenticationAwsRegion
        authenticationOauthJwtTokenLifetime: 2
        localInterface: localInterface
        retryDelay: 3
        authenticationAwsService: authenticationAwsService
        httpRequestOutstandingTxMsgCount: 9
        httpResponseRxMsgCount: 6
        lastConnectionFailureRemoteEndpoint: lastConnectionFailureRemoteEndpoint
        authenticationClientCertConfigTime: 1
        authenticationOauthClientTokenExpiryDefault: 5
        httpRequestTimedOutTxMsgCount: 6
        msgVpnName: msgVpnName
        up: true
        authenticationHttpBasicUsername: authenticationHttpBasicUsername
        httpRequestConnectionCloseTxMsgCount: 9
        authenticationOauthJwtLastFailureReason: authenticationOauthJwtLastFailureReason
        maxPostWaitTime: 6
        authenticationOauthClientLastFailureTime: 5
        restConsumerName: restConsumerName
        authenticationOauthClientTokenLifetime: 2
        authenticationClientCertThumbprint: authenticationClientCertThumbprint
        httpRequestTxMsgCount: 9
        authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
        tlsCipherSuiteList: tlsCipherSuiteList
        restDeliveryPointName: restDeliveryPointName
        lastConnectionFailureLocalEndpoint: lastConnectionFailureLocalEndpoint
        httpResponseSuccessRxMsgCount: 1
        httpRequestTxByteCount: 8
        lastConnectionFailureReason: lastConnectionFailureReason
        httpResponseRxByteCount: 3
        httpMethod: post
        enabled: true
        outgoingConnectionCount: 5
        tlsEnabled: true
        authenticationScheme: none
        lastFailureTime: 6
        authenticationOauthClientTokenRetrievedTime: 7
        authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
        authenticationOauthClientTokenState: authenticationOauthClientTokenState
        authenticationAwsAccessKeyId: authenticationAwsAccessKeyId
        authenticationOauthClientId: authenticationOauthClientId
        httpResponseErrorRxMsgCount: 6
        remotePort: 3
        counter:
          httpRequestConnectionCloseTxMsgCount: 7
          httpRequestTxMsgCount: 6
          httpRequestOutstandingTxMsgCount: 1
          httpResponseRxMsgCount: 4
          httpResponseErrorRxMsgCount: 7
          httpResponseRxByteCount: 1
          httpRequestTimedOutTxMsgCount: 1
          httpResponseSuccessRxMsgCount: 5
          httpRequestTxByteCount: 1
        authenticationOauthJwtTokenState: authenticationOauthJwtTokenState
        authenticationHttpHeaderName: authenticationHttpHeaderName
        authenticationOauthJwtLastFailureTime: 9
        authenticationOauthJwtTokenExpiryDefault: 3
        authenticationOauthClientScope: authenticationOauthClientScope
        remoteOutgoingConnectionUpCount: 6
    MsgVpnRestDeliveryPointRestConsumerCollections:
      type: object
      properties:
        oauthJwtClaims:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerCollectionsOauthJwtClaims'
        tlsTrustedCommonNames:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerCollectionsTlsTrustedCommonNames'
      example:
        oauthJwtClaims:
          count: 0
        tlsTrustedCommonNames:
          count: 6
    MsgVpnRestDeliveryPointRestConsumerCollectionsOauthJwtClaims:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the oauthJwtClaims collection.
            Available since 2.21.
          format: int64
      example:
        count: 0
    MsgVpnRestDeliveryPointRestConsumerCollectionsTlsTrustedCommonNames:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the tlsTrustedCommonNames collection.
            Deprecated since 2.17. Common Name validation has been replaced by Server
            Certificate Name validation.
          format: int64
      example:
        count: 6
    MsgVpnRestDeliveryPointRestConsumerCounter:
      type: object
      properties:
        httpRequestConnectionCloseTxMsgCount:
          type: integer
          description: The number of HTTP request messages transmitted to the REST
            Consumer to close the connection. Deprecated since 2.13. This attribute
            has been moved to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
        httpRequestOutstandingTxMsgCount:
          type: integer
          description: The number of HTTP request messages transmitted to the REST
            Consumer that are waiting for a response. Deprecated since 2.13. This
            attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
        httpRequestTimedOutTxMsgCount:
          type: integer
          description: The number of HTTP request messages transmitted to the REST
            Consumer that have timed out. Deprecated since 2.13. This attribute has
            been moved to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
        httpRequestTxByteCount:
          type: integer
          description: "The amount of HTTP request messages transmitted to the REST\
            \ Consumer, in bytes (B). Deprecated since 2.13. This attribute has been\
            \ moved to the MsgVpnRestDeliveryPointRestConsumer object."
          format: int64
        httpRequestTxMsgCount:
          type: integer
          description: The number of HTTP request messages transmitted to the REST
            Consumer. Deprecated since 2.13. This attribute has been moved to the
            MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
        httpResponseErrorRxMsgCount:
          type: integer
          description: The number of HTTP client/server error response messages received
            from the REST Consumer. Deprecated since 2.13. This attribute has been
            moved to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
        httpResponseRxByteCount:
          type: integer
          description: "The amount of HTTP response messages received from the REST\
            \ Consumer, in bytes (B). Deprecated since 2.13. This attribute has been\
            \ moved to the MsgVpnRestDeliveryPointRestConsumer object."
          format: int64
        httpResponseRxMsgCount:
          type: integer
          description: The number of HTTP response messages received from the REST
            Consumer. Deprecated since 2.13. This attribute has been moved to the
            MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
        httpResponseSuccessRxMsgCount:
          type: integer
          description: The number of HTTP successful response messages received from
            the REST Consumer. Deprecated since 2.13. This attribute has been moved
            to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
      description: The counters for the REST Consumer. Deprecated since 2.13. All
        attributes in this object have been moved to the MsgVpnRestDeliveryPointRestConsumer
        object.
      example:
        httpRequestConnectionCloseTxMsgCount: 7
        httpRequestTxMsgCount: 6
        httpRequestOutstandingTxMsgCount: 1
        httpResponseRxMsgCount: 4
        httpResponseErrorRxMsgCount: 7
        httpResponseRxByteCount: 1
        httpRequestTimedOutTxMsgCount: 1
        httpResponseSuccessRxMsgCount: 5
        httpRequestTxByteCount: 1
    MsgVpnRestDeliveryPointRestConsumerLinks:
      type: object
      properties:
        oauthJwtClaimsUri:
          type: string
          description: The URI of this REST Consumer's collection of Claim objects.
            Available since 2.21.
        tlsTrustedCommonNamesUri:
          type: string
          description: The URI of this REST Consumer's collection of Trusted Common
            Name objects. Deprecated since 2.17. Common Name validation has been replaced
            by Server Certificate Name validation.
        uri:
          type: string
          description: The URI of this REST Consumer object.
      example:
        oauthJwtClaimsUri: oauthJwtClaimsUri
        uri: uri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        oauthJwtClaimName:
          type: string
          description: "The name of the additional claim. Cannot be \"exp\", \"iat\"\
            , or \"jti\"."
        oauthJwtClaimValue:
          type: string
          description: "The value of the additional claim, which must be a string\
            \ containing a valid JSON value."
        restConsumerName:
          type: string
          description: The name of the REST Consumer.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point.
      example:
        oauthJwtClaimValue: oauthJwtClaimValue
        oauthJwtClaimName: oauthJwtClaimName
        restConsumerName: restConsumerName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimCollections:
      type: object
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Claim object.
      example:
        uri: uri
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimCollections'
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        - oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnRestDeliveryPointRestConsumerResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerCollections'
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          authenticationOauthClientLastFailureReason: authenticationOauthClientLastFailureReason
          authenticationOauthJwtTokenRetrievedTime: 4
          remoteHost: remoteHost
          lastConnectionFailureTime: 2
          lastFailureReason: lastFailureReason
          authenticationAwsRegion: authenticationAwsRegion
          authenticationOauthJwtTokenLifetime: 2
          localInterface: localInterface
          retryDelay: 3
          authenticationAwsService: authenticationAwsService
          httpRequestOutstandingTxMsgCount: 9
          httpResponseRxMsgCount: 6
          lastConnectionFailureRemoteEndpoint: lastConnectionFailureRemoteEndpoint
          authenticationClientCertConfigTime: 1
          authenticationOauthClientTokenExpiryDefault: 5
          httpRequestTimedOutTxMsgCount: 6
          msgVpnName: msgVpnName
          up: true
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          httpRequestConnectionCloseTxMsgCount: 9
          authenticationOauthJwtLastFailureReason: authenticationOauthJwtLastFailureReason
          maxPostWaitTime: 6
          authenticationOauthClientLastFailureTime: 5
          restConsumerName: restConsumerName
          authenticationOauthClientTokenLifetime: 2
          authenticationClientCertThumbprint: authenticationClientCertThumbprint
          httpRequestTxMsgCount: 9
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          restDeliveryPointName: restDeliveryPointName
          lastConnectionFailureLocalEndpoint: lastConnectionFailureLocalEndpoint
          httpResponseSuccessRxMsgCount: 1
          httpRequestTxByteCount: 8
          lastConnectionFailureReason: lastConnectionFailureReason
          httpResponseRxByteCount: 3
          httpMethod: post
          enabled: true
          outgoingConnectionCount: 5
          tlsEnabled: true
          authenticationScheme: none
          lastFailureTime: 6
          authenticationOauthClientTokenRetrievedTime: 7
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthClientTokenState: authenticationOauthClientTokenState
          authenticationAwsAccessKeyId: authenticationAwsAccessKeyId
          authenticationOauthClientId: authenticationOauthClientId
          httpResponseErrorRxMsgCount: 6
          remotePort: 3
          counter:
            httpRequestConnectionCloseTxMsgCount: 7
            httpRequestTxMsgCount: 6
            httpRequestOutstandingTxMsgCount: 1
            httpResponseRxMsgCount: 4
            httpResponseErrorRxMsgCount: 7
            httpResponseRxByteCount: 1
            httpRequestTimedOutTxMsgCount: 1
            httpResponseSuccessRxMsgCount: 5
            httpRequestTxByteCount: 1
          authenticationOauthJwtTokenState: authenticationOauthJwtTokenState
          authenticationHttpHeaderName: authenticationHttpHeaderName
          authenticationOauthJwtLastFailureTime: 9
          authenticationOauthJwtTokenExpiryDefault: 3
          authenticationOauthClientScope: authenticationOauthClientScope
          remoteOutgoingConnectionUpCount: 6
        collections:
          oauthJwtClaims:
            count: 0
          tlsTrustedCommonNames:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN. Deprecated since 2.17. Common
            Name validation has been replaced by Server Certificate Name validation.
        restConsumerName:
          type: string
          description: The name of the REST Consumer. Deprecated since 2.17. Common
            Name validation has been replaced by Server Certificate Name validation.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point. Deprecated since 2.17.
            Common Name validation has been replaced by Server Certificate Name validation.
        tlsTrustedCommonName:
          type: string
          description: The expected trusted common name of the remote certificate.
            Deprecated since 2.17. Common Name validation has been replaced by Server
            Certificate Name validation.
      example:
        restConsumerName: restConsumerName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        tlsTrustedCommonName: tlsTrustedCommonName
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameCollections:
      type: object
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Trusted Common Name object.
      example:
        uri: uri
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameCollections'
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        - restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnRestDeliveryPointRestConsumersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - authenticationOauthClientLastFailureReason: authenticationOauthClientLastFailureReason
          authenticationOauthJwtTokenRetrievedTime: 4
          remoteHost: remoteHost
          lastConnectionFailureTime: 2
          lastFailureReason: lastFailureReason
          authenticationAwsRegion: authenticationAwsRegion
          authenticationOauthJwtTokenLifetime: 2
          localInterface: localInterface
          retryDelay: 3
          authenticationAwsService: authenticationAwsService
          httpRequestOutstandingTxMsgCount: 9
          httpResponseRxMsgCount: 6
          lastConnectionFailureRemoteEndpoint: lastConnectionFailureRemoteEndpoint
          authenticationClientCertConfigTime: 1
          authenticationOauthClientTokenExpiryDefault: 5
          httpRequestTimedOutTxMsgCount: 6
          msgVpnName: msgVpnName
          up: true
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          httpRequestConnectionCloseTxMsgCount: 9
          authenticationOauthJwtLastFailureReason: authenticationOauthJwtLastFailureReason
          maxPostWaitTime: 6
          authenticationOauthClientLastFailureTime: 5
          restConsumerName: restConsumerName
          authenticationOauthClientTokenLifetime: 2
          authenticationClientCertThumbprint: authenticationClientCertThumbprint
          httpRequestTxMsgCount: 9
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          restDeliveryPointName: restDeliveryPointName
          lastConnectionFailureLocalEndpoint: lastConnectionFailureLocalEndpoint
          httpResponseSuccessRxMsgCount: 1
          httpRequestTxByteCount: 8
          lastConnectionFailureReason: lastConnectionFailureReason
          httpResponseRxByteCount: 3
          httpMethod: post
          enabled: true
          outgoingConnectionCount: 5
          tlsEnabled: true
          authenticationScheme: none
          lastFailureTime: 6
          authenticationOauthClientTokenRetrievedTime: 7
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthClientTokenState: authenticationOauthClientTokenState
          authenticationAwsAccessKeyId: authenticationAwsAccessKeyId
          authenticationOauthClientId: authenticationOauthClientId
          httpResponseErrorRxMsgCount: 6
          remotePort: 3
          counter:
            httpRequestConnectionCloseTxMsgCount: 7
            httpRequestTxMsgCount: 6
            httpRequestOutstandingTxMsgCount: 1
            httpResponseRxMsgCount: 4
            httpResponseErrorRxMsgCount: 7
            httpResponseRxByteCount: 1
            httpRequestTimedOutTxMsgCount: 1
            httpResponseSuccessRxMsgCount: 5
            httpRequestTxByteCount: 1
          authenticationOauthJwtTokenState: authenticationOauthJwtTokenState
          authenticationHttpHeaderName: authenticationHttpHeaderName
          authenticationOauthJwtLastFailureTime: 9
          authenticationOauthJwtTokenExpiryDefault: 3
          authenticationOauthClientScope: authenticationOauthClientScope
          remoteOutgoingConnectionUpCount: 6
        - authenticationOauthClientLastFailureReason: authenticationOauthClientLastFailureReason
          authenticationOauthJwtTokenRetrievedTime: 4
          remoteHost: remoteHost
          lastConnectionFailureTime: 2
          lastFailureReason: lastFailureReason
          authenticationAwsRegion: authenticationAwsRegion
          authenticationOauthJwtTokenLifetime: 2
          localInterface: localInterface
          retryDelay: 3
          authenticationAwsService: authenticationAwsService
          httpRequestOutstandingTxMsgCount: 9
          httpResponseRxMsgCount: 6
          lastConnectionFailureRemoteEndpoint: lastConnectionFailureRemoteEndpoint
          authenticationClientCertConfigTime: 1
          authenticationOauthClientTokenExpiryDefault: 5
          httpRequestTimedOutTxMsgCount: 6
          msgVpnName: msgVpnName
          up: true
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          httpRequestConnectionCloseTxMsgCount: 9
          authenticationOauthJwtLastFailureReason: authenticationOauthJwtLastFailureReason
          maxPostWaitTime: 6
          authenticationOauthClientLastFailureTime: 5
          restConsumerName: restConsumerName
          authenticationOauthClientTokenLifetime: 2
          authenticationClientCertThumbprint: authenticationClientCertThumbprint
          httpRequestTxMsgCount: 9
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          restDeliveryPointName: restDeliveryPointName
          lastConnectionFailureLocalEndpoint: lastConnectionFailureLocalEndpoint
          httpResponseSuccessRxMsgCount: 1
          httpRequestTxByteCount: 8
          lastConnectionFailureReason: lastConnectionFailureReason
          httpResponseRxByteCount: 3
          httpMethod: post
          enabled: true
          outgoingConnectionCount: 5
          tlsEnabled: true
          authenticationScheme: none
          lastFailureTime: 6
          authenticationOauthClientTokenRetrievedTime: 7
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthClientTokenState: authenticationOauthClientTokenState
          authenticationAwsAccessKeyId: authenticationAwsAccessKeyId
          authenticationOauthClientId: authenticationOauthClientId
          httpResponseErrorRxMsgCount: 6
          remotePort: 3
          counter:
            httpRequestConnectionCloseTxMsgCount: 7
            httpRequestTxMsgCount: 6
            httpRequestOutstandingTxMsgCount: 1
            httpResponseRxMsgCount: 4
            httpResponseErrorRxMsgCount: 7
            httpResponseRxByteCount: 1
            httpRequestTimedOutTxMsgCount: 1
            httpResponseSuccessRxMsgCount: 5
            httpRequestTxByteCount: 1
          authenticationOauthJwtTokenState: authenticationOauthJwtTokenState
          authenticationHttpHeaderName: authenticationHttpHeaderName
          authenticationOauthJwtLastFailureTime: 9
          authenticationOauthJwtTokenExpiryDefault: 3
          authenticationOauthClientScope: authenticationOauthClientScope
          remoteOutgoingConnectionUpCount: 6
        collections:
        - oauthJwtClaims:
            count: 0
          tlsTrustedCommonNames:
            count: 6
        - oauthJwtClaims:
            count: 0
          tlsTrustedCommonNames:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnRestDeliveryPointsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - clientName: clientName
          timeConnectionsBlocked: 5
          service: service
          vendor: vendor
          clientProfileName: clientProfileName
          lastFailureTime: 1
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          enabled: true
          lastFailureReason: lastFailureReason
        - clientName: clientName
          timeConnectionsBlocked: 5
          service: service
          vendor: vendor
          clientProfileName: clientProfileName
          lastFailureTime: 1
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          enabled: true
          lastFailureReason: lastFailureReason
        collections:
        - restConsumers:
            count: 6
          queueBindings:
            count: 0
        - restConsumers:
            count: 6
          queueBindings:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
        - restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
    MsgVpnTelemetryProfile:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the Telemetry Profile ACL Profile.
        clientProfileName:
          type: string
          description: The name of the Telemetry Profile Client Profile.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        queueEventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueEventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueMaxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind to the Queue.
          format: int64
        queueMaxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed by the Queue, in megabytes\
            \ (MB)."
          format: int64
        queueName:
          type: string
          description: The name of the Telemetry Profile Queue.
        receiverAclConnectDefaultAction:
          type: string
          description: |
            The default action to take when a receiver client connects to the broker. The allowed values and their meaning are:

            <pre>
            "allow" - Allow client connection unless an exception is found for it.
            "disallow" - Disallow client connection unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
        receiverEnabled:
          type: boolean
          description: "Enable or disable the ability for receiver clients to consume\
            \ from the #telemetry queue."
        receiverEventConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        receiverMaxConnectionCountPerClientUsername:
          type: integer
          description: The maximum number of receiver connections per Client Username.
          format: int64
        receiverTcpCongestionWindowSize:
          type: integer
          description: "The TCP initial congestion window size for clients using the\
            \ Client Profile, in multiples of the TCP Maximum Segment Size (MSS).\
            \ Changing the value from its default of 2 results in non-compliance with\
            \ RFC 2581. Contact support before changing this value."
          format: int64
        receiverTcpKeepaliveCount:
          type: integer
          description: The number of TCP keepalive retransmissions to a client using
            the Client Profile before declaring that it is not available.
          format: int64
        receiverTcpKeepaliveIdleTime:
          type: integer
          description: "The amount of time a client connection using the Client Profile\
            \ must remain idle before TCP begins sending keepalive probes, in seconds."
          format: int64
        receiverTcpKeepaliveInterval:
          type: integer
          description: "The amount of time between TCP keepalive retransmissions to\
            \ a client using the Client Profile when no acknowledgement is received,\
            \ in seconds."
          format: int64
        receiverTcpMaxSegmentSize:
          type: integer
          description: "The TCP maximum segment size for clients using the Client\
            \ Profile, in bytes. Changes are applied to all existing connections."
          format: int64
        receiverTcpMaxWindowSize:
          type: integer
          description: "The TCP maximum window size for clients using the Client Profile,\
            \ in kilobytes. Changes are applied to all existing connections."
          format: int64
        telemetryProfileName:
          type: string
          description: The name of the Telemetry Profile.
        traceEnabled:
          type: boolean
          description: "Enable or disable generation of all trace span data messages.\
            \ When enabled, the state of configured trace filters control which messages\
            \ get traced. When disabled, trace span data messages are never generated,\
            \ regardless of the state of trace filters."
      example:
        queueMaxBindCount: 1
        receiverEventConnectionCountPerClientUsernameThreshold: null
        receiverMaxConnectionCountPerClientUsername: 5
        receiverTcpKeepaliveInterval: 3
        clientProfileName: clientProfileName
        telemetryProfileName: telemetryProfileName
        receiverTcpKeepaliveCount: 7
        aclProfileName: aclProfileName
        queueEventBindCountThreshold:
          clearPercent: 7
          setPercent: 7
          setValue: 6
          clearValue: 0
        receiverTcpMaxWindowSize: 4
        queueName: queueName
        receiverAclConnectDefaultAction: allow
        receiverTcpCongestionWindowSize: 2
        receiverTcpMaxSegmentSize: 2
        queueEventMsgSpoolUsageThreshold: null
        msgVpnName: msgVpnName
        receiverTcpKeepaliveIdleTime: 9
        traceEnabled: true
        queueMaxMsgSpoolUsage: 5
        receiverEnabled: true
    MsgVpnTelemetryProfileCollections:
      type: object
      properties:
        receiverAclConnectExceptions:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileCollectionsReceiverAclConnectExceptions'
        traceFilters:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileCollectionsTraceFilters'
      example:
        traceFilters:
          count: 6
        receiverAclConnectExceptions:
          count: 0
    MsgVpnTelemetryProfileCollectionsReceiverAclConnectExceptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the receiverAclConnectExceptions
            collection.
          format: int64
      example:
        count: 0
    MsgVpnTelemetryProfileCollectionsTraceFilters:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the traceFilters collection.
          format: int64
      example:
        count: 6
    MsgVpnTelemetryProfileLinks:
      type: object
      properties:
        receiverAclConnectExceptionsUri:
          type: string
          description: The URI of this Telemetry Profile's collection of Receiver
            ACL Connect Exception objects.
        traceFiltersUri:
          type: string
          description: The URI of this Telemetry Profile's collection of Trace Filter
            objects.
        uri:
          type: string
          description: The URI of this Telemetry Profile object.
      example:
        receiverAclConnectExceptionsUri: receiverAclConnectExceptionsUri
        traceFiltersUri: traceFiltersUri
        uri: uri
    MsgVpnTelemetryProfileReceiverAclConnectException:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        receiverAclConnectExceptionAddress:
          type: string
          description: The IP address/netmask of the receiver connect exception in
            CIDR form.
        telemetryProfileName:
          type: string
          description: The name of the Telemetry Profile.
      example:
        msgVpnName: msgVpnName
        telemetryProfileName: telemetryProfileName
        receiverAclConnectExceptionAddress: receiverAclConnectExceptionAddress
    MsgVpnTelemetryProfileReceiverAclConnectExceptionCollections:
      type: object
    MsgVpnTelemetryProfileReceiverAclConnectExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Receiver ACL Connect Exception object.
      example:
        uri: uri
    MsgVpnTelemetryProfileReceiverAclConnectExceptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileReceiverAclConnectExceptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileReceiverAclConnectException'
        links:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileReceiverAclConnectExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          msgVpnName: msgVpnName
          telemetryProfileName: telemetryProfileName
          receiverAclConnectExceptionAddress: receiverAclConnectExceptionAddress
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnTelemetryProfileReceiverAclConnectExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileReceiverAclConnectExceptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileReceiverAclConnectException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileReceiverAclConnectExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - msgVpnName: msgVpnName
          telemetryProfileName: telemetryProfileName
          receiverAclConnectExceptionAddress: receiverAclConnectExceptionAddress
        - msgVpnName: msgVpnName
          telemetryProfileName: telemetryProfileName
          receiverAclConnectExceptionAddress: receiverAclConnectExceptionAddress
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnTelemetryProfileResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTelemetryProfile'
        links:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          queueMaxBindCount: 1
          receiverEventConnectionCountPerClientUsernameThreshold: null
          receiverMaxConnectionCountPerClientUsername: 5
          receiverTcpKeepaliveInterval: 3
          clientProfileName: clientProfileName
          telemetryProfileName: telemetryProfileName
          receiverTcpKeepaliveCount: 7
          aclProfileName: aclProfileName
          queueEventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          receiverTcpMaxWindowSize: 4
          queueName: queueName
          receiverAclConnectDefaultAction: allow
          receiverTcpCongestionWindowSize: 2
          receiverTcpMaxSegmentSize: 2
          queueEventMsgSpoolUsageThreshold: null
          msgVpnName: msgVpnName
          receiverTcpKeepaliveIdleTime: 9
          traceEnabled: true
          queueMaxMsgSpoolUsage: 5
          receiverEnabled: true
        collections:
          traceFilters:
            count: 6
          receiverAclConnectExceptions:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          receiverAclConnectExceptionsUri: receiverAclConnectExceptionsUri
          traceFiltersUri: traceFiltersUri
          uri: uri
    MsgVpnTelemetryProfileTraceFilter:
      type: object
      properties:
        enabled:
          type: boolean
          description: "Enable or disable the trace filter. When the filter is disabled,\
            \ the filter's subscriptions will not trigger a message to be traced."
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        telemetryProfileName:
          type: string
          description: The name of the Telemetry Profile.
        traceFilterName:
          type: string
          description: "A name used to identify the trace filter. Consider a name\
            \ that describes the subscriptions contained within the filter, such as\
            \ the name of the application and/or the scenario in which the trace filter\
            \ might be enabled, such as \"appNameDebug\"."
      example:
        traceFilterName: traceFilterName
        msgVpnName: msgVpnName
        telemetryProfileName: telemetryProfileName
        enabled: true
    MsgVpnTelemetryProfileTraceFilterCollections:
      type: object
      properties:
        subscriptions:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterCollectionsSubscriptions'
      example:
        subscriptions:
          count: 0
    MsgVpnTelemetryProfileTraceFilterCollectionsSubscriptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the subscriptions collection.
          format: int64
      example:
        count: 0
    MsgVpnTelemetryProfileTraceFilterLinks:
      type: object
      properties:
        subscriptionsUri:
          type: string
          description: The URI of this Trace Filter's collection of Telemetry Trace
            Filter Subscription objects.
        uri:
          type: string
          description: The URI of this Trace Filter object.
      example:
        subscriptionsUri: subscriptionsUri
        uri: uri
    MsgVpnTelemetryProfileTraceFilterResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilter'
        links:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          traceFilterName: traceFilterName
          msgVpnName: msgVpnName
          telemetryProfileName: telemetryProfileName
          enabled: true
        collections:
          subscriptions:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          subscriptionsUri: subscriptionsUri
          uri: uri
    MsgVpnTelemetryProfileTraceFilterSubscription:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        subscription:
          type: string
          description: Messages matching this subscription will follow this filter's
            configuration.
        subscriptionSyntax:
          type: string
          description: |
            The syntax of the trace filter subscription. The allowed values and their meaning are:

            <pre>
            "smf" - Subscription uses SMF syntax.
            "mqtt" - Subscription uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
        telemetryProfileName:
          type: string
          description: The name of the Telemetry Profile.
        traceFilterName:
          type: string
          description: "A name used to identify the trace filter. Consider a name\
            \ that describes the subscriptions contained within the filter, such as\
            \ the name of the application and/or the scenario in which the trace filter\
            \ might be enabled, such as \"appNameDebug\"."
      example:
        subscriptionSyntax: smf
        traceFilterName: traceFilterName
        msgVpnName: msgVpnName
        subscription: subscription
        telemetryProfileName: telemetryProfileName
    MsgVpnTelemetryProfileTraceFilterSubscriptionCollections:
      type: object
    MsgVpnTelemetryProfileTraceFilterSubscriptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Telemetry Trace Filter Subscription object.
      example:
        uri: uri
    MsgVpnTelemetryProfileTraceFilterSubscriptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterSubscriptionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          subscriptionSyntax: smf
          traceFilterName: traceFilterName
          msgVpnName: msgVpnName
          subscription: subscription
          telemetryProfileName: telemetryProfileName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnTelemetryProfileTraceFilterSubscriptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterSubscriptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterSubscription'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - subscriptionSyntax: smf
          traceFilterName: traceFilterName
          msgVpnName: msgVpnName
          subscription: subscription
          telemetryProfileName: telemetryProfileName
        - subscriptionSyntax: smf
          traceFilterName: traceFilterName
          msgVpnName: msgVpnName
          subscription: subscription
          telemetryProfileName: telemetryProfileName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnTelemetryProfileTraceFiltersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilter'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileTraceFilterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - traceFilterName: traceFilterName
          msgVpnName: msgVpnName
          telemetryProfileName: telemetryProfileName
          enabled: true
        - traceFilterName: traceFilterName
          msgVpnName: msgVpnName
          telemetryProfileName: telemetryProfileName
          enabled: true
        collections:
        - subscriptions:
            count: 0
        - subscriptions:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - subscriptionsUri: subscriptionsUri
          uri: uri
        - subscriptionsUri: subscriptionsUri
          uri: uri
    MsgVpnTelemetryProfilesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfile'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTelemetryProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - queueMaxBindCount: 1
          receiverEventConnectionCountPerClientUsernameThreshold: null
          receiverMaxConnectionCountPerClientUsername: 5
          receiverTcpKeepaliveInterval: 3
          clientProfileName: clientProfileName
          telemetryProfileName: telemetryProfileName
          receiverTcpKeepaliveCount: 7
          aclProfileName: aclProfileName
          queueEventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          receiverTcpMaxWindowSize: 4
          queueName: queueName
          receiverAclConnectDefaultAction: allow
          receiverTcpCongestionWindowSize: 2
          receiverTcpMaxSegmentSize: 2
          queueEventMsgSpoolUsageThreshold: null
          msgVpnName: msgVpnName
          receiverTcpKeepaliveIdleTime: 9
          traceEnabled: true
          queueMaxMsgSpoolUsage: 5
          receiverEnabled: true
        - queueMaxBindCount: 1
          receiverEventConnectionCountPerClientUsernameThreshold: null
          receiverMaxConnectionCountPerClientUsername: 5
          receiverTcpKeepaliveInterval: 3
          clientProfileName: clientProfileName
          telemetryProfileName: telemetryProfileName
          receiverTcpKeepaliveCount: 7
          aclProfileName: aclProfileName
          queueEventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          receiverTcpMaxWindowSize: 4
          queueName: queueName
          receiverAclConnectDefaultAction: allow
          receiverTcpCongestionWindowSize: 2
          receiverTcpMaxSegmentSize: 2
          queueEventMsgSpoolUsageThreshold: null
          msgVpnName: msgVpnName
          receiverTcpKeepaliveIdleTime: 9
          traceEnabled: true
          queueMaxMsgSpoolUsage: 5
          receiverEnabled: true
        collections:
        - traceFilters:
            count: 6
          receiverAclConnectExceptions:
            count: 0
        - traceFilters:
            count: 6
          receiverAclConnectExceptions:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - receiverAclConnectExceptionsUri: receiverAclConnectExceptionsUri
          traceFiltersUri: traceFiltersUri
          uri: uri
        - receiverAclConnectExceptionsUri: receiverAclConnectExceptionsUri
          traceFiltersUri: traceFiltersUri
          uri: uri
    MsgVpnTopicEndpoint:
      type: object
      properties:
        accessType:
          type: string
          description: |
            The access type for delivering messages to consumer flows bound to the Topic Endpoint. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to bound consumer flows in a round-robin (if partition count is zero) or partitioned (if partition count is non-zero) fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
        alreadyBoundBindFailureCount:
          type: integer
          description: The number of Topic Endpoint bind failures due to being already
            bound.
          format: int64
        averageBindRequestRate:
          type: integer
          description: "The one minute average of the bind request rate received by\
            \ the Topic Endpoint, in binds per second (binds/sec). Available since\
            \ 2.25."
          format: int64
        averageRxByteRate:
          type: integer
          description: "The one minute average of the message rate received by the\
            \ Topic Endpoint, in bytes per second (B/sec)."
          format: int64
        averageRxMsgRate:
          type: integer
          description: "The one minute average of the message rate received by the\
            \ Topic Endpoint, in messages per second (msg/sec)."
          format: int64
        averageTxByteRate:
          type: integer
          description: "The one minute average of the message rate transmitted by\
            \ the Topic Endpoint, in bytes per second (B/sec)."
          format: int64
        averageTxMsgRate:
          type: integer
          description: "The one minute average of the message rate transmitted by\
            \ the Topic Endpoint, in messages per second (msg/sec)."
          format: int64
        bindRequestCount:
          type: integer
          description: The number of consumer requests to bind to the Topic Endpoint.
          format: int64
        bindRequestRate:
          type: integer
          description: "The current bind request rate received by the Topic Endpoint,\
            \ in binds per second (binds/sec). Available since 2.25."
          format: int64
        bindSuccessCount:
          type: integer
          description: The number of successful consumer requests to bind to the Topic
            Endpoint.
          format: int64
        bindTimeForwardingMode:
          type: string
          description: |
            The forwarding mode of the Topic Endpoint at bind time. The allowed values and their meaning are:

            <pre>
            "store-and-forward" - Deliver messages using the guaranteed data path.
            "cut-through" - Deliver messages using the direct and guaranteed data paths for lower latency.
            </pre>
        clientProfileDeniedDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to being denied by the Client Profile.
          format: int64
        consumerAckPropagationEnabled:
          type: boolean
          description: Indicates whether the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN is enabled.
        createdByManagement:
          type: boolean
          description: Indicates whether the Topic Endpoint was created by a management
            API (CLI or SEMP).
        deadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ) used by the Topic
            Endpoint.
        deletedMsgCount:
          type: integer
          description: The number of guaranteed messages deleted from the Topic Endpoint.
          format: int64
        deliveryCountEnabled:
          type: boolean
          description: Enable or disable the ability for client applications to query
            the message delivery count of messages received from the Topic Endpoint.
            This is a controlled availability feature. Please contact support to find
            out if this feature is supported for your use case. Available since 2.19.
        deliveryDelay:
          type: integer
          description: "The delay, in seconds, to apply to messages arriving on the\
            \ Topic Endpoint before the messages are eligible for delivery. Available\
            \ since 2.22."
          format: int64
        destinationGroupErrorDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to a destination group error.
          format: int64
        destinationTopic:
          type: string
          description: The destination topic of the Topic Endpoint.
        disabledBindFailureCount:
          type: integer
          description: The number of Topic Endpoint bind failures due to being disabled.
          format: int64
        disabledDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to it being disabled.
          format: int64
        durable:
          type: boolean
          description: Indicates whether the Topic Endpoint is durable and not temporary.
        egressEnabled:
          type: boolean
          description: Indicates whether the transmission of messages from the Topic
            Endpoint is enabled.
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        highestAckedMsgId:
          type: integer
          description: The highest identifier (ID) of guaranteed messages in the Topic
            Endpoint that were acknowledged.
          format: int64
        highestMsgId:
          type: integer
          description: The highest identifier (ID) of guaranteed messages in the Topic
            Endpoint.
          format: int64
        inProgressAckMsgCount:
          type: integer
          description: The number of acknowledgement messages received by the Topic
            Endpoint that are in the process of updating and deleting associated guaranteed
            messages.
          format: int64
        ingressEnabled:
          type: boolean
          description: Indicates whether the reception of messages to the Topic Endpoint
            is enabled.
        invalidSelectorBindFailureCount:
          type: integer
          description: The number of Topic Endpoint bind failures due to an invalid
            selector.
          format: int64
        lastReplayCompleteTime:
          type: integer
          description: The timestamp of the last completed replay for the Topic Endpoint.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        lastReplayFailureReason:
          type: string
          description: The reason for the last replay failure for the Topic Endpoint.
        lastReplayFailureTime:
          type: integer
          description: The timestamp of the last replay failure for the Topic Endpoint.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        lastReplayStartTime:
          type: integer
          description: The timestamp of the last replay started for the Topic Endpoint.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        lastReplayedMsgTxTime:
          type: integer
          description: The timestamp of the last replayed message transmitted by the
            Topic Endpoint. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time).
          format: int32
        lastSelectorExaminedMsgId:
          type: integer
          description: The identifier (ID) of the last message examined by the Topic
            Endpoint selector.
          format: int64
        lastSpooledMsgId:
          type: integer
          description: The identifier (ID) of the last guaranteed message spooled
            in the Topic Endpoint.
          format: int64
        lowPriorityMsgCongestionDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to low priority message congestion control.
          format: int64
        lowPriorityMsgCongestionState:
          type: string
          description: |
            The state of the low priority message congestion in the Topic Endpoint. The allowed values and their meaning are:

            <pre>
            "disabled" - Messages are not being checked for priority.
            "not-congested" - Low priority messages are being stored and delivered.
            "congested" - Low priority messages are being discarded.
            </pre>
        lowestAckedMsgId:
          type: integer
          description: The lowest identifier (ID) of guaranteed messages in the Topic
            Endpoint that were acknowledged.
          format: int64
        lowestMsgId:
          type: integer
          description: The lowest identifier (ID) of guaranteed messages in the Topic
            Endpoint.
          format: int64
        maxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind to the Topic
            Endpoint.
          format: int64
        maxBindCountExceededBindFailureCount:
          type: integer
          description: The number of Topic Endpoint bind failures due to the maximum
            bind count being exceeded.
          format: int64
        maxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Topic Endpoint.
          format: int64
        maxEffectiveBindCount:
          type: integer
          description: The effective maximum number of consumer flows that can bind
            to the Topic Endpoint.
          format: int32
        maxMsgSize:
          type: integer
          description: "The maximum message size allowed in the Topic Endpoint, in\
            \ bytes (B)."
          format: int32
        maxMsgSizeExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum message size being exceeded.
          format: int64
        maxMsgSpoolUsageExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum message spool usage being exceeded.
          format: int64
        maxRedeliveryCount:
          type: integer
          description: The maximum number of times the Topic Endpoint will attempt
            redelivery of a message prior to it being discarded or moved to the DMQ.
            A value of 0 means to retry forever.
          format: int64
        maxRedeliveryExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum redelivery attempts being exceeded.
          format: int64
        maxRedeliveryExceededToDmqFailedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum redelivery attempts being exceeded and failing to move
            to the Dead Message Queue (DMQ).
          format: int64
        maxRedeliveryExceededToDmqMsgCount:
          type: integer
          description: The number of guaranteed messages moved to the Dead Message
            Queue (DMQ) by the Topic Endpoint due to the maximum redelivery attempts
            being exceeded.
          format: int64
        maxSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed by the Topic Endpoint,\
            \ in megabytes (MB). A value of 0 only allows spooling of the last message\
            \ received and disables quota checking."
          format: int64
        maxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in the Topic\
            \ Endpoint when `respectTtlEnabled` is `\"true\"`. A message expires when\
            \ the lesser of the sender assigned time-to-live (TTL) in the message\
            \ and the `maxTtl` configured for the Topic Endpoint, is exceeded. A value\
            \ of 0 disables expiry."
          format: int64
        maxTtlExceededDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum time-to-live (TTL) in hops being exceeded. The TTL
            hop count is incremented when the message crosses a bridge.
          format: int64
        maxTtlExpiredDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum time-to-live (TTL) timestamp expiring.
          format: int64
        maxTtlExpiredToDmqFailedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum time-to-live (TTL) timestamp expiring and failing to
            move to the Dead Message Queue (DMQ).
          format: int64
        maxTtlExpiredToDmqMsgCount:
          type: integer
          description: The number of guaranteed messages moved to the Dead Message
            Queue (DMQ) by the Topic Endpoint due to the maximum time-to-live (TTL)
            timestamp expiring.
          format: int64
        msgSpoolPeakUsage:
          type: integer
          description: "The message spool peak usage by the Topic Endpoint, in bytes\
            \ (B)."
          format: int64
        msgSpoolUsage:
          type: integer
          description: "The message spool usage by the Topic Endpoint, in bytes (B)."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        networkTopic:
          type: string
          description: The name of the network topic for the Topic Endpoint.
        noLocalDeliveryDiscardedMsgCount:
          type: integer
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to no local delivery being requested.
          format: int64
        otherBindFailureCount:
          type: integer
          description: The number of Topic Endpoint bind failures due to other reasons.
          format: int64
        owner:
          type: string
          description: The Client Username that owns the Topic Endpoint and has permission
            equivalent to `"delete"`.
        permission:
          type: string
          description: "The permission level for all consumers of the Topic Endpoint,\
            \ excluding the owner. The allowed values and their meaning are:\n\n<pre>\n\
            \"no-access\" - Disallows all access.\n\"read-only\" - Read-only access\
            \ to the messages.\n\"consume\" - Consume (read and remove) messages.\n\
            \"modify-topic\" - Consume messages or modify the topic/selector.\n\"\
            delete\" - Consume messages, modify the topic/selector or delete the Client\
            \ created endpoint altogether.\n</pre>\n"
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
        redeliveredMsgCount:
          type: integer
          description: The number of guaranteed messages transmitted by the Topic
            Endpoint for redelivery.
          format: int64
        redeliveryDelayEnabled:
          type: boolean
          description: "Enable or disable a message redelivery delay. When false,\
            \ messages are redelivered as-soon-as-possible.  When true, messages are\
            \ redelivered according to the initial, max and multiplier.  This should\
            \ only be enabled when redelivery is enabled. Available since 2.33."
        redeliveryDelayInitialInterval:
          type: integer
          description: The delay to be used between the first 2 redelivery attempts.  This
            value is in milliseconds. Available since 2.33.
          format: int32
        redeliveryDelayMaxInterval:
          type: integer
          description: "The maximum delay to be used between any 2 redelivery attempts.\
            \  This value is in milliseconds.  Due to technical limitations, some\
            \ redelivery attempt delays may slightly exceed this value. Available\
            \ since 2.33."
          format: int32
        redeliveryDelayMultiplier:
          type: integer
          description: "The amount each delay interval is multiplied by after each\
            \ failed delivery attempt.  This number is in a fixed-point decimal format\
            \ in which you must divide by 100 to get the floating point value. For\
            \ example, a value of 125 would cause the delay to be multiplied by 1.25.\
            \ Available since 2.33."
          format: int32
        redeliveryEnabled:
          type: boolean
          description: "Enable or disable message redelivery. When enabled, the number\
            \ of redelivery attempts is controlled by maxRedeliveryCount. When disabled,\
            \ the message will never be delivered from the topic-endpoint more than\
            \ once. Available since 2.18."
        rejectLowPriorityMsgEnabled:
          type: boolean
          description: Indicates whether the checking of low priority messages against
            the `rejectLowPriorityMsgLimit` is enabled.
        rejectLowPriorityMsgLimit:
          type: integer
          description: The number of messages of any priority in the Topic Endpoint
            above which low priority messages are not admitted but higher priority
            messages are allowed.
          format: int64
        rejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-topic-endpoint-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Topic Endpoint is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-topic-endpoint-enabled
          - never
        replayFailureCount:
          type: integer
          description: The number of replays that failed for the Topic Endpoint.
          format: int64
        replayStartCount:
          type: integer
          description: The number of replays started for the Topic Endpoint.
          format: int64
        replayState:
          type: string
          description: "The state of replay for the Topic Endpoint. The allowed values\
            \ and their meaning are:\n\n<pre>\n\"initializing\" - All messages are\
            \ being deleted from the endpoint before replay starts.\n\"active\" -\
            \ Subscription matching logged messages are being replayed to the endpoint.\n\
            \"pending-complete\" - Replay is complete, but final accounting is in\
            \ progress.\n\"complete\" - Replay and all related activities are complete.\n\
            \"failed\" - Replay has failed and is waiting for an unbind response.\n\
            </pre>\n"
        replaySuccessCount:
          type: integer
          description: The number of replays that succeeded for the Topic Endpoint.
          format: int64
        replayedAckedMsgCount:
          type: integer
          description: The number of replayed messages transmitted by the Topic Endpoint
            and acked by all consumers.
          format: int64
        replayedTxMsgCount:
          type: integer
          description: The number of replayed messages transmitted by the Topic Endpoint.
          format: int64
        replicationActiveAckPropTxMsgCount:
          type: integer
          description: The number of acknowledgement messages propagated by the Topic
            Endpoint to the replication standby remote Message VPN.
          format: int64
        replicationStandbyAckPropRxMsgCount:
          type: integer
          description: The number of propagated acknowledgement messages received
            by the Topic Endpoint from the replication active remote Message VPN.
          format: int64
        replicationStandbyAckedByAckPropMsgCount:
          type: integer
          description: The number of messages acknowledged in the Topic Endpoint by
            acknowledgement propagation from the replication active remote Message
            VPN.
          format: int64
        replicationStandbyRxMsgCount:
          type: integer
          description: The number of messages received by the Topic Endpoint from
            the replication active remote Message VPN.
          format: int64
        respectMsgPriorityEnabled:
          type: boolean
          description: "Indicates whether message priorities are respected. When enabled,\
            \ messages contained in the Topic Endpoint are delivered in priority order,\
            \ from 9 (highest) to 0 (lowest)."
        respectTtlEnabled:
          type: boolean
          description: "Indicates whether the time-to-live (TTL) for messages in the\
            \ Topic Endpoint is respected. When enabled, expired messages are discarded\
            \ or moved to the DMQ."
        rxByteRate:
          type: integer
          description: "The current message rate received by the Topic Endpoint, in\
            \ bytes per second (B/sec)."
          format: int32
        rxMsgRate:
          type: integer
          description: "The current message rate received by the Topic Endpoint, in\
            \ messages per second (msg/sec)."
          format: int64
        rxSelector:
          type: boolean
          description: Indicates whether the Topic Endpoint has a selector to filter
            received messages.
        selector:
          type: string
          description: The value of the receive selector for the Topic Endpoint.
        selectorExaminedMsgCount:
          type: integer
          description: The number of guaranteed messages examined by the Topic Endpoint
            selector.
          format: int64
        selectorMatchedMsgCount:
          type: integer
          description: The number of guaranteed messages for which the Topic Endpoint
            selector matched.
          format: int64
        selectorNotMatchedMsgCount:
          type: integer
          description: The number of guaranteed messages for which the Topic Endpoint
            selector did not match.
          format: int64
        spooledByteCount:
          type: integer
          description: "The amount of guaranteed messages that were spooled in the\
            \ Topic Endpoint, in bytes (B)."
          format: int64
        spooledMsgCount:
          type: integer
          description: The number of guaranteed messages that were spooled in the
            Topic Endpoint.
          format: int64
        topicEndpointName:
          type: string
          description: The name of the Topic Endpoint.
        transportRetransmitMsgCount:
          type: integer
          description: The number of guaranteed messages that were retransmitted by
            the Topic Endpoint at the transport layer as part of a single delivery
            attempt. Available since 2.18.
          format: int64
        txByteRate:
          type: integer
          description: "The current message rate transmitted by the Topic Endpoint,\
            \ in bytes per second (B/sec)."
          format: int64
        txMsgRate:
          type: integer
          description: "The current message rate transmitted by the Topic Endpoint,\
            \ in messages per second (msg/sec)."
          format: int64
        txUnackedMsgCount:
          type: integer
          description: The number of guaranteed messages in the Topic Endpoint that
            have been transmitted but not acknowledged by all consumers.
          format: int64
        virtualRouter:
          type: string
          description: "The virtual router used by the Topic Endpoint. The allowed\
            \ values and their meaning are:\n\n<pre>\n\"primary\" - The endpoint belongs\
            \ to the primary virtual router.\n\"backup\" - The endpoint belongs to\
            \ the backup virtual router.\n</pre>\n Deprecated since 2.31. This attribute\
            \ has been deprecated. When Guaranteed Messaging is active, this value\
            \ is always the virtual router for which Guaranteed Messaging is enabled.\
            \ Otherwise, this value should be ignored."
      example:
        averageRxByteRate: 2
        maxTtlExpiredDiscardedMsgCount: 3
        txMsgRate: 1
        redeliveryEnabled: true
        maxMsgSizeExceededDiscardedMsgCount: 7
        selectorExaminedMsgCount: 2
        txUnackedMsgCount: 3
        maxMsgSize: 3
        bindRequestRate: 4
        rejectMsgToSenderOnDiscardBehavior: always
        redeliveryDelayEnabled: true
        eventBindCountThreshold:
          clearPercent: 7
          setPercent: 7
          setValue: 6
          clearValue: 0
        replayFailureCount: 0
        respectMsgPriorityEnabled: true
        bindSuccessCount: 7
        replicationStandbyRxMsgCount: 4
        maxDeliveredUnackedMsgsPerFlow: 6
        lastSpooledMsgId: 6
        lowestMsgId: 6
        egressEnabled: true
        respectTtlEnabled: true
        lastSelectorExaminedMsgId: 3
        lastReplayStartTime: 9
        msgSpoolUsage: 4
        lastReplayedMsgTxTime: 6
        rxByteRate: 3
        alreadyBoundBindFailureCount: 5
        highestAckedMsgId: 4
        maxRedeliveryExceededToDmqFailedMsgCount: 0
        redeliveryDelayMaxInterval: 4
        maxRedeliveryExceededDiscardedMsgCount: 6
        rejectLowPriorityMsgLimit: 9
        eventSpoolUsageThreshold: null
        txByteRate: 9
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        deliveryCountEnabled: true
        replayedAckedMsgCount: 7
        averageTxByteRate: 9
        maxBindCountExceededBindFailureCount: 5
        destinationGroupErrorDiscardedMsgCount: 6
        noLocalDeliveryDiscardedMsgCount: 0
        rejectLowPriorityMsgEnabled: true
        replicationStandbyAckedByAckPropMsgCount: 8
        topicEndpointName: topicEndpointName
        maxTtl: 7
        spooledByteCount: 6
        averageRxMsgRate: 7
        maxTtlExpiredToDmqFailedMsgCount: 7
        redeliveredMsgCount: 4
        virtualRouter: virtualRouter
        ingressEnabled: true
        spooledMsgCount: 4
        inProgressAckMsgCount: 9
        replicationActiveAckPropTxMsgCount: 4
        maxTtlExceededDiscardedMsgCount: 3
        selectorNotMatchedMsgCount: 8
        rxMsgRate: 0
        consumerAckPropagationEnabled: true
        networkTopic: networkTopic
        msgVpnName: msgVpnName
        averageTxMsgRate: 3
        lastReplayFailureTime: 8
        bindRequestCount: 2
        replayedTxMsgCount: 5
        replayStartCount: 9
        clientProfileDeniedDiscardedMsgCount: 1
        disabledBindFailureCount: 7
        createdByManagement: true
        disabledDiscardedMsgCount: 1
        replicationStandbyAckPropRxMsgCount: 6
        maxEffectiveBindCount: 3
        maxTtlExpiredToDmqMsgCount: 5
        maxRedeliveryExceededToDmqMsgCount: 4
        eventRejectLowPriorityMsgLimitThreshold: null
        otherBindFailureCount: 6
        lastReplayFailureReason: lastReplayFailureReason
        highestMsgId: 5
        lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
        transportRetransmitMsgCount: 8
        lowestAckedMsgId: 2
        maxMsgSpoolUsageExceededDiscardedMsgCount: 0
        durable: true
        replayState: replayState
        bindTimeForwardingMode: bindTimeForwardingMode
        lastReplayCompleteTime: 6
        selector: selector
        redeliveryDelayInitialInterval: 1
        deliveryDelay: 1
        maxBindCount: 6
        owner: owner
        maxSpoolUsage: 8
        replaySuccessCount: 0
        permission: no-access
        maxRedeliveryCount: 7
        msgSpoolPeakUsage: 3
        rxSelector: true
        deletedMsgCount: 1
        invalidSelectorBindFailureCount: 9
        averageBindRequestRate: 5
        redeliveryDelayMultiplier: 7
        destinationTopic: destinationTopic
        lowPriorityMsgCongestionDiscardedMsgCount: 1
        selectorMatchedMsgCount: 1
    MsgVpnTopicEndpointCollections:
      type: object
      properties:
        msgs:
          $ref: '#/components/schemas/MsgVpnTopicEndpointCollectionsMsgs'
        priorities:
          $ref: '#/components/schemas/MsgVpnTopicEndpointCollectionsPriorities'
        txFlows:
          $ref: '#/components/schemas/MsgVpnTopicEndpointCollectionsTxFlows'
      example:
        msgs:
          count: 0
        priorities:
          count: 6
        txFlows:
          count: 1
    MsgVpnTopicEndpointCollectionsMsgs:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the msgs collection.
          format: int64
      example:
        count: 0
    MsgVpnTopicEndpointCollectionsPriorities:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the priorities collection.
          format: int64
      example:
        count: 6
    MsgVpnTopicEndpointCollectionsTxFlows:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the txFlows collection.
          format: int64
      example:
        count: 1
    MsgVpnTopicEndpointLinks:
      type: object
      properties:
        msgsUri:
          type: string
          description: The URI of this Topic Endpoint's collection of Topic Endpoint
            Message objects.
        prioritiesUri:
          type: string
          description: The URI of this Topic Endpoint's collection of Topic Endpoint
            Priority objects.
        txFlowsUri:
          type: string
          description: The URI of this Topic Endpoint's collection of Topic Endpoint
            Transmit Flow objects.
        uri:
          type: string
          description: The URI of this Topic Endpoint object.
      example:
        txFlowsUri: txFlowsUri
        prioritiesUri: prioritiesUri
        uri: uri
        msgsUri: msgsUri
    MsgVpnTopicEndpointMsg:
      type: object
      properties:
        attachmentSize:
          type: integer
          description: "The size of the Message attachment, in bytes (B)."
          format: int64
        contentSize:
          type: integer
          description: "The size of the Message content, in bytes (B)."
          format: int64
        deliveryEligibleTime:
          type: integer
          description: The timestamp of when the Message is eligible for delivery.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Available since 2.22.
          format: int32
        dmqEligible:
          type: boolean
          description: Indicates whether the Message is eligible for the Dead Message
            Queue (DMQ).
        expiryTime:
          type: integer
          description: The timestamp of when the Message expires. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        msgId:
          type: integer
          description: The identifier (ID) of the Message.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        priority:
          type: integer
          description: "The priority level of the Message, from 9 (highest) to 0 (lowest)."
          format: int32
        publisherId:
          type: integer
          description: The identifier (ID) of the Message publisher.
          format: int64
        redeliveryCount:
          type: integer
          description: The number of times the Message has been redelivered.
          format: int32
        replicatedMateMsgId:
          type: integer
          description: The Message identifier (ID) on the replication mate. Applicable
            only to replicated messages.
          format: int64
        replicationGroupMsgId:
          type: string
          description: An ID that uniquely identifies this Message within this replication
            group. Available since 2.21.
        replicationState:
          type: string
          description: |
            The replication state of the Message. The allowed values and their meaning are:

            <pre>
            "replicated" - The Message is replicated to the remote Message VPN.
            "not-replicated" - The Message is not being replicated to the remote Message VPN.
            "pending-replication" - The Message is queued for replication to the remote Message VPN.
            </pre>
        spooledTime:
          type: integer
          description: The timestamp of when the Message was spooled in the Topic
            Endpoint. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time).
          format: int32
        topicEndpointName:
          type: string
          description: The name of the Topic Endpoint.
        undelivered:
          type: boolean
          description: Indicates whether delivery of the Message has never been attempted.
      example:
        replicationState: replicationState
        topicEndpointName: topicEndpointName
        msgId: 5
        undelivered: true
        priority: 2
        publisherId: 7
        attachmentSize: 0
        deliveryEligibleTime: 1
        dmqEligible: true
        redeliveryCount: 9
        spooledTime: 2
        contentSize: 6
        expiryTime: 5
        msgVpnName: msgVpnName
        replicationGroupMsgId: replicationGroupMsgId
        replicatedMateMsgId: 3
    MsgVpnTopicEndpointMsgCollections:
      type: object
    MsgVpnTopicEndpointMsgLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic Endpoint Message object.
      example:
        uri: uri
    MsgVpnTopicEndpointMsgResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTopicEndpointMsgCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpointMsg'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          replicationState: replicationState
          topicEndpointName: topicEndpointName
          msgId: 5
          undelivered: true
          priority: 2
          publisherId: 7
          attachmentSize: 0
          deliveryEligibleTime: 1
          dmqEligible: true
          redeliveryCount: 9
          spooledTime: 2
          contentSize: 6
          expiryTime: 5
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 3
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnTopicEndpointMsgsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointMsgCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointMsg'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - replicationState: replicationState
          topicEndpointName: topicEndpointName
          msgId: 5
          undelivered: true
          priority: 2
          publisherId: 7
          attachmentSize: 0
          deliveryEligibleTime: 1
          dmqEligible: true
          redeliveryCount: 9
          spooledTime: 2
          contentSize: 6
          expiryTime: 5
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 3
        - replicationState: replicationState
          topicEndpointName: topicEndpointName
          msgId: 5
          undelivered: true
          priority: 2
          publisherId: 7
          attachmentSize: 0
          deliveryEligibleTime: 1
          dmqEligible: true
          redeliveryCount: 9
          spooledTime: 2
          contentSize: 6
          expiryTime: 5
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 3
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnTopicEndpointPrioritiesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointPriorityCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointPriority'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointPriorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - topicEndpointName: topicEndpointName
          spooledMsgCount: 1
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        - topicEndpointName: topicEndpointName
          spooledMsgCount: 1
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnTopicEndpointPriority:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        priority:
          type: integer
          description: "The level of the Priority, from 9 (highest) to 0 (lowest)."
          format: int64
        spooledByteCount:
          type: integer
          description: "The amount of guaranteed messages at this Priority spooled\
            \ by the Topic Endpoint, in bytes (B)."
          format: int64
        spooledMsgCount:
          type: integer
          description: The number of guaranteed messages at this Priority spooled
            by the Topic Endpoint.
          format: int64
        topicEndpointName:
          type: string
          description: The name of the Topic Endpoint.
      example:
        topicEndpointName: topicEndpointName
        spooledMsgCount: 1
        spooledByteCount: 6
        msgVpnName: msgVpnName
        priority: 0
    MsgVpnTopicEndpointPriorityCollections:
      type: object
    MsgVpnTopicEndpointPriorityLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic Endpoint Priority object.
      example:
        uri: uri
    MsgVpnTopicEndpointPriorityResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTopicEndpointPriorityCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpointPriority'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointPriorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          topicEndpointName: topicEndpointName
          spooledMsgCount: 1
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnTopicEndpointResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTopicEndpointCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          averageRxByteRate: 2
          maxTtlExpiredDiscardedMsgCount: 3
          txMsgRate: 1
          redeliveryEnabled: true
          maxMsgSizeExceededDiscardedMsgCount: 7
          selectorExaminedMsgCount: 2
          txUnackedMsgCount: 3
          maxMsgSize: 3
          bindRequestRate: 4
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          replayFailureCount: 0
          respectMsgPriorityEnabled: true
          bindSuccessCount: 7
          replicationStandbyRxMsgCount: 4
          maxDeliveredUnackedMsgsPerFlow: 6
          lastSpooledMsgId: 6
          lowestMsgId: 6
          egressEnabled: true
          respectTtlEnabled: true
          lastSelectorExaminedMsgId: 3
          lastReplayStartTime: 9
          msgSpoolUsage: 4
          lastReplayedMsgTxTime: 6
          rxByteRate: 3
          alreadyBoundBindFailureCount: 5
          highestAckedMsgId: 4
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          redeliveryDelayMaxInterval: 4
          maxRedeliveryExceededDiscardedMsgCount: 6
          rejectLowPriorityMsgLimit: 9
          eventSpoolUsageThreshold: null
          txByteRate: 9
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          replayedAckedMsgCount: 7
          averageTxByteRate: 9
          maxBindCountExceededBindFailureCount: 5
          destinationGroupErrorDiscardedMsgCount: 6
          noLocalDeliveryDiscardedMsgCount: 0
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 8
          topicEndpointName: topicEndpointName
          maxTtl: 7
          spooledByteCount: 6
          averageRxMsgRate: 7
          maxTtlExpiredToDmqFailedMsgCount: 7
          redeliveredMsgCount: 4
          virtualRouter: virtualRouter
          ingressEnabled: true
          spooledMsgCount: 4
          inProgressAckMsgCount: 9
          replicationActiveAckPropTxMsgCount: 4
          maxTtlExceededDiscardedMsgCount: 3
          selectorNotMatchedMsgCount: 8
          rxMsgRate: 0
          consumerAckPropagationEnabled: true
          networkTopic: networkTopic
          msgVpnName: msgVpnName
          averageTxMsgRate: 3
          lastReplayFailureTime: 8
          bindRequestCount: 2
          replayedTxMsgCount: 5
          replayStartCount: 9
          clientProfileDeniedDiscardedMsgCount: 1
          disabledBindFailureCount: 7
          createdByManagement: true
          disabledDiscardedMsgCount: 1
          replicationStandbyAckPropRxMsgCount: 6
          maxEffectiveBindCount: 3
          maxTtlExpiredToDmqMsgCount: 5
          maxRedeliveryExceededToDmqMsgCount: 4
          eventRejectLowPriorityMsgLimitThreshold: null
          otherBindFailureCount: 6
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 5
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          transportRetransmitMsgCount: 8
          lowestAckedMsgId: 2
          maxMsgSpoolUsageExceededDiscardedMsgCount: 0
          durable: true
          replayState: replayState
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 6
          selector: selector
          redeliveryDelayInitialInterval: 1
          deliveryDelay: 1
          maxBindCount: 6
          owner: owner
          maxSpoolUsage: 8
          replaySuccessCount: 0
          permission: no-access
          maxRedeliveryCount: 7
          msgSpoolPeakUsage: 3
          rxSelector: true
          deletedMsgCount: 1
          invalidSelectorBindFailureCount: 9
          averageBindRequestRate: 5
          redeliveryDelayMultiplier: 7
          destinationTopic: destinationTopic
          lowPriorityMsgCongestionDiscardedMsgCount: 1
          selectorMatchedMsgCount: 1
        collections:
          msgs:
            count: 0
          priorities:
            count: 6
          txFlows:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          txFlowsUri: txFlowsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
    MsgVpnTopicEndpointTemplate:
      type: object
      properties:
        accessType:
          type: string
          description: |
            The access type for delivering messages to consumer flows. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to bound consumer flows in a round-robin (if partition count is zero) or partitioned (if partition count is non-zero) fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
        consumerAckPropagationEnabled:
          type: boolean
          description: Indicates whether the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN is enabled.
        deadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ).
        deliveryDelay:
          type: integer
          description: "The delay, in seconds, to apply to messages arriving on the\
            \ Topic Endpoint before the messages are eligible for delivery. Available\
            \ since 2.22."
          format: int64
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind.
          format: int64
        maxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow.
          format: int64
        maxMsgSize:
          type: integer
          description: "The maximum message size allowed, in bytes (B)."
          format: int32
        maxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed, in megabytes (MB).\
            \ A value of 0 only allows spooling of the last message received and disables\
            \ quota checking."
          format: int64
        maxRedeliveryCount:
          type: integer
          description: The maximum number of message redelivery attempts that will
            occur prior to the message being discarded or moved to the DMQ. A value
            of 0 means to retry forever.
          format: int64
        maxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in the Topic\
            \ Endpoint when `respectTtlEnabled` is `\"true\"`. A message expires when\
            \ the lesser of the sender assigned time-to-live (TTL) in the message\
            \ and the `maxTtl` configured for the Topic Endpoint, is exceeded. A value\
            \ of 0 disables expiry."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        permission:
          type: string
          description: "The permission level for all consumers, excluding the owner.\
            \ The allowed values and their meaning are:\n\n<pre>\n\"no-access\" -\
            \ Disallows all access.\n\"read-only\" - Read-only access to the messages.\n\
            \"consume\" - Consume (read and remove) messages.\n\"modify-topic\" -\
            \ Consume messages or modify the topic/selector.\n\"delete\" - Consume\
            \ messages, modify the topic/selector or delete the Client created endpoint\
            \ altogether.\n</pre>\n"
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
        redeliveryDelayEnabled:
          type: boolean
          description: "Enable or disable a message redelivery delay. When false,\
            \ messages are redelivered as-soon-as-possible.  When true, messages are\
            \ redelivered according to the initial, max and multiplier.  This should\
            \ only be enabled when redelivery is enabled. Available since 2.33."
        redeliveryDelayInitialInterval:
          type: integer
          description: The delay to be used between the first 2 redelivery attempts.  This
            value is in milliseconds. Available since 2.33.
          format: int32
        redeliveryDelayMaxInterval:
          type: integer
          description: "The maximum delay to be used between any 2 redelivery attempts.\
            \  This value is in milliseconds.  Due to technical limitations, some\
            \ redelivery attempt delays may slightly exceed this value. Available\
            \ since 2.33."
          format: int32
        redeliveryDelayMultiplier:
          type: integer
          description: "The amount each delay interval is multiplied by after each\
            \ failed delivery attempt.  This number is in a fixed-point decimal format\
            \ in which you must divide by 100 to get the floating point value. For\
            \ example, a value of 125 would cause the delay to be multiplied by 1.25.\
            \ Available since 2.33."
          format: int32
        redeliveryEnabled:
          type: boolean
          description: "Enable or disable message redelivery. When enabled, the number\
            \ of redelivery attempts is controlled by maxRedeliveryCount. When disabled,\
            \ the message will never be delivered from the topic-endpoint more than\
            \ once. Available since 2.18."
        rejectLowPriorityMsgEnabled:
          type: boolean
          description: Indicates whether the checking of low priority messages against
            the `rejectLowPriorityMsgLimit` is enabled.
        rejectLowPriorityMsgLimit:
          type: integer
          description: The number of messages that are permitted before low priority
            messages are rejected.
          format: int64
        rejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-topic-endpoint-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Topic Endpoint is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-topic-endpoint-enabled
          - never
        respectMsgPriorityEnabled:
          type: boolean
          description: "Indicates whether message priorities are respected. When enabled,\
            \ messages are delivered in priority order, from 9 (highest) to 0 (lowest)."
        respectTtlEnabled:
          type: boolean
          description: "Indicates whether the time-to-live (TTL) for messages is respected.\
            \ When enabled, expired messages are discarded or moved to the DMQ."
        topicEndpointNameFilter:
          type: string
          description: "A wildcardable pattern used to determine which Topic Endpoints\
            \ use settings from this Template. Two different wildcards are supported:\
            \ * and >. Similar to topic filters or subscription patterns, a > matches\
            \ anything (but only when used at the end), and a * matches zero or more\
            \ characters but never a slash (/). A > is only a wildcard when used at\
            \ the end, after a /. A * is only allowed at the end, after a slash (/)."
        topicEndpointTemplateName:
          type: string
          description: The name of the Topic Endpoint Template.
      example:
        topicEndpointTemplateName: topicEndpointTemplateName
        redeliveryEnabled: true
        redeliveryDelayMaxInterval: 3
        rejectLowPriorityMsgLimit: 4
        maxMsgSize: 5
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        rejectMsgToSenderOnDiscardBehavior: always
        redeliveryDelayEnabled: true
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 7
          setPercent: 7
          setValue: 6
          clearValue: 0
        respectMsgPriorityEnabled: true
        topicEndpointNameFilter: topicEndpointNameFilter
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 1
        redeliveryDelayInitialInterval: 9
        rejectLowPriorityMsgEnabled: true
        deliveryDelay: 0
        maxBindCount: 6
        eventMsgSpoolUsageThreshold: null
        maxTtl: 7
        respectTtlEnabled: true
        permission: no-access
        maxRedeliveryCount: 2
        redeliveryDelayMultiplier: 2
        eventRejectLowPriorityMsgLimitThreshold: null
        maxMsgSpoolUsage: 5
    MsgVpnTopicEndpointTemplateCollections:
      type: object
    MsgVpnTopicEndpointTemplateLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic Endpoint Template object.
      example:
        uri: uri
    MsgVpnTopicEndpointTemplateResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          redeliveryDelayMaxInterval: 3
          rejectLowPriorityMsgLimit: 4
          maxMsgSize: 5
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          respectMsgPriorityEnabled: true
          topicEndpointNameFilter: topicEndpointNameFilter
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 1
          redeliveryDelayInitialInterval: 9
          rejectLowPriorityMsgEnabled: true
          deliveryDelay: 0
          maxBindCount: 6
          eventMsgSpoolUsageThreshold: null
          maxTtl: 7
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 2
          redeliveryDelayMultiplier: 2
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnTopicEndpointTemplatesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          redeliveryDelayMaxInterval: 3
          rejectLowPriorityMsgLimit: 4
          maxMsgSize: 5
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          respectMsgPriorityEnabled: true
          topicEndpointNameFilter: topicEndpointNameFilter
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 1
          redeliveryDelayInitialInterval: 9
          rejectLowPriorityMsgEnabled: true
          deliveryDelay: 0
          maxBindCount: 6
          eventMsgSpoolUsageThreshold: null
          maxTtl: 7
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 2
          redeliveryDelayMultiplier: 2
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
        - topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          redeliveryDelayMaxInterval: 3
          rejectLowPriorityMsgLimit: 4
          maxMsgSize: 5
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          respectMsgPriorityEnabled: true
          topicEndpointNameFilter: topicEndpointNameFilter
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 1
          redeliveryDelayInitialInterval: 9
          rejectLowPriorityMsgEnabled: true
          deliveryDelay: 0
          maxBindCount: 6
          eventMsgSpoolUsageThreshold: null
          maxTtl: 7
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 2
          redeliveryDelayMultiplier: 2
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnTopicEndpointTxFlow:
      type: object
      properties:
        ackedMsgCount:
          type: integer
          description: The number of guaranteed messages delivered and acknowledged
            by the consumer.
          format: int64
        activityState:
          type: string
          description: |
            The activity state of the Flow. The allowed values and their meaning are:

            <pre>
            "active-browser" - The Flow is active as a browser.
            "active-consumer" - The Flow is active as a consumer.
            "inactive" - The Flow is inactive.
            </pre>
        bindTime:
          type: integer
          description: The timestamp of when the Flow bound to the Topic Endpoint.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        clientName:
          type: string
          description: The name of the Client.
        consumerRedeliveryRequestAllowed:
          type: boolean
          description: Indicates whether redelivery requests can be received as negative
            acknowledgements (NACKs) from the consumer. Applicable only to REST consumers.
        cutThroughAckedMsgCount:
          type: integer
          description: The number of guaranteed messages that used cut-through delivery
            and are acknowledged by the consumer.
          format: int64
        deliveryState:
          type: string
          description: |
            The delivery state of the Flow. The allowed values and their meaning are:

            <pre>
            "closed" - The Flow is unbound.
            "opened" - The Flow is bound but inactive.
            "unbinding" - The Flow received an unbind request.
            "handshaking" - The Flow is handshaking to become active.
            "deliver-cut-through" - The Flow is streaming messages using direct+guaranteed delivery.
            "deliver-from-input-stream" - The Flow is streaming messages using guaranteed delivery.
            "deliver-from-memory" - The Flow throttled causing message delivery from memory (RAM).
            "deliver-from-spool" - The Flow stalled causing message delivery from spool (ADB or disk).
            </pre>
        flowId:
          type: integer
          description: The identifier (ID) of the Flow.
          format: int64
        highestAckPendingMsgId:
          type: integer
          description: The highest identifier (ID) of message transmitted and waiting
            for acknowledgement.
          format: int64
        lastAckedMsgId:
          type: integer
          description: The identifier (ID) of the last message transmitted and acknowledged
            by the consumer.
          format: int64
        lowestAckPendingMsgId:
          type: integer
          description: The lowest identifier (ID) of message transmitted and waiting
            for acknowledgement.
          format: int64
        maxUnackedMsgsExceededMsgCount:
          type: integer
          description: The number of guaranteed messages that exceeded the maximum
            number of delivered unacknowledged messages.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        noLocalDelivery:
          type: boolean
          description: Indicates whether not to deliver messages to a consumer that
            published them.
        redeliveredMsgCount:
          type: integer
          description: The number of guaranteed messages that were redelivered.
          format: int64
        redeliveryRequestCount:
          type: integer
          description: The number of consumer requests via negative acknowledgements
            (NACKs) to redeliver guaranteed messages.
          format: int64
        sessionName:
          type: string
          description: The name of the Transacted Session for the Flow.
        storeAndForwardAckedMsgCount:
          type: integer
          description: The number of guaranteed messages that used store and forward
            delivery and are acknowledged by the consumer.
          format: int64
        topicEndpointName:
          type: string
          description: The name of the Topic Endpoint.
        transportRetransmitMsgCount:
          type: integer
          description: The number of guaranteed messages that were retransmitted at
            the transport layer as part of a single delivery attempt. Available since
            2.18.
          format: int64
        unackedMsgCount:
          type: integer
          description: The number of guaranteed messages delivered but not yet acknowledged
            by the consumer.
          format: int64
        usedWindowSize:
          type: integer
          description: The number of guaranteed messages using the available window
            size.
          format: int64
        windowClosedCount:
          type: integer
          description: The number of times the window for guaranteed messages was
            filled and closed before an acknowledgement was received.
          format: int64
        windowSize:
          type: integer
          description: The number of outstanding guaranteed messages that can be transmitted
            over the Flow before an acknowledgement is received.
          format: int64
      example:
        storeAndForwardAckedMsgCount: 4
        topicEndpointName: topicEndpointName
        ackedMsgCount: 0
        clientName: clientName
        lastAckedMsgId: 2
        sessionName: sessionName
        transportRetransmitMsgCount: 7
        highestAckPendingMsgId: 5
        redeliveredMsgCount: 3
        noLocalDelivery: true
        windowSize: 6
        windowClosedCount: 1
        usedWindowSize: 1
        bindTime: 6
        activityState: activityState
        deliveryState: deliveryState
        cutThroughAckedMsgCount: 1
        msgVpnName: msgVpnName
        unackedMsgCount: 1
        flowId: 5
        consumerRedeliveryRequestAllowed: true
        lowestAckPendingMsgId: 7
        maxUnackedMsgsExceededMsgCount: 9
        redeliveryRequestCount: 2
    MsgVpnTopicEndpointTxFlowCollections:
      type: object
    MsgVpnTopicEndpointTxFlowLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic Endpoint Transmit Flow object.
      example:
        uri: uri
    MsgVpnTopicEndpointTxFlowResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlow'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          storeAndForwardAckedMsgCount: 4
          topicEndpointName: topicEndpointName
          ackedMsgCount: 0
          clientName: clientName
          lastAckedMsgId: 2
          sessionName: sessionName
          transportRetransmitMsgCount: 7
          highestAckPendingMsgId: 5
          redeliveredMsgCount: 3
          noLocalDelivery: true
          windowSize: 6
          windowClosedCount: 1
          usedWindowSize: 1
          bindTime: 6
          activityState: activityState
          deliveryState: deliveryState
          cutThroughAckedMsgCount: 1
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          flowId: 5
          consumerRedeliveryRequestAllowed: true
          lowestAckPendingMsgId: 7
          maxUnackedMsgsExceededMsgCount: 9
          redeliveryRequestCount: 2
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnTopicEndpointTxFlowsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlow'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - storeAndForwardAckedMsgCount: 4
          topicEndpointName: topicEndpointName
          ackedMsgCount: 0
          clientName: clientName
          lastAckedMsgId: 2
          sessionName: sessionName
          transportRetransmitMsgCount: 7
          highestAckPendingMsgId: 5
          redeliveredMsgCount: 3
          noLocalDelivery: true
          windowSize: 6
          windowClosedCount: 1
          usedWindowSize: 1
          bindTime: 6
          activityState: activityState
          deliveryState: deliveryState
          cutThroughAckedMsgCount: 1
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          flowId: 5
          consumerRedeliveryRequestAllowed: true
          lowestAckPendingMsgId: 7
          maxUnackedMsgsExceededMsgCount: 9
          redeliveryRequestCount: 2
        - storeAndForwardAckedMsgCount: 4
          topicEndpointName: topicEndpointName
          ackedMsgCount: 0
          clientName: clientName
          lastAckedMsgId: 2
          sessionName: sessionName
          transportRetransmitMsgCount: 7
          highestAckPendingMsgId: 5
          redeliveredMsgCount: 3
          noLocalDelivery: true
          windowSize: 6
          windowClosedCount: 1
          usedWindowSize: 1
          bindTime: 6
          activityState: activityState
          deliveryState: deliveryState
          cutThroughAckedMsgCount: 1
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          flowId: 5
          consumerRedeliveryRequestAllowed: true
          lowestAckPendingMsgId: 7
          maxUnackedMsgsExceededMsgCount: 9
          redeliveryRequestCount: 2
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnTopicEndpointsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - averageRxByteRate: 2
          maxTtlExpiredDiscardedMsgCount: 3
          txMsgRate: 1
          redeliveryEnabled: true
          maxMsgSizeExceededDiscardedMsgCount: 7
          selectorExaminedMsgCount: 2
          txUnackedMsgCount: 3
          maxMsgSize: 3
          bindRequestRate: 4
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          replayFailureCount: 0
          respectMsgPriorityEnabled: true
          bindSuccessCount: 7
          replicationStandbyRxMsgCount: 4
          maxDeliveredUnackedMsgsPerFlow: 6
          lastSpooledMsgId: 6
          lowestMsgId: 6
          egressEnabled: true
          respectTtlEnabled: true
          lastSelectorExaminedMsgId: 3
          lastReplayStartTime: 9
          msgSpoolUsage: 4
          lastReplayedMsgTxTime: 6
          rxByteRate: 3
          alreadyBoundBindFailureCount: 5
          highestAckedMsgId: 4
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          redeliveryDelayMaxInterval: 4
          maxRedeliveryExceededDiscardedMsgCount: 6
          rejectLowPriorityMsgLimit: 9
          eventSpoolUsageThreshold: null
          txByteRate: 9
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          replayedAckedMsgCount: 7
          averageTxByteRate: 9
          maxBindCountExceededBindFailureCount: 5
          destinationGroupErrorDiscardedMsgCount: 6
          noLocalDeliveryDiscardedMsgCount: 0
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 8
          topicEndpointName: topicEndpointName
          maxTtl: 7
          spooledByteCount: 6
          averageRxMsgRate: 7
          maxTtlExpiredToDmqFailedMsgCount: 7
          redeliveredMsgCount: 4
          virtualRouter: virtualRouter
          ingressEnabled: true
          spooledMsgCount: 4
          inProgressAckMsgCount: 9
          replicationActiveAckPropTxMsgCount: 4
          maxTtlExceededDiscardedMsgCount: 3
          selectorNotMatchedMsgCount: 8
          rxMsgRate: 0
          consumerAckPropagationEnabled: true
          networkTopic: networkTopic
          msgVpnName: msgVpnName
          averageTxMsgRate: 3
          lastReplayFailureTime: 8
          bindRequestCount: 2
          replayedTxMsgCount: 5
          replayStartCount: 9
          clientProfileDeniedDiscardedMsgCount: 1
          disabledBindFailureCount: 7
          createdByManagement: true
          disabledDiscardedMsgCount: 1
          replicationStandbyAckPropRxMsgCount: 6
          maxEffectiveBindCount: 3
          maxTtlExpiredToDmqMsgCount: 5
          maxRedeliveryExceededToDmqMsgCount: 4
          eventRejectLowPriorityMsgLimitThreshold: null
          otherBindFailureCount: 6
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 5
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          transportRetransmitMsgCount: 8
          lowestAckedMsgId: 2
          maxMsgSpoolUsageExceededDiscardedMsgCount: 0
          durable: true
          replayState: replayState
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 6
          selector: selector
          redeliveryDelayInitialInterval: 1
          deliveryDelay: 1
          maxBindCount: 6
          owner: owner
          maxSpoolUsage: 8
          replaySuccessCount: 0
          permission: no-access
          maxRedeliveryCount: 7
          msgSpoolPeakUsage: 3
          rxSelector: true
          deletedMsgCount: 1
          invalidSelectorBindFailureCount: 9
          averageBindRequestRate: 5
          redeliveryDelayMultiplier: 7
          destinationTopic: destinationTopic
          lowPriorityMsgCongestionDiscardedMsgCount: 1
          selectorMatchedMsgCount: 1
        - averageRxByteRate: 2
          maxTtlExpiredDiscardedMsgCount: 3
          txMsgRate: 1
          redeliveryEnabled: true
          maxMsgSizeExceededDiscardedMsgCount: 7
          selectorExaminedMsgCount: 2
          txUnackedMsgCount: 3
          maxMsgSize: 3
          bindRequestRate: 4
          rejectMsgToSenderOnDiscardBehavior: always
          redeliveryDelayEnabled: true
          eventBindCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          replayFailureCount: 0
          respectMsgPriorityEnabled: true
          bindSuccessCount: 7
          replicationStandbyRxMsgCount: 4
          maxDeliveredUnackedMsgsPerFlow: 6
          lastSpooledMsgId: 6
          lowestMsgId: 6
          egressEnabled: true
          respectTtlEnabled: true
          lastSelectorExaminedMsgId: 3
          lastReplayStartTime: 9
          msgSpoolUsage: 4
          lastReplayedMsgTxTime: 6
          rxByteRate: 3
          alreadyBoundBindFailureCount: 5
          highestAckedMsgId: 4
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          redeliveryDelayMaxInterval: 4
          maxRedeliveryExceededDiscardedMsgCount: 6
          rejectLowPriorityMsgLimit: 9
          eventSpoolUsageThreshold: null
          txByteRate: 9
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          replayedAckedMsgCount: 7
          averageTxByteRate: 9
          maxBindCountExceededBindFailureCount: 5
          destinationGroupErrorDiscardedMsgCount: 6
          noLocalDeliveryDiscardedMsgCount: 0
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 8
          topicEndpointName: topicEndpointName
          maxTtl: 7
          spooledByteCount: 6
          averageRxMsgRate: 7
          maxTtlExpiredToDmqFailedMsgCount: 7
          redeliveredMsgCount: 4
          virtualRouter: virtualRouter
          ingressEnabled: true
          spooledMsgCount: 4
          inProgressAckMsgCount: 9
          replicationActiveAckPropTxMsgCount: 4
          maxTtlExceededDiscardedMsgCount: 3
          selectorNotMatchedMsgCount: 8
          rxMsgRate: 0
          consumerAckPropagationEnabled: true
          networkTopic: networkTopic
          msgVpnName: msgVpnName
          averageTxMsgRate: 3
          lastReplayFailureTime: 8
          bindRequestCount: 2
          replayedTxMsgCount: 5
          replayStartCount: 9
          clientProfileDeniedDiscardedMsgCount: 1
          disabledBindFailureCount: 7
          createdByManagement: true
          disabledDiscardedMsgCount: 1
          replicationStandbyAckPropRxMsgCount: 6
          maxEffectiveBindCount: 3
          maxTtlExpiredToDmqMsgCount: 5
          maxRedeliveryExceededToDmqMsgCount: 4
          eventRejectLowPriorityMsgLimitThreshold: null
          otherBindFailureCount: 6
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 5
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          transportRetransmitMsgCount: 8
          lowestAckedMsgId: 2
          maxMsgSpoolUsageExceededDiscardedMsgCount: 0
          durable: true
          replayState: replayState
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 6
          selector: selector
          redeliveryDelayInitialInterval: 1
          deliveryDelay: 1
          maxBindCount: 6
          owner: owner
          maxSpoolUsage: 8
          replaySuccessCount: 0
          permission: no-access
          maxRedeliveryCount: 7
          msgSpoolPeakUsage: 3
          rxSelector: true
          deletedMsgCount: 1
          invalidSelectorBindFailureCount: 9
          averageBindRequestRate: 5
          redeliveryDelayMultiplier: 7
          destinationTopic: destinationTopic
          lowPriorityMsgCongestionDiscardedMsgCount: 1
          selectorMatchedMsgCount: 1
        collections:
        - msgs:
            count: 0
          priorities:
            count: 6
          txFlows:
            count: 1
        - msgs:
            count: 0
          priorities:
            count: 6
          txFlows:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - txFlowsUri: txFlowsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
        - txFlowsUri: txFlowsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
    MsgVpnTransaction:
      type: object
      properties:
        clientId:
          type: integer
          description: The identifier (ID) of the Client.
          format: int32
        clientName:
          type: string
          description: The name of the Client.
        clientUsername:
          type: string
          description: The username of the Client.
        idleTimeout:
          type: integer
          description: The number of seconds before an idle Transaction may be automatically
            rolled back and freed.
          format: int32
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        replicated:
          type: boolean
          description: Indicates whether the Transaction is replicated.
        sessionName:
          type: string
          description: The name of the Transacted Session for the Transaction.
        state:
          type: string
          description: |
            The state of the Transaction. The allowed values and their meaning are:

            <pre>
            "active" - The Transaction was started.
            "suspended" - The Transaction was suspended.
            "idle" - The Transaction was ended.
            "prepared" - The Transaction was prepared.
            "complete" - The Transaction was committed or rolled back.
            </pre>
        timeInState:
          type: integer
          description: The number of seconds the Transaction has remained in the current
            state.
          format: int32
        type:
          type: string
          description: |
            The type of Transaction. The allowed values and their meaning are:

            <pre>
            "xa" - The Transaction is an XA Transaction.
            "local" - The Transaction is a local Transaction.
            </pre>
        xid:
          type: string
          description: The identifier (ID) of the Transaction.
      example:
        timeInState: 5
        xid: xid
        clientId: 1
        clientName: clientName
        clientUsername: clientUsername
        idleTimeout: 5
        sessionName: sessionName
        msgVpnName: msgVpnName
        state: state
        type: type
        replicated: true
    MsgVpnTransactionCollections:
      type: object
      properties:
        consumerMsgs:
          $ref: '#/components/schemas/MsgVpnTransactionCollectionsConsumerMsgs'
        publisherMsgs:
          $ref: '#/components/schemas/MsgVpnTransactionCollectionsPublisherMsgs'
      example:
        consumerMsgs:
          count: 0
        publisherMsgs:
          count: 6
    MsgVpnTransactionCollectionsConsumerMsgs:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the consumerMsgs collection.
          format: int64
      example:
        count: 0
    MsgVpnTransactionCollectionsPublisherMsgs:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the publisherMsgs collection.
          format: int64
      example:
        count: 6
    MsgVpnTransactionConsumerMsg:
      type: object
      properties:
        endpointName:
          type: string
          description: The name of the Queue or Topic Endpoint source.
        endpointType:
          type: string
          description: |
            The type of endpoint source. The allowed values and their meaning are:

            <pre>
            "queue" - The Message is from a Queue.
            "topic-endpoint" - The Message is from a Topic Endpoint.
            </pre>
        msgId:
          type: integer
          description: The identifier (ID) of the Message.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        replicationGroupMsgId:
          type: string
          description: An ID that uniquely identifies this message within this replication
            group. Available since 2.21.
        xid:
          type: string
          description: The identifier (ID) of the Transaction.
      example:
        xid: xid
        endpointType: endpointType
        endpointName: endpointName
        msgId: 0
        msgVpnName: msgVpnName
        replicationGroupMsgId: replicationGroupMsgId
    MsgVpnTransactionConsumerMsgCollections:
      type: object
    MsgVpnTransactionConsumerMsgLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Transaction Consumer Message object.
      example:
        uri: uri
    MsgVpnTransactionConsumerMsgResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTransactionConsumerMsg'
        links:
          $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          xid: xid
          endpointType: endpointType
          endpointName: endpointName
          msgId: 0
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnTransactionConsumerMsgsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTransactionConsumerMsg'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - xid: xid
          endpointType: endpointType
          endpointName: endpointName
          msgId: 0
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
        - xid: xid
          endpointType: endpointType
          endpointName: endpointName
          msgId: 0
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnTransactionLinks:
      type: object
      properties:
        consumerMsgsUri:
          type: string
          description: The URI of this Replicated Local Transaction or XA Transaction's
            collection of Transaction Consumer Message objects.
        publisherMsgsUri:
          type: string
          description: The URI of this Replicated Local Transaction or XA Transaction's
            collection of Transaction Publisher Message objects.
        uri:
          type: string
          description: The URI of this Replicated Local Transaction or XA Transaction
            object.
      example:
        publisherMsgsUri: publisherMsgsUri
        consumerMsgsUri: consumerMsgsUri
        uri: uri
    MsgVpnTransactionPublisherMsg:
      type: object
      properties:
        msgId:
          type: integer
          description: The identifier (ID) of the Message.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        topic:
          type: string
          description: The topic destination of the Message.
        xid:
          type: string
          description: The identifier (ID) of the Transaction.
      example:
        xid: xid
        msgId: 0
        topic: topic
        msgVpnName: msgVpnName
    MsgVpnTransactionPublisherMsgCollections:
      type: object
    MsgVpnTransactionPublisherMsgLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Transaction Publisher Message object.
      example:
        uri: uri
    MsgVpnTransactionPublisherMsgResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTransactionPublisherMsg'
        links:
          $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          xid: xid
          msgId: 0
          topic: topic
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    MsgVpnTransactionPublisherMsgsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTransactionPublisherMsg'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - xid: xid
          msgId: 0
          topic: topic
          msgVpnName: msgVpnName
        - xid: xid
          msgId: 0
          topic: topic
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    MsgVpnTransactionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTransactionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTransaction'
        links:
          $ref: '#/components/schemas/MsgVpnTransactionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          timeInState: 5
          xid: xid
          clientId: 1
          clientName: clientName
          clientUsername: clientUsername
          idleTimeout: 5
          sessionName: sessionName
          msgVpnName: msgVpnName
          state: state
          type: type
          replicated: true
        collections:
          consumerMsgs:
            count: 0
          publisherMsgs:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          publisherMsgsUri: publisherMsgsUri
          consumerMsgsUri: consumerMsgsUri
          uri: uri
    MsgVpnTransactionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTransactionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTransaction'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTransactionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - timeInState: 5
          xid: xid
          clientId: 1
          clientName: clientName
          clientUsername: clientUsername
          idleTimeout: 5
          sessionName: sessionName
          msgVpnName: msgVpnName
          state: state
          type: type
          replicated: true
        - timeInState: 5
          xid: xid
          clientId: 1
          clientName: clientName
          clientUsername: clientUsername
          idleTimeout: 5
          sessionName: sessionName
          msgVpnName: msgVpnName
          state: state
          type: type
          replicated: true
        collections:
        - consumerMsgs:
            count: 0
          publisherMsgs:
            count: 6
        - consumerMsgs:
            count: 0
          publisherMsgs:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - publisherMsgsUri: publisherMsgsUri
          consumerMsgsUri: consumerMsgsUri
          uri: uri
        - publisherMsgsUri: publisherMsgsUri
          consumerMsgsUri: consumerMsgsUri
          uri: uri
    MsgVpnsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpn'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - replicationRemoteBridgeName: replicationRemoteBridgeName
          averageRxByteRate: 1
          txUncompressedByteRate: 7
          bindRequestRate: 7
          serviceRestIncomingPlainTextEnabled: true
          txCompressedByteRate: 1
          discardedRxMsgCount: 6
          replicationAckPropagationIntervalMsgCount: 6
          state: state
          serviceWebPlainTextUp: true
          replicationStandbyAckPropOutOfSeqRxMsgCount: 7
          restTlsServerCertValidateDateEnabled: true
          serviceWebTlsFailureReason: serviceWebTlsFailureReason
          replicationActivePromotedQueuedMsgCount: 1
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 9
          authenticationClientCertUsernameSource: certificate-thumbprint
          configSyncLocalRole: configSyncLocalRole
          authenticationClientCertMaxChainDepth: 3
          msgSpoolUsage: 3
          serviceMqttWebSocketEnabled: true
          serviceWebPlainTextFailureReason: serviceWebPlainTextFailureReason
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceMqttWebSocketFailureReason: serviceMqttWebSocketFailureReason
          authenticationClientCertEnabled: true
          averageRxCompressedByteRate: 2
          serviceSmfPlainTextFailureReason: serviceSmfPlainTextFailureReason
          serviceWebTlsUp: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          serviceRestIncomingPlainTextFailureReason: serviceRestIncomingPlainTextFailureReason
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          serviceMqttPlainTextCompressed: true
          eventPublishTopicFormatSmfEnabled: true
          maxEffectiveEndpointCount: 6
          authenticationBasicProfileName: authenticationBasicProfileName
          replicationBridgeBoundToQueue: true
          serviceRestIncomingMaxConnectionCount: 9
          serviceAmqpTlsListenPort: 0
          averageTxByteRate: 5
          eventServiceAmqpConnectionCountThreshold: null
          serviceRestMode: gateway
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          replicationBridgeName: replicationBridgeName
          maxSubscriptionCount: 5
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 4
          replicationBridgeUp: true
          controlTxMsgCount: 8
          serviceAmqpMaxConnectionCount: 2
          serviceMqttTlsUp: true
          maxEgressFlowCount: 9
          serviceMqttWebSocketListenPort: 0
          loginTxMsgCount: 1
          serviceWebTlsEnabled: true
          replicationStandbyTransactionRequestFailureCount: 8
          eventIngressMsgRateThreshold: null
          replicationStandbyTransactionRequestCount: 3
          eventPublishSubscriptionMode: "off"
          eventConnectionCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 0
          serviceRestIncomingTlsListenPort: 7
          dataRxByteCount: 0
          tlsAverageTxByteRate: 1
          rxCompressedByteRate: 4
          dataTxMsgCount: 4
          eventPublishMsgVpnEnabled: true
          dmrEnabled: true
          txCompressionRatio: txCompressionRatio
          msgVpnName: msgVpnName
          eventEndpointCountThreshold: null
          replicationStandbyTransactionRequestSuccessCount: 2
          sempOverMsgBusAdminEnabled: true
          eventServiceRestIncomingConnectionCountThreshold: null
          serviceSmfMaxConnectionCount: 0
          tlsRxByteCount: 6
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          configSyncLocalState: configSyncLocalState
          replicationStandbyReconcileRequestTxMsgCount: 1
          rxByteCount: 4
          replicationQueueMaxMsgSpoolUsage: 7
          eventServiceMqttConnectionCountThreshold: null
          serviceSmfPlainTextUp: true
          sempOverMsgBusAdminClientEnabled: true
          averageTxCompressedByteRate: 6
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 6
          serviceSmfTlsUp: true
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          replicationActiveMateFlowNotCongestedPeakTime: 5
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          replicationActiveSyncIneligiblePeakTime: 5
          serviceAmqpPlainTextListenPort: 5
          systemManager: true
          authenticationClientCertValidateDateEnabled: true
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          serviceRestIncomingTlsFailureReason: serviceRestIncomingTlsFailureReason
          configSyncLocalTimeInState: 7
          eventLogTag: eventLogTag
          rate:
            tlsAverageTxByteRate: 9
            averageRxByteRate: 8
            txMsgRate: 4
            averageTxByteRate: 0
            tlsRxByteRate: 0
            tlsTxByteRate: 2
            averageRxMsgRate: 4
            tlsAverageRxByteRate: 2
            rxByteRate: 7
            rxMsgRate: 4
            averageTxMsgRate: 0
            txByteRate: 6
          distributedCacheManagementEnabled: true
          discardedTxMsgCount: 8
          maxEffectiveTxFlowCount: 3
          serviceRestIncomingTlsCompressed: true
          msgReplayInitializingCount: 5
          bridgingTlsServerCertValidateNameEnabled: true
          rxMsgCount: 8
          replicationActiveSyncQueuedMsgCount: 1
          subscriptionExportProgress: 0
          tlsRxByteRate: 2
          counter:
            loginRxMsgCount: 1
            msgSpoolRxMsgCount: 7
            controlTxMsgCount: 7
            tlsRxByteCount: 0
            controlRxByteCount: 7
            tlsTxByteCount: 9
            dataRxByteCount: 5
            dataRxMsgCount: 3
            controlRxMsgCount: 3
            loginTxMsgCount: 4
            controlTxByteCount: 3
            dataTxByteCount: 4
            msgSpoolTxMsgCount: 9
            dataTxMsgCount: 0
            discardedRxMsgCount: 6
            discardedTxMsgCount: 4
          serviceAmqpPlainTextFailureReason: serviceAmqpPlainTextFailureReason
          averageTxUncompressedByteRate: 3
          controlTxByteCount: 4
          rxUncompressedByteRate: 0
          mqttRetainMaxMemory: 3
          msgSpoolMsgCount: 0
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          msgReplayFailedCount: 9
          eventIngressFlowCountThreshold: null
          serviceMqttMaxConnectionCount: 7
          txMsgRate: 3
          authorizationProfileName: authorizationProfileName
          serviceMqttTlsFailureReason: serviceMqttTlsFailureReason
          replicationActiveReconcileRequestRxMsgCount: 4
          serviceAmqpPlainTextCompressed: true
          serviceMqttPlainTextFailureReason: serviceMqttPlainTextFailureReason
          serviceMqttWebSocketCompressed: true
          replicationActiveSyncQueuedAsAsyncMsgCount: 3
          replicationBridgeEgressFlowWindowSize: 9
          restTlsServerCertMaxChainDepth: 9
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold: null
          bridgingTlsServerCertValidateDateEnabled: true
          maxEffectiveSubscriptionCount: 8
          authorizationType: ldap
          replicationStandbyRxMsgCount: 4
          serviceMqttTlsWebSocketCompressed: true
          msgSpoolRxMsgCount: 3
          bridgingTlsServerCertMaxChainDepth: 0
          replicationBridgeCompressedDataEnabled: true
          rxCompressedByteCount: 6
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          averageRxUncompressedByteRate: 6
          eventTransactedSessionCountThreshold: null
          eventSubscriptionCountThreshold: null
          serviceMqttPlainTextListenPort: 6
          serviceMqttWebSocketUp: true
          dataTxByteCount: 5
          failureReason: failureReason
          serviceRestIncomingAuthorizationHeaderHandling: drop
          txUncompressedByteCount: 8
          rxByteRate: 8
          loginRxMsgCount: 2
          serviceRestIncomingPlainTextCompressed: true
          replicationQueueBound: true
          controlRxMsgCount: 0
          serviceMqttTlsWebSocketUp: true
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationActiveMateFlowCongestedPeakTime: 3
          txByteRate: 5
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          sempOverMsgBusEnabled: true
          maxTransactionCount: 7
          serviceMqttTlsListenPort: 4
          rxUncompressedByteCount: 6
          serviceRestIncomingTlsEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          tlsAverageRxByteRate: 7
          authenticationOauthEnabled: true
          tlsTxByteCount: 4
          averageRxMsgRate: 6
          dataRxMsgCount: 7
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 8
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          serviceAmqpTlsUp: true
          configSyncLocalLastResult: configSyncLocalLastResult
          authenticationClientCertCertificateMatchingRulesEnabled: true
          replicationActiveLocallyConsumedMsgCount: 1
          txByteCount: 3
          replicationActiveAsyncQueuedMsgCount: 1
          serviceMqttTlsEnabled: true
          maxEffectiveTransactionCount: 1
          serviceMqttPlainTextUp: true
          serviceMqttTlsWebSocketFailureReason: serviceMqttTlsWebSocketFailureReason
          serviceSmfTlsFailureReason: serviceSmfTlsFailureReason
          replicationActiveAckPropTxMsgCount: 9
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold: null
          rxMsgRate: 2
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          txMsgCount: 5
          averageTxMsgRate: 3
          eventEgressFlowCountThreshold: null
          serviceAmqpTlsCompressed: true
          eventMsgSpoolUsageThreshold: null
          replicationActiveTransitionToSyncIneligibleCount: 3
          configSyncLocalKey: configSyncLocalKey
          controlRxByteCount: 6
          jndiEnabled: true
          maxEffectiveTransactedSessionCount: 9
          eventPublishClientEnabled: true
          replicationSyncEligible: true
          replicationActiveSyncEligiblePeakTime: 5
          maxEffectiveRxFlowCount: 4
          tlsAllowDowngradeToPlainTextEnabled: true
          replicationStandbyAckPropRxMsgCount: 9
          maxConnectionCount: 8
          msgReplayActiveCount: 3
          eventServiceSmfConnectionCountThreshold: null
          tlsTxByteRate: 2
          serviceAmqpPlainTextUp: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 3
            clearValue: 4
          replicationBridgeRetryDelay: 7
          txCompressedByteCount: 3
          serviceAmqpTlsFailureReason: serviceAmqpTlsFailureReason
          alias: alias
          authenticationOauthDefaultProfileName: authenticationOauthDefaultProfileName
          serviceMqttTlsWebSocketListenPort: 0
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          rxCompressionRatio: rxCompressionRatio
          maxIngressFlowCount: 0
          serviceMqttTlsCompressed: true
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 8
          msgReplayPendingCompleteCount: 7
          serviceRestIncomingTlsUp: true
          serviceRestIncomingPlainTextUp: true
          averageBindRequestRate: 6
          msgSpoolTxMsgCount: 2
          replicationRemoteBridgeUp: true
          maxMsgSpoolUsage: 5
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
        - replicationRemoteBridgeName: replicationRemoteBridgeName
          averageRxByteRate: 1
          txUncompressedByteRate: 7
          bindRequestRate: 7
          serviceRestIncomingPlainTextEnabled: true
          txCompressedByteRate: 1
          discardedRxMsgCount: 6
          replicationAckPropagationIntervalMsgCount: 6
          state: state
          serviceWebPlainTextUp: true
          replicationStandbyAckPropOutOfSeqRxMsgCount: 7
          restTlsServerCertValidateDateEnabled: true
          serviceWebTlsFailureReason: serviceWebTlsFailureReason
          replicationActivePromotedQueuedMsgCount: 1
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 9
          authenticationClientCertUsernameSource: certificate-thumbprint
          configSyncLocalRole: configSyncLocalRole
          authenticationClientCertMaxChainDepth: 3
          msgSpoolUsage: 3
          serviceMqttWebSocketEnabled: true
          serviceWebPlainTextFailureReason: serviceWebPlainTextFailureReason
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceMqttWebSocketFailureReason: serviceMqttWebSocketFailureReason
          authenticationClientCertEnabled: true
          averageRxCompressedByteRate: 2
          serviceSmfPlainTextFailureReason: serviceSmfPlainTextFailureReason
          serviceWebTlsUp: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          serviceRestIncomingPlainTextFailureReason: serviceRestIncomingPlainTextFailureReason
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          serviceMqttPlainTextCompressed: true
          eventPublishTopicFormatSmfEnabled: true
          maxEffectiveEndpointCount: 6
          authenticationBasicProfileName: authenticationBasicProfileName
          replicationBridgeBoundToQueue: true
          serviceRestIncomingMaxConnectionCount: 9
          serviceAmqpTlsListenPort: 0
          averageTxByteRate: 5
          eventServiceAmqpConnectionCountThreshold: null
          serviceRestMode: gateway
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          replicationBridgeName: replicationBridgeName
          maxSubscriptionCount: 5
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 4
          replicationBridgeUp: true
          controlTxMsgCount: 8
          serviceAmqpMaxConnectionCount: 2
          serviceMqttTlsUp: true
          maxEgressFlowCount: 9
          serviceMqttWebSocketListenPort: 0
          loginTxMsgCount: 1
          serviceWebTlsEnabled: true
          replicationStandbyTransactionRequestFailureCount: 8
          eventIngressMsgRateThreshold: null
          replicationStandbyTransactionRequestCount: 3
          eventPublishSubscriptionMode: "off"
          eventConnectionCountThreshold:
            clearPercent: 7
            setPercent: 7
            setValue: 6
            clearValue: 0
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 0
          serviceRestIncomingTlsListenPort: 7
          dataRxByteCount: 0
          tlsAverageTxByteRate: 1
          rxCompressedByteRate: 4
          dataTxMsgCount: 4
          eventPublishMsgVpnEnabled: true
          dmrEnabled: true
          txCompressionRatio: txCompressionRatio
          msgVpnName: msgVpnName
          eventEndpointCountThreshold: null
          replicationStandbyTransactionRequestSuccessCount: 2
          sempOverMsgBusAdminEnabled: true
          eventServiceRestIncomingConnectionCountThreshold: null
          serviceSmfMaxConnectionCount: 0
          tlsRxByteCount: 6
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          configSyncLocalState: configSyncLocalState
          replicationStandbyReconcileRequestTxMsgCount: 1
          rxByteCount: 4
          replicationQueueMaxMsgSpoolUsage: 7
          eventServiceMqttConnectionCountThreshold: null
          serviceSmfPlainTextUp: true
          sempOverMsgBusAdminClientEnabled: true
          averageTxCompressedByteRate: 6
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 6
          serviceSmfTlsUp: true
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          replicationActiveMateFlowNotCongestedPeakTime: 5
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          replicationActiveSyncIneligiblePeakTime: 5
          serviceAmqpPlainTextListenPort: 5
          systemManager: true
          authenticationClientCertValidateDateEnabled: true
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          serviceRestIncomingTlsFailureReason: serviceRestIncomingTlsFailureReason
          configSyncLocalTimeInState: 7
          eventLogTag: eventLogTag
          rate:
            tlsAverageTxByteRate: 9
            averageRxByteRate: 8
            txMsgRate: 4
            averageTxByteRate: 0
            tlsRxByteRate: 0
            tlsTxByteRate: 2
            averageRxMsgRate: 4
            tlsAverageRxByteRate: 2
            rxByteRate: 7
            rxMsgRate: 4
            averageTxMsgRate: 0
            txByteRate: 6
          distributedCacheManagementEnabled: true
          discardedTxMsgCount: 8
          maxEffectiveTxFlowCount: 3
          serviceRestIncomingTlsCompressed: true
          msgReplayInitializingCount: 5
          bridgingTlsServerCertValidateNameEnabled: true
          rxMsgCount: 8
          replicationActiveSyncQueuedMsgCount: 1
          subscriptionExportProgress: 0
          tlsRxByteRate: 2
          counter:
            loginRxMsgCount: 1
            msgSpoolRxMsgCount: 7
            controlTxMsgCount: 7
            tlsRxByteCount: 0
            controlRxByteCount: 7
            tlsTxByteCount: 9
            dataRxByteCount: 5
            dataRxMsgCount: 3
            controlRxMsgCount: 3
            loginTxMsgCount: 4
            controlTxByteCount: 3
            dataTxByteCount: 4
            msgSpoolTxMsgCount: 9
            dataTxMsgCount: 0
            discardedRxMsgCount: 6
            discardedTxMsgCount: 4
          serviceAmqpPlainTextFailureReason: serviceAmqpPlainTextFailureReason
          averageTxUncompressedByteRate: 3
          controlTxByteCount: 4
          rxUncompressedByteRate: 0
          mqttRetainMaxMemory: 3
          msgSpoolMsgCount: 0
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          msgReplayFailedCount: 9
          eventIngressFlowCountThreshold: null
          serviceMqttMaxConnectionCount: 7
          txMsgRate: 3
          authorizationProfileName: authorizationProfileName
          serviceMqttTlsFailureReason: serviceMqttTlsFailureReason
          replicationActiveReconcileRequestRxMsgCount: 4
          serviceAmqpPlainTextCompressed: true
          serviceMqttPlainTextFailureReason: serviceMqttPlainTextFailureReason
          serviceMqttWebSocketCompressed: true
          replicationActiveSyncQueuedAsAsyncMsgCount: 3
          replicationBridgeEgressFlowWindowSize: 9
          restTlsServerCertMaxChainDepth: 9
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold: null
          bridgingTlsServerCertValidateDateEnabled: true
          maxEffectiveSubscriptionCount: 8
          authorizationType: ldap
          replicationStandbyRxMsgCount: 4
          serviceMqttTlsWebSocketCompressed: true
          msgSpoolRxMsgCount: 3
          bridgingTlsServerCertMaxChainDepth: 0
          replicationBridgeCompressedDataEnabled: true
          rxCompressedByteCount: 6
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          averageRxUncompressedByteRate: 6
          eventTransactedSessionCountThreshold: null
          eventSubscriptionCountThreshold: null
          serviceMqttPlainTextListenPort: 6
          serviceMqttWebSocketUp: true
          dataTxByteCount: 5
          failureReason: failureReason
          serviceRestIncomingAuthorizationHeaderHandling: drop
          txUncompressedByteCount: 8
          rxByteRate: 8
          loginRxMsgCount: 2
          serviceRestIncomingPlainTextCompressed: true
          replicationQueueBound: true
          controlRxMsgCount: 0
          serviceMqttTlsWebSocketUp: true
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationActiveMateFlowCongestedPeakTime: 3
          txByteRate: 5
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          sempOverMsgBusEnabled: true
          maxTransactionCount: 7
          serviceMqttTlsListenPort: 4
          rxUncompressedByteCount: 6
          serviceRestIncomingTlsEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          tlsAverageRxByteRate: 7
          authenticationOauthEnabled: true
          tlsTxByteCount: 4
          averageRxMsgRate: 6
          dataRxMsgCount: 7
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 8
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          serviceAmqpTlsUp: true
          configSyncLocalLastResult: configSyncLocalLastResult
          authenticationClientCertCertificateMatchingRulesEnabled: true
          replicationActiveLocallyConsumedMsgCount: 1
          txByteCount: 3
          replicationActiveAsyncQueuedMsgCount: 1
          serviceMqttTlsEnabled: true
          maxEffectiveTransactionCount: 1
          serviceMqttPlainTextUp: true
          serviceMqttTlsWebSocketFailureReason: serviceMqttTlsWebSocketFailureReason
          serviceSmfTlsFailureReason: serviceSmfTlsFailureReason
          replicationActiveAckPropTxMsgCount: 9
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold: null
          rxMsgRate: 2
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          txMsgCount: 5
          averageTxMsgRate: 3
          eventEgressFlowCountThreshold: null
          serviceAmqpTlsCompressed: true
          eventMsgSpoolUsageThreshold: null
          replicationActiveTransitionToSyncIneligibleCount: 3
          configSyncLocalKey: configSyncLocalKey
          controlRxByteCount: 6
          jndiEnabled: true
          maxEffectiveTransactedSessionCount: 9
          eventPublishClientEnabled: true
          replicationSyncEligible: true
          replicationActiveSyncEligiblePeakTime: 5
          maxEffectiveRxFlowCount: 4
          tlsAllowDowngradeToPlainTextEnabled: true
          replicationStandbyAckPropRxMsgCount: 9
          maxConnectionCount: 8
          msgReplayActiveCount: 3
          eventServiceSmfConnectionCountThreshold: null
          tlsTxByteRate: 2
          serviceAmqpPlainTextUp: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 3
            clearValue: 4
          replicationBridgeRetryDelay: 7
          txCompressedByteCount: 3
          serviceAmqpTlsFailureReason: serviceAmqpTlsFailureReason
          alias: alias
          authenticationOauthDefaultProfileName: authenticationOauthDefaultProfileName
          serviceMqttTlsWebSocketListenPort: 0
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          rxCompressionRatio: rxCompressionRatio
          maxIngressFlowCount: 0
          serviceMqttTlsCompressed: true
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 8
          msgReplayPendingCompleteCount: 7
          serviceRestIncomingTlsUp: true
          serviceRestIncomingPlainTextUp: true
          averageBindRequestRate: 6
          msgSpoolTxMsgCount: 2
          replicationRemoteBridgeUp: true
          maxMsgSpoolUsage: 5
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
        collections:
        - telemetryProfiles:
            count: 6
          clients:
            count: 3
          clientProfiles:
            count: 7
          topicEndpoints:
            count: 9
          queueTemplates:
            count: 1
          distributedCaches:
            count: 4
          jndiTopics:
            count: 1
          clientUsernames:
            count: 9
          mqttRetainCaches:
            count: 6
          replayLogs:
            count: 5
          authorizationGroups:
            count: 5
          mqttSessions:
            count: 7
          aclProfiles:
            count: 0
          restDeliveryPoints:
            count: 9
          jndiConnectionFactories:
            count: 1
          configSyncRemoteNodes:
            count: 2
          jndiQueues:
            count: 1
          authenticationOauthProfiles:
            count: 6
          bridges:
            count: 5
          transactions:
            count: 6
          dmrBridges:
            count: 7
          certMatchingRules:
            count: 2
          queues:
            count: 4
          topicEndpointTemplates:
            count: 8
          authenticationOauthProviders:
            count: 1
          replicatedTopics:
            count: 9
        - telemetryProfiles:
            count: 6
          clients:
            count: 3
          clientProfiles:
            count: 7
          topicEndpoints:
            count: 9
          queueTemplates:
            count: 1
          distributedCaches:
            count: 4
          jndiTopics:
            count: 1
          clientUsernames:
            count: 9
          mqttRetainCaches:
            count: 6
          replayLogs:
            count: 5
          authorizationGroups:
            count: 5
          mqttSessions:
            count: 7
          aclProfiles:
            count: 0
          restDeliveryPoints:
            count: 9
          jndiConnectionFactories:
            count: 1
          configSyncRemoteNodes:
            count: 2
          jndiQueues:
            count: 1
          authenticationOauthProfiles:
            count: 6
          bridges:
            count: 5
          transactions:
            count: 6
          dmrBridges:
            count: 7
          certMatchingRules:
            count: 2
          queues:
            count: 4
          topicEndpointTemplates:
            count: 8
          authenticationOauthProviders:
            count: 1
          replicatedTopics:
            count: 9
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - telemetryProfilesUri: telemetryProfilesUri
          authenticationOauthProvidersUri: authenticationOauthProvidersUri
          transactionsUri: transactionsUri
          authenticationOauthProfilesUri: authenticationOauthProfilesUri
          clientProfilesUri: clientProfilesUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          configSyncRemoteNodesUri: configSyncRemoteNodesUri
          clientsUri: clientsUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          dmrBridgesUri: dmrBridgesUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          jndiQueuesUri: jndiQueuesUri
          topicEndpointsUri: topicEndpointsUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          replayLogsUri: replayLogsUri
          certMatchingRulesUri: certMatchingRulesUri
          authorizationGroupsUri: authorizationGroupsUri
        - telemetryProfilesUri: telemetryProfilesUri
          authenticationOauthProvidersUri: authenticationOauthProvidersUri
          transactionsUri: transactionsUri
          authenticationOauthProfilesUri: authenticationOauthProfilesUri
          clientProfilesUri: clientProfilesUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          configSyncRemoteNodesUri: configSyncRemoteNodesUri
          clientsUri: clientsUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          dmrBridgesUri: dmrBridgesUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          jndiQueuesUri: jndiQueuesUri
          topicEndpointsUri: topicEndpointsUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          replayLogsUri: replayLogsUri
          certMatchingRulesUri: certMatchingRulesUri
          authorizationGroupsUri: authorizationGroupsUri
    OauthProfile:
      type: object
      properties:
        accessLevelGroupsClaimName:
          type: string
          description: The name of the groups claim.
        accessLevelGroupsClaimStringFormat:
          type: string
          description: "The format of the access level groups claim value when it\
            \ is a string. The allowed values and their meaning are:\n\n<pre>\n\"\
            single\" - When the claim is a string, it is interpreted as a single group.\n\
            \"space-delimited\" - When the claim is a string, it is interpreted as\
            \ a space-delimited list of groups, similar to the \"scope\" claim.\n\
            </pre>\n Available since 2.32."
          enum:
          - single
          - space-delimited
        active:
          type: boolean
          description: "Indicates whether the profile is active. An enabled profile\
            \ may not be active if discovery is not complete, if there is no issuer\
            \ specified, or if there is another profile with the same issuer. Available\
            \ since 2.26."
        clientId:
          type: string
          description: The OAuth client id.
        clientRedirectUri:
          type: string
          description: The OAuth redirect URI.
        clientRequiredType:
          type: string
          description: The required value for the TYP field in the ID token header.
        clientScope:
          type: string
          description: The OAuth scope.
        clientValidateTypeEnabled:
          type: boolean
          description: Enable or disable verification of the TYP field in the ID token
            header.
        completeExpiredStateCount:
          type: integer
          description: The number of requests to the broker OAuth completion endpoint
            with an expired state token.
          format: int64
        completeInvalidStateCount:
          type: integer
          description: The number of request to the broker OAuth completion endpoint
            with an invalid state token.
          format: int64
        completeRequestCount:
          type: integer
          description: The number of requests to the broker OAuth completion endpoint
            (successful and unsuccessful).
          format: int64
        completeSuccessCount:
          type: integer
          description: The number of successful requests to the broker OAuth completion
            endpoint.  Successful requests have authenticated  the user and established
            a browser session.
          format: int64
        defaultGlobalAccessLevel:
          type: string
          description: |
            The default global access level for this OAuth profile. The allowed values and their meaning are:

            <pre>
            "none" - User has no access to global data.
            "read-only" - User has read-only access to global data.
            "read-write" - User has read-write access to most global data.
            "admin" - User has read-write access to all global data.
            </pre>
          enum:
          - none
          - read-only
          - read-write
          - admin
        defaultMsgVpnAccessLevel:
          type: string
          description: |
            The default message VPN access level for the OAuth profile. The allowed values and their meaning are:

            <pre>
            "none" - User has no access to a Message VPN.
            "read-only" - User has read-only access to a Message VPN.
            "read-write" - User has read-write access to most Message VPN settings.
            </pre>
          enum:
          - none
          - read-only
          - read-write
        discoveryLastRefreshFailureReason:
          type: string
          description: The reason for the last discovery endpoint refresh failure.
        discoveryLastRefreshFailureTime:
          type: integer
          description: The timestamp of the last discovery endpoint refresh failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        discoveryLastRefreshTime:
          type: integer
          description: The timestamp of the last discovery endpoint refresh success.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        discoveryNextScheduledRefreshTime:
          type: integer
          description: The timestamp of the next scheduled discovery endpoint refresh.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        discoveryRefreshFailureCount:
          type: integer
          description: The number of discovery endpoint refresh failures.
          format: int64
        displayName:
          type: string
          description: The user friendly name for the OAuth profile.
        enabled:
          type: boolean
          description: Enable or disable the OAuth profile.
        endpointAuthorization:
          type: string
          description: The OAuth authorization endpoint.
        endpointAuthorizationOperational:
          type: string
          description: The operational OAuth authorization endpoint.
        endpointDiscovery:
          type: string
          description: The OpenID Connect discovery endpoint or OAuth Authorization
            Server Metadata endpoint.
        endpointDiscoveryRefreshInterval:
          type: integer
          description: The number of seconds between discovery endpoint requests.
          format: int32
        endpointIntrospection:
          type: string
          description: The OAuth introspection endpoint.
        endpointIntrospectionOperational:
          type: string
          description: The operational OAuth introspection endpoint.
        endpointIntrospectionTimeout:
          type: integer
          description: The maximum time in seconds a token introspection request is
            allowed to take.
          format: int32
        endpointJwks:
          type: string
          description: The OAuth JWKS endpoint.
        endpointJwksOperational:
          type: string
          description: The operational OAuth JWKS endpoint.
        endpointJwksRefreshInterval:
          type: integer
          description: The number of seconds between JWKS endpoint requests.
          format: int32
        endpointToken:
          type: string
          description: The OAuth token endpoint.
        endpointTokenOperational:
          type: string
          description: The operational OAuth token endpoint.
        endpointTokenTimeout:
          type: integer
          description: The maximum time in seconds a token request is allowed to take.
          format: int32
        endpointUserinfo:
          type: string
          description: The OpenID Connect Userinfo endpoint.
        endpointUserinfoOperational:
          type: string
          description: The operational OpenID Connect Userinfo endpoint.
        endpointUserinfoTimeout:
          type: integer
          description: The maximum time in seconds a userinfo request is allowed to
            take.
          format: int32
        inactiveReason:
          type: string
          description: |-
            The reason the profile is not active. The allowed values and their meaning are:

            <pre>
            "profile-disabled" - The OAuth profile is disabled.
            "missing-issuer" - The issuer has not been discovered or configured.
            "duplicate-issuer" - Another OAuth profile already has the same issuer.
            "none" - The OAuth profile is active.
            </pre>
             Available since 2.26.
        initiateInvalidErrorLinkCount:
          type: integer
          description: The number of requests to the broker OAuth initiation endpoint
            that had an invalid error_link_uri parameter.
          format: int64
        initiateInvalidHostCount:
          type: integer
          description: The number of requests to the broker OAuth initiation endpoint
            that did not have a valid Host header.  See the Allowed Host configuration
            setting.
          format: int64
        initiateInvalidTargetLinkCount:
          type: integer
          description: The number of requests to the broker OAuth initiation endpoint
            that had an invalid target_link_uri parameter.
          format: int64
        initiateRequestCount:
          type: integer
          description: The number of requests to the broker OAuth initiation endpoint
            (successful and unsuccessful).
          format: int64
        initiateSuccessCount:
          type: integer
          description: The number of requests to the broker OAuth initiation endpoint
            that successfully redirected to the OAuth provider's authorization endpoint.
          format: int64
        interactiveEnabled:
          type: boolean
          description: Enable or disable interactive logins via this OAuth provider.
        interactiveGroupsFoundInTokenCount:
          type: integer
          description: The number of times the groups were successfully found in the
            ID token or access token for interactive authentication.
          format: int64
        interactiveIntrospectionMissingCount:
          type: integer
          description: The number of failures during interactive authentication due
            to missing introspection configuration (a introspection request was required
            but no introspection endpoint was configured).
          format: int64
        interactiveIntrospectionMissingGroupsCount:
          type: integer
          description: The number of introspection request made from the broker during
            interactive authentication for this OAuth profile  where the configured
            groups claim wasn't found in the access token or the introspection response.
          format: int64
        interactiveIntrospectionMissingUsernameCount:
          type: integer
          description: The number of introspection requests made from the broker during
            interactive authentication for this OAuth profile where the configured
            username claim wasn't found in the access token or introspection response.
          format: int64
        interactiveIntrospectionRequestCount:
          type: integer
          description: The number of requests made to the introspection endpoint during
            interactive authentication.
          format: int64
        interactiveIntrospectionResponseInvalidCount:
          type: integer
          description: The number of introspection responses during interactive authentication
            that couldn't be parsed.
          format: int64
        interactiveIntrospectionStatusOkCount:
          type: integer
          description: The number of introspection requests made from the broker during
            interactive authentication for this OAuth profile with 200 status responses.
          format: int64
        interactiveIntrospectionStatusOtherCount:
          type: integer
          description: The number of introspection requests made from the broker during
            interactive authentication for this OAuth profile with status responses
            other than 200.
          format: int64
        interactiveIntrospectionTokenNotActiveCount:
          type: integer
          description: The number of introspection responses indicating that the provided
            token was not active.
          format: int64
        interactivePromptForExpiredSession:
          type: string
          description: The value of the prompt parameter provided to the OAuth authorization
            server for login requests where the session has expired.
        interactivePromptForNewSession:
          type: string
          description: The value of the prompt parameter provided to the OAuth authorization
            server for login requests where the session is new or the user has explicitly
            logged out.
        interactiveUserinfoMissingCount:
          type: integer
          description: The number of failures due to missing Userinfo configuration
            (a Userinfo request was required but no Userinfo endpoint was configured)
            during interactive authentication.
          format: int64
        interactiveUserinfoMissingGroupsCount:
          type: integer
          description: The number of Userinfo request made from the broker during
            interactive authentication for this OAuth profile where the configured
            groups claim wasn't found in the ID token or the Userinfo response.
          format: int64
        interactiveUserinfoMissingUsernameCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            interactive authentication for this OAuth profile where the configured
            username claim wasn't found in the ID token or Userinfo response.
          format: int64
        interactiveUserinfoRequestCount:
          type: integer
          description: The number of requests made to the Userinfo endpoint during
            interactive authentication.
          format: int64
        interactiveUserinfoResponseInvalidCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            interactive authentication for this OAuth profile with responses that
            couldn't be parsed.
          format: int64
        interactiveUserinfoStatusOkCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            interactive authentication for this OAuth profile with 200 status responses.
          format: int64
        interactiveUserinfoStatusOtherCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            interactive authentication for this OAuth profile with status responses
            other than 200.
          format: int64
        interactiveUserinfoSubjectMismatchCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            interactive authentication for this OAuth profile with subject claims
            that did not match the subject from the ID token.
          format: int64
        interactiveUsernameFoundInTokenCount:
          type: integer
          description: The number of time the username was successfully found in the
            ID token or access token for interactive authentication.
          format: int64
        introspectionAverageTime:
          type: integer
          description: "The one minute average of the time required to complete a\
            \ token introspection, in milliseconds (ms)."
          format: int32
        introspectionLastFailureReason:
          type: string
          description: The reason for the introspection endpoint request failure.
        introspectionLastFailureTime:
          type: integer
          description: The timestamp of the last introspection endpoint request failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        issuer:
          type: string
          description: The Issuer Identifier for the OAuth provider.
        issuerOperational:
          type: string
          description: The operational Issuer Identifier for the OAuth provider.
        jwksLastRefreshFailureReason:
          type: string
          description: The reason for the last JWKS public key refresh failure.
        jwksLastRefreshFailureTime:
          type: integer
          description: The timestamp of the last JWKS public key refresh failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        jwksLastRefreshTime:
          type: integer
          description: The timestamp of the last JWKS public key refresh success.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        jwksNextScheduledRefreshTime:
          type: integer
          description: The timestamp of the next scheduled JWKS public key refresh.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        jwksRefreshFailureCount:
          type: integer
          description: The number of JWKS public key refresh failures.
          format: int64
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
        oauthRole:
          type: string
          description: |
            The OAuth role of the broker. The allowed values and their meaning are:

            <pre>
            "client" - The broker is in the OAuth client role.
            "resource-server" - The broker is in the OAuth resource server role.
            </pre>
          enum:
          - client
          - resource-server
        resourceServerParseAccessTokenEnabled:
          type: boolean
          description: Enable or disable parsing of the access token as a JWT.
        resourceServerRequiredAudience:
          type: string
          description: The required audience value.
        resourceServerRequiredIssuer:
          type: string
          description: The required issuer value.
        resourceServerRequiredScope:
          type: string
          description: A space-separated list of scopes that must be present in the
            scope claim.
        resourceServerRequiredType:
          type: string
          description: The required TYP value.
        resourceServerValidateAudienceEnabled:
          type: boolean
          description: Enable or disable verification of the audience claim in the
            access token or introspection response.
        resourceServerValidateIssuerEnabled:
          type: boolean
          description: Enable or disable verification of the issuer claim in the access
            token or introspection response.
        resourceServerValidateScopeEnabled:
          type: boolean
          description: Enable or disable verification of the scope claim in the access
            token or introspection response.
        resourceServerValidateTypeEnabled:
          type: boolean
          description: Enable or disable verification of the TYP field in the access
            token header.
        sempEnabled:
          type: boolean
          description: Enable or disable authentication of SEMP requests with OAuth
            tokens.
        sempExpiredTokenCount:
          type: integer
          description: The number of SEMP requests with an expired OAuth token.
          format: int64
        sempGroupsFoundInTokenCount:
          type: integer
          description: The number of times the groups were successfully found in the
            ID token or access token for SEMP request authentication.
          format: int64
        sempIntrospectionMissingCount:
          type: integer
          description: The number of failures during SEMP request authentication due
            to missing introspection configuration (a introspection request was required
            but no introspection endpoint was configured).
          format: int64
        sempIntrospectionMissingGroupsCount:
          type: integer
          description: The number of introspection request made from the broker during
            SEMP request authentication for this OAuth profile where the configured
            groups claim wasn't found in the access token or the introspection response.
          format: int64
        sempIntrospectionMissingUsernameCount:
          type: integer
          description: The number of introspection requests made from the broker during
            SEMP request authentication for this OAuth profile where the configured
            username claim wasn't found in the access token or introspection response.
          format: int64
        sempIntrospectionRequestCount:
          type: integer
          description: The number of requests made to the introspection endpoint during
            SEMP request authentication.
          format: int64
        sempIntrospectionResponseInvalidCount:
          type: integer
          description: The number of introspection responses during SEMP request authentication
            that couldn't be parsed.
          format: int64
        sempIntrospectionStatusOkCount:
          type: integer
          description: The number of introspection requests made from the broker during
            SEMP request authentication for this OAuth profile with 200 status responses.
          format: int64
        sempIntrospectionStatusOtherCount:
          type: integer
          description: The number of introspection requests made from the broker during
            SEMP request authentication for this OAuth profile with status responses
            other than 200.
          format: int64
        sempIntrospectionTokenNotActiveCount:
          type: integer
          description: The number of introspection responses indicating that the provided
            token was not active.
          format: int64
        sempInvalidTokenCount:
          type: integer
          description: The number of SEMP requests with an invalid OAuth token.
          format: int64
        sempRequestCount:
          type: integer
          description: The number of SEMP requests (successful and unsuccessful) using
            this OAuth profile.
          format: int64
        sempSuccessCount:
          type: integer
          description: The number of successful SEMP authentications using this OAuth
            profile.
          format: int64
        sempUserinfoMissingCount:
          type: integer
          description: The number of failures due to missing Userinfo configuration
            (a Userinfo request was required but no Userinfo endpoint was configured)
            during SEMP request authentication.
          format: int64
        sempUserinfoMissingGroupsCount:
          type: integer
          description: The number of Userinfo request made from the broker during
            SEMP request authentication for this OAuth profile where the configured
            groups claim wasn't found in the ID token or the Userinfo response.
          format: int64
        sempUserinfoMissingUsernameCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            SEMP request authentication for this OAuth profile where the configured
            username claim wasn't found in the ID token or Userinfo response.
          format: int64
        sempUserinfoRequestCount:
          type: integer
          description: The number of requests made to the Userinfo endpoint during
            SEMP request authentication.
          format: int64
        sempUserinfoResponseInvalidCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            SEMP request authentication for this OAuth profile with responses that
            couldn't be parsed.
          format: int64
        sempUserinfoStatusOkCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            SEMP request authentication for this OAuth profile with 200 status responses.
          format: int64
        sempUserinfoStatusOtherCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            SEMP request authentication for this OAuth profile with status responses
            other than 200.
          format: int64
        sempUserinfoSubjectMismatchCount:
          type: integer
          description: The number of Userinfo requests made from the broker during
            SEMP request authentication for this OAuth profile with subject claims
            that did not match the subject from the ID token.
          format: int64
        sempUsernameFoundInTokenCount:
          type: integer
          description: The number of time the username was successfully found in the
            ID token or access token for SEMP request authentication.
          format: int64
        tokenEndpointAverageTime:
          type: integer
          description: "The one minute average of the time required to complete a\
            \ token request, in milliseconds (ms)."
          format: int32
        tokenEndpointInvalidTokenCount:
          type: integer
          description: The number of token endpoint requests made from the broker
            for this OAuth profile that returned tokens that couldn't be verified.
          format: int64
        tokenEndpointLastFailureReason:
          type: string
          description: The reason for the last token endpoint request failure.
        tokenEndpointLastFailureTime:
          type: integer
          description: The timestamp of the last token endpoint request failure. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time).
          format: int32
        tokenEndpointOtherErrorCount:
          type: integer
          description: The number of token endpoint requests made from the broker
            for this OAuth profile that returned an unexpected error not accounted
            for in the other failure statistics.
          format: int64
        tokenEndpointRequestCount:
          type: integer
          description: The number of token endpoint requests made from the broker
            for this OAuth profile.
          format: int64
        tokenEndpointStatusBadRequestCount:
          type: integer
          description: The number of token endpoint requests made from the broker
            for this OAuth profile with 400 status responses.
          format: int64
        tokenEndpointStatusOkCount:
          type: integer
          description: The number of token endpoint requests made from the broker
            for this OAuth profile with 200 status responses.
          format: int64
        tokenEndpointStatusOtherCount:
          type: integer
          description: The number of token endpoint requests made from the broker
            for this OAuth profile with status responses other than 200 or 400.
          format: int64
        userinfoAverageTime:
          type: integer
          description: "The one minute average of the time required to complete a\
            \ token userinfo request, in milliseconds (ms)."
          format: int32
        userinfoLastFailureReason:
          type: string
          description: The reason for the userinfo endpoint request failure.
        userinfoLastFailureTime:
          type: integer
          description: The timestamp of the last userinfo endpoint request failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        usernameClaimName:
          type: string
          description: The name of the username claim.
      example:
        jwksRefreshFailureCount: 5
        endpointUserinfoTimeout: 4
        resourceServerRequiredType: resourceServerRequiredType
        interactiveGroupsFoundInTokenCount: 9
        interactiveUserinfoStatusOkCount: 7
        issuer: issuer
        resourceServerRequiredScope: resourceServerRequiredScope
        sempRequestCount: 0
        sempUserinfoStatusOtherCount: 0
        sempIntrospectionMissingCount: 0
        userinfoAverageTime: 8
        sempIntrospectionMissingGroupsCount: 6
        inactiveReason: inactiveReason
        active: true
        introspectionLastFailureReason: introspectionLastFailureReason
        tokenEndpointStatusBadRequestCount: 1
        discoveryLastRefreshFailureTime: 4
        interactiveIntrospectionMissingCount: 6
        tokenEndpointRequestCount: 9
        completeSuccessCount: 2
        sempIntrospectionMissingUsernameCount: 4
        sempIntrospectionStatusOtherCount: 9
        clientRequiredType: clientRequiredType
        sempUserinfoStatusOkCount: 3
        interactiveIntrospectionTokenNotActiveCount: 5
        endpointIntrospection: endpointIntrospection
        sempUserinfoMissingCount: 5
        interactiveIntrospectionMissingGroupsCount: 3
        interactiveUserinfoMissingUsernameCount: 3
        displayName: displayName
        endpointTokenTimeout: 1
        jwksLastRefreshFailureTime: 3
        discoveryLastRefreshTime: 7
        issuerOperational: issuerOperational
        tokenEndpointOtherErrorCount: 8
        enabled: true
        sempGroupsFoundInTokenCount: 4
        endpointJwksOperational: endpointJwksOperational
        endpointJwksRefreshInterval: 7
        resourceServerRequiredIssuer: resourceServerRequiredIssuer
        sempUserinfoMissingUsernameCount: 6
        endpointUserinfoOperational: endpointUserinfoOperational
        interactiveIntrospectionMissingUsernameCount: 6
        interactiveUserinfoMissingGroupsCount: 3
        usernameClaimName: usernameClaimName
        endpointToken: endpointToken
        initiateInvalidTargetLinkCount: 9
        sempIntrospectionResponseInvalidCount: 4
        clientValidateTypeEnabled: true
        clientId: clientId
        discoveryRefreshFailureCount: 1
        endpointTokenOperational: endpointTokenOperational
        sempUserinfoSubjectMismatchCount: 2
        resourceServerParseAccessTokenEnabled: true
        endpointAuthorization: endpointAuthorization
        interactiveUserinfoRequestCount: 7
        tokenEndpointStatusOkCount: 3
        tokenEndpointAverageTime: 8
        sempIntrospectionTokenNotActiveCount: 0
        endpointIntrospectionOperational: endpointIntrospectionOperational
        userinfoLastFailureReason: userinfoLastFailureReason
        introspectionLastFailureTime: 7
        clientRedirectUri: clientRedirectUri
        tokenEndpointStatusOtherCount: 9
        endpointDiscovery: endpointDiscovery
        tokenEndpointLastFailureTime: 4
        completeExpiredStateCount: 7
        discoveryLastRefreshFailureReason: discoveryLastRefreshFailureReason
        endpointAuthorizationOperational: endpointAuthorizationOperational
        initiateInvalidErrorLinkCount: 5
        sempExpiredTokenCount: 3
        sempUserinfoMissingGroupsCount: 4
        initiateRequestCount: 6
        completeRequestCount: 3
        tokenEndpointLastFailureReason: tokenEndpointLastFailureReason
        resourceServerValidateIssuerEnabled: true
        interactiveUserinfoStatusOtherCount: 6
        completeInvalidStateCount: 9
        interactiveUsernameFoundInTokenCount: 4
        interactiveIntrospectionRequestCount: 1
        resourceServerValidateScopeEnabled: true
        sempIntrospectionRequestCount: 1
        jwksNextScheduledRefreshTime: 7
        tokenEndpointInvalidTokenCount: 6
        endpointUserinfo: endpointUserinfo
        resourceServerRequiredAudience: resourceServerRequiredAudience
        oauthRole: client
        sempEnabled: true
        resourceServerValidateTypeEnabled: true
        interactiveIntrospectionStatusOtherCount: 6
        interactiveUserinfoSubjectMismatchCount: 0
        interactiveUserinfoResponseInvalidCount: 0
        initiateInvalidHostCount: 9
        defaultMsgVpnAccessLevel: none
        sempUsernameFoundInTokenCount: 1
        clientScope: clientScope
        interactiveIntrospectionResponseInvalidCount: 2
        accessLevelGroupsClaimStringFormat: single
        jwksLastRefreshTime: 3
        sempUserinfoRequestCount: 8
        interactivePromptForNewSession: interactivePromptForNewSession
        endpointDiscoveryRefreshInterval: 1
        interactiveUserinfoMissingCount: 6
        endpointIntrospectionTimeout: 6
        sempIntrospectionStatusOkCount: 7
        sempSuccessCount: 7
        userinfoLastFailureTime: 0
        introspectionAverageTime: 8
        initiateSuccessCount: 8
        sempUserinfoResponseInvalidCount: 4
        endpointJwks: endpointJwks
        defaultGlobalAccessLevel: none
        interactiveIntrospectionStatusOkCount: 6
        jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
        discoveryNextScheduledRefreshTime: 1
        resourceServerValidateAudienceEnabled: true
        interactivePromptForExpiredSession: interactivePromptForExpiredSession
        oauthProfileName: oauthProfileName
        sempInvalidTokenCount: 9
        interactiveEnabled: true
        accessLevelGroupsClaimName: accessLevelGroupsClaimName
    OauthProfileAccessLevelGroup:
      type: object
      properties:
        description:
          type: string
          description: A description for the group.
        globalAccessLevel:
          type: string
          description: |
            The global access level for this group. The allowed values and their meaning are:

            <pre>
            "none" - User has no access to global data.
            "read-only" - User has read-only access to global data.
            "read-write" - User has read-write access to most global data.
            "admin" - User has read-write access to all global data.
            </pre>
          enum:
          - none
          - read-only
          - read-write
          - admin
        groupName:
          type: string
          description: The name of the group.
        msgVpnAccessLevel:
          type: string
          description: |
            The default message VPN access level for this group. The allowed values and their meaning are:

            <pre>
            "none" - User has no access to a Message VPN.
            "read-only" - User has read-only access to a Message VPN.
            "read-write" - User has read-write access to most Message VPN settings.
            </pre>
          enum:
          - none
          - read-only
          - read-write
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
      example:
        groupName: groupName
        msgVpnAccessLevel: none
        description: description
        oauthProfileName: oauthProfileName
        globalAccessLevel: none
    OauthProfileAccessLevelGroupCollections:
      type: object
      properties:
        msgVpnAccessLevelExceptions:
          $ref: '#/components/schemas/OauthProfileAccessLevelGroupCollectionsMsgVpnAccessLevelExceptions'
      example:
        msgVpnAccessLevelExceptions:
          count: 0
    OauthProfileAccessLevelGroupCollectionsMsgVpnAccessLevelExceptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the msgVpnAccessLevelExceptions
            collection.
          format: int64
      example:
        count: 0
    OauthProfileAccessLevelGroupLinks:
      type: object
      properties:
        msgVpnAccessLevelExceptionsUri:
          type: string
          description: The URI of this Group Access Level's collection of Message
            VPN Access-Level Exception objects.
        uri:
          type: string
          description: The URI of this Group Access Level object.
      example:
        msgVpnAccessLevelExceptionsUri: msgVpnAccessLevelExceptionsUri
        uri: uri
    OauthProfileAccessLevelGroupMsgVpnAccessLevelException:
      type: object
      properties:
        accessLevel:
          type: string
          description: |
            The message VPN access level. The allowed values and their meaning are:

            <pre>
            "none" - User has no access to a Message VPN.
            "read-only" - User has read-only access to a Message VPN.
            "read-write" - User has read-write access to most Message VPN settings.
            </pre>
          enum:
          - none
          - read-only
          - read-write
        groupName:
          type: string
          description: The name of the group.
        msgVpnName:
          type: string
          description: The name of the message VPN.
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
      example:
        groupName: groupName
        accessLevel: none
        oauthProfileName: oauthProfileName
        msgVpnName: msgVpnName
    OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionCollections:
      type: object
    OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Message VPN Access-Level Exception object.
      example:
        uri: uri
    OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionCollections'
        data:
          $ref: '#/components/schemas/OauthProfileAccessLevelGroupMsgVpnAccessLevelException'
        links:
          $ref: '#/components/schemas/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          groupName: groupName
          accessLevel: none
          oauthProfileName: oauthProfileName
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileAccessLevelGroupMsgVpnAccessLevelException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - groupName: groupName
          accessLevel: none
          oauthProfileName: oauthProfileName
          msgVpnName: msgVpnName
        - groupName: groupName
          accessLevel: none
          oauthProfileName: oauthProfileName
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    OauthProfileAccessLevelGroupResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/OauthProfileAccessLevelGroupCollections'
        data:
          $ref: '#/components/schemas/OauthProfileAccessLevelGroup'
        links:
          $ref: '#/components/schemas/OauthProfileAccessLevelGroupLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          groupName: groupName
          msgVpnAccessLevel: none
          description: description
          oauthProfileName: oauthProfileName
          globalAccessLevel: none
        collections:
          msgVpnAccessLevelExceptions:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          msgVpnAccessLevelExceptionsUri: msgVpnAccessLevelExceptionsUri
          uri: uri
    OauthProfileAccessLevelGroupsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileAccessLevelGroupCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileAccessLevelGroup'
        links:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileAccessLevelGroupLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - groupName: groupName
          msgVpnAccessLevel: none
          description: description
          oauthProfileName: oauthProfileName
          globalAccessLevel: none
        - groupName: groupName
          msgVpnAccessLevel: none
          description: description
          oauthProfileName: oauthProfileName
          globalAccessLevel: none
        collections:
        - msgVpnAccessLevelExceptions:
            count: 0
        - msgVpnAccessLevelExceptions:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - msgVpnAccessLevelExceptionsUri: msgVpnAccessLevelExceptionsUri
          uri: uri
        - msgVpnAccessLevelExceptionsUri: msgVpnAccessLevelExceptionsUri
          uri: uri
    OauthProfileClientAllowedHost:
      type: object
      properties:
        allowedHost:
          type: string
          description: An allowed value for the Host header.
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
      example:
        allowedHost: allowedHost
        oauthProfileName: oauthProfileName
    OauthProfileClientAllowedHostCollections:
      type: object
    OauthProfileClientAllowedHostLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Allowed Host Value object.
      example:
        uri: uri
    OauthProfileClientAllowedHostResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/OauthProfileClientAllowedHostCollections'
        data:
          $ref: '#/components/schemas/OauthProfileClientAllowedHost'
        links:
          $ref: '#/components/schemas/OauthProfileClientAllowedHostLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          allowedHost: allowedHost
          oauthProfileName: oauthProfileName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    OauthProfileClientAllowedHostsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileClientAllowedHostCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileClientAllowedHost'
        links:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileClientAllowedHostLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - allowedHost: allowedHost
          oauthProfileName: oauthProfileName
        - allowedHost: allowedHost
          oauthProfileName: oauthProfileName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    OauthProfileClientAuthorizationParameter:
      type: object
      properties:
        authorizationParameterName:
          type: string
          description: The name of the authorization parameter.
        authorizationParameterValue:
          type: string
          description: The authorization parameter value.
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
      example:
        authorizationParameterValue: authorizationParameterValue
        oauthProfileName: oauthProfileName
        authorizationParameterName: authorizationParameterName
    OauthProfileClientAuthorizationParameterCollections:
      type: object
    OauthProfileClientAuthorizationParameterLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Authorization Parameter object.
      example:
        uri: uri
    OauthProfileClientAuthorizationParameterResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/OauthProfileClientAuthorizationParameterCollections'
        data:
          $ref: '#/components/schemas/OauthProfileClientAuthorizationParameter'
        links:
          $ref: '#/components/schemas/OauthProfileClientAuthorizationParameterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          authorizationParameterValue: authorizationParameterValue
          oauthProfileName: oauthProfileName
          authorizationParameterName: authorizationParameterName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    OauthProfileClientAuthorizationParametersResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileClientAuthorizationParameterCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileClientAuthorizationParameter'
        links:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileClientAuthorizationParameterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - authorizationParameterValue: authorizationParameterValue
          oauthProfileName: oauthProfileName
          authorizationParameterName: authorizationParameterName
        - authorizationParameterValue: authorizationParameterValue
          oauthProfileName: oauthProfileName
          authorizationParameterName: authorizationParameterName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    OauthProfileClientRequiredClaim:
      type: object
      properties:
        clientRequiredClaimName:
          type: string
          description: The name of the ID token claim to verify.
        clientRequiredClaimValue:
          type: string
          description: "The required claim value, which must be a string containing\
            \ a valid JSON value."
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
      example:
        clientRequiredClaimValue: clientRequiredClaimValue
        oauthProfileName: oauthProfileName
        clientRequiredClaimName: clientRequiredClaimName
    OauthProfileClientRequiredClaimCollections:
      type: object
    OauthProfileClientRequiredClaimLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Required Claim object.
      example:
        uri: uri
    OauthProfileClientRequiredClaimResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/OauthProfileClientRequiredClaimCollections'
        data:
          $ref: '#/components/schemas/OauthProfileClientRequiredClaim'
        links:
          $ref: '#/components/schemas/OauthProfileClientRequiredClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          clientRequiredClaimValue: clientRequiredClaimValue
          oauthProfileName: oauthProfileName
          clientRequiredClaimName: clientRequiredClaimName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    OauthProfileClientRequiredClaimsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileClientRequiredClaimCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileClientRequiredClaim'
        links:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileClientRequiredClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - clientRequiredClaimValue: clientRequiredClaimValue
          oauthProfileName: oauthProfileName
          clientRequiredClaimName: clientRequiredClaimName
        - clientRequiredClaimValue: clientRequiredClaimValue
          oauthProfileName: oauthProfileName
          clientRequiredClaimName: clientRequiredClaimName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    OauthProfileCollections:
      type: object
      properties:
        accessLevelGroups:
          $ref: '#/components/schemas/OauthProfileCollectionsAccessLevelGroups'
        clientAllowedHosts:
          $ref: '#/components/schemas/OauthProfileCollectionsClientAllowedHosts'
        clientAuthorizationParameters:
          $ref: '#/components/schemas/OauthProfileCollectionsClientAuthorizationParameters'
        clientRequiredClaims:
          $ref: '#/components/schemas/OauthProfileCollectionsClientRequiredClaims'
        defaultMsgVpnAccessLevelExceptions:
          $ref: '#/components/schemas/OauthProfileCollectionsDefaultMsgVpnAccessLevelExceptions'
        resourceServerRequiredClaims:
          $ref: '#/components/schemas/OauthProfileCollectionsResourceServerRequiredClaims'
      example:
        clientAuthorizationParameters:
          count: 1
        defaultMsgVpnAccessLevelExceptions:
          count: 5
        resourceServerRequiredClaims:
          count: 2
        clientRequiredClaims:
          count: 5
        accessLevelGroups:
          count: 0
        clientAllowedHosts:
          count: 6
    OauthProfileCollectionsAccessLevelGroups:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the accessLevelGroups collection.
          format: int64
      example:
        count: 0
    OauthProfileCollectionsClientAllowedHosts:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the clientAllowedHosts collection.
          format: int64
      example:
        count: 6
    OauthProfileCollectionsClientAuthorizationParameters:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the clientAuthorizationParameters
            collection.
          format: int64
      example:
        count: 1
    OauthProfileCollectionsClientRequiredClaims:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the clientRequiredClaims collection.
          format: int64
      example:
        count: 5
    OauthProfileCollectionsDefaultMsgVpnAccessLevelExceptions:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the defaultMsgVpnAccessLevelExceptions
            collection.
          format: int64
      example:
        count: 5
    OauthProfileCollectionsResourceServerRequiredClaims:
      type: object
      properties:
        count:
          type: integer
          description: The total number of objects in the resourceServerRequiredClaims
            collection.
          format: int64
      example:
        count: 2
    OauthProfileDefaultMsgVpnAccessLevelException:
      type: object
      properties:
        accessLevel:
          type: string
          description: |
            The message VPN access level. The allowed values and their meaning are:

            <pre>
            "none" - User has no access to a Message VPN.
            "read-only" - User has read-only access to a Message VPN.
            "read-write" - User has read-write access to most Message VPN settings.
            </pre>
          enum:
          - none
          - read-only
          - read-write
        msgVpnName:
          type: string
          description: The name of the message VPN.
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
      example:
        accessLevel: none
        oauthProfileName: oauthProfileName
        msgVpnName: msgVpnName
    OauthProfileDefaultMsgVpnAccessLevelExceptionCollections:
      type: object
    OauthProfileDefaultMsgVpnAccessLevelExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Message VPN Access-Level Exception object.
      example:
        uri: uri
    OauthProfileDefaultMsgVpnAccessLevelExceptionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/OauthProfileDefaultMsgVpnAccessLevelExceptionCollections'
        data:
          $ref: '#/components/schemas/OauthProfileDefaultMsgVpnAccessLevelException'
        links:
          $ref: '#/components/schemas/OauthProfileDefaultMsgVpnAccessLevelExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          accessLevel: none
          oauthProfileName: oauthProfileName
          msgVpnName: msgVpnName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    OauthProfileDefaultMsgVpnAccessLevelExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileDefaultMsgVpnAccessLevelExceptionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileDefaultMsgVpnAccessLevelException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileDefaultMsgVpnAccessLevelExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - accessLevel: none
          oauthProfileName: oauthProfileName
          msgVpnName: msgVpnName
        - accessLevel: none
          oauthProfileName: oauthProfileName
          msgVpnName: msgVpnName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    OauthProfileLinks:
      type: object
      properties:
        accessLevelGroupsUri:
          type: string
          description: The URI of this OAuth Profile's collection of Group Access
            Level objects.
        clientAllowedHostsUri:
          type: string
          description: The URI of this OAuth Profile's collection of Allowed Host
            Value objects.
        clientAuthorizationParametersUri:
          type: string
          description: The URI of this OAuth Profile's collection of Authorization
            Parameter objects.
        clientRequiredClaimsUri:
          type: string
          description: The URI of this OAuth Profile's collection of Required Claim
            objects.
        defaultMsgVpnAccessLevelExceptionsUri:
          type: string
          description: The URI of this OAuth Profile's collection of Message VPN Access-Level
            Exception objects.
        resourceServerRequiredClaimsUri:
          type: string
          description: The URI of this OAuth Profile's collection of Required Claim
            objects.
        uri:
          type: string
          description: The URI of this OAuth Profile object.
      example:
        accessLevelGroupsUri: accessLevelGroupsUri
        clientAllowedHostsUri: clientAllowedHostsUri
        resourceServerRequiredClaimsUri: resourceServerRequiredClaimsUri
        defaultMsgVpnAccessLevelExceptionsUri: defaultMsgVpnAccessLevelExceptionsUri
        clientAuthorizationParametersUri: clientAuthorizationParametersUri
        clientRequiredClaimsUri: clientRequiredClaimsUri
        uri: uri
    OauthProfileResourceServerRequiredClaim:
      type: object
      properties:
        oauthProfileName:
          type: string
          description: The name of the OAuth profile.
        resourceServerRequiredClaimName:
          type: string
          description: The name of the access token claim to verify.
        resourceServerRequiredClaimValue:
          type: string
          description: "The required claim value, which must be a string containing\
            \ a valid JSON value."
      example:
        resourceServerRequiredClaimValue: resourceServerRequiredClaimValue
        resourceServerRequiredClaimName: resourceServerRequiredClaimName
        oauthProfileName: oauthProfileName
    OauthProfileResourceServerRequiredClaimCollections:
      type: object
    OauthProfileResourceServerRequiredClaimLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Required Claim object.
      example:
        uri: uri
    OauthProfileResourceServerRequiredClaimResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/OauthProfileResourceServerRequiredClaimCollections'
        data:
          $ref: '#/components/schemas/OauthProfileResourceServerRequiredClaim'
        links:
          $ref: '#/components/schemas/OauthProfileResourceServerRequiredClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          resourceServerRequiredClaimValue: resourceServerRequiredClaimValue
          resourceServerRequiredClaimName: resourceServerRequiredClaimName
          oauthProfileName: oauthProfileName
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    OauthProfileResourceServerRequiredClaimsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileResourceServerRequiredClaimCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileResourceServerRequiredClaim'
        links:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileResourceServerRequiredClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - resourceServerRequiredClaimValue: resourceServerRequiredClaimValue
          resourceServerRequiredClaimName: resourceServerRequiredClaimName
          oauthProfileName: oauthProfileName
        - resourceServerRequiredClaimValue: resourceServerRequiredClaimValue
          resourceServerRequiredClaimName: resourceServerRequiredClaimName
          oauthProfileName: oauthProfileName
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    OauthProfileResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/OauthProfileCollections'
        data:
          $ref: '#/components/schemas/OauthProfile'
        links:
          $ref: '#/components/schemas/OauthProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          jwksRefreshFailureCount: 5
          endpointUserinfoTimeout: 4
          resourceServerRequiredType: resourceServerRequiredType
          interactiveGroupsFoundInTokenCount: 9
          interactiveUserinfoStatusOkCount: 7
          issuer: issuer
          resourceServerRequiredScope: resourceServerRequiredScope
          sempRequestCount: 0
          sempUserinfoStatusOtherCount: 0
          sempIntrospectionMissingCount: 0
          userinfoAverageTime: 8
          sempIntrospectionMissingGroupsCount: 6
          inactiveReason: inactiveReason
          active: true
          introspectionLastFailureReason: introspectionLastFailureReason
          tokenEndpointStatusBadRequestCount: 1
          discoveryLastRefreshFailureTime: 4
          interactiveIntrospectionMissingCount: 6
          tokenEndpointRequestCount: 9
          completeSuccessCount: 2
          sempIntrospectionMissingUsernameCount: 4
          sempIntrospectionStatusOtherCount: 9
          clientRequiredType: clientRequiredType
          sempUserinfoStatusOkCount: 3
          interactiveIntrospectionTokenNotActiveCount: 5
          endpointIntrospection: endpointIntrospection
          sempUserinfoMissingCount: 5
          interactiveIntrospectionMissingGroupsCount: 3
          interactiveUserinfoMissingUsernameCount: 3
          displayName: displayName
          endpointTokenTimeout: 1
          jwksLastRefreshFailureTime: 3
          discoveryLastRefreshTime: 7
          issuerOperational: issuerOperational
          tokenEndpointOtherErrorCount: 8
          enabled: true
          sempGroupsFoundInTokenCount: 4
          endpointJwksOperational: endpointJwksOperational
          endpointJwksRefreshInterval: 7
          resourceServerRequiredIssuer: resourceServerRequiredIssuer
          sempUserinfoMissingUsernameCount: 6
          endpointUserinfoOperational: endpointUserinfoOperational
          interactiveIntrospectionMissingUsernameCount: 6
          interactiveUserinfoMissingGroupsCount: 3
          usernameClaimName: usernameClaimName
          endpointToken: endpointToken
          initiateInvalidTargetLinkCount: 9
          sempIntrospectionResponseInvalidCount: 4
          clientValidateTypeEnabled: true
          clientId: clientId
          discoveryRefreshFailureCount: 1
          endpointTokenOperational: endpointTokenOperational
          sempUserinfoSubjectMismatchCount: 2
          resourceServerParseAccessTokenEnabled: true
          endpointAuthorization: endpointAuthorization
          interactiveUserinfoRequestCount: 7
          tokenEndpointStatusOkCount: 3
          tokenEndpointAverageTime: 8
          sempIntrospectionTokenNotActiveCount: 0
          endpointIntrospectionOperational: endpointIntrospectionOperational
          userinfoLastFailureReason: userinfoLastFailureReason
          introspectionLastFailureTime: 7
          clientRedirectUri: clientRedirectUri
          tokenEndpointStatusOtherCount: 9
          endpointDiscovery: endpointDiscovery
          tokenEndpointLastFailureTime: 4
          completeExpiredStateCount: 7
          discoveryLastRefreshFailureReason: discoveryLastRefreshFailureReason
          endpointAuthorizationOperational: endpointAuthorizationOperational
          initiateInvalidErrorLinkCount: 5
          sempExpiredTokenCount: 3
          sempUserinfoMissingGroupsCount: 4
          initiateRequestCount: 6
          completeRequestCount: 3
          tokenEndpointLastFailureReason: tokenEndpointLastFailureReason
          resourceServerValidateIssuerEnabled: true
          interactiveUserinfoStatusOtherCount: 6
          completeInvalidStateCount: 9
          interactiveUsernameFoundInTokenCount: 4
          interactiveIntrospectionRequestCount: 1
          resourceServerValidateScopeEnabled: true
          sempIntrospectionRequestCount: 1
          jwksNextScheduledRefreshTime: 7
          tokenEndpointInvalidTokenCount: 6
          endpointUserinfo: endpointUserinfo
          resourceServerRequiredAudience: resourceServerRequiredAudience
          oauthRole: client
          sempEnabled: true
          resourceServerValidateTypeEnabled: true
          interactiveIntrospectionStatusOtherCount: 6
          interactiveUserinfoSubjectMismatchCount: 0
          interactiveUserinfoResponseInvalidCount: 0
          initiateInvalidHostCount: 9
          defaultMsgVpnAccessLevel: none
          sempUsernameFoundInTokenCount: 1
          clientScope: clientScope
          interactiveIntrospectionResponseInvalidCount: 2
          accessLevelGroupsClaimStringFormat: single
          jwksLastRefreshTime: 3
          sempUserinfoRequestCount: 8
          interactivePromptForNewSession: interactivePromptForNewSession
          endpointDiscoveryRefreshInterval: 1
          interactiveUserinfoMissingCount: 6
          endpointIntrospectionTimeout: 6
          sempIntrospectionStatusOkCount: 7
          sempSuccessCount: 7
          userinfoLastFailureTime: 0
          introspectionAverageTime: 8
          initiateSuccessCount: 8
          sempUserinfoResponseInvalidCount: 4
          endpointJwks: endpointJwks
          defaultGlobalAccessLevel: none
          interactiveIntrospectionStatusOkCount: 6
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          discoveryNextScheduledRefreshTime: 1
          resourceServerValidateAudienceEnabled: true
          interactivePromptForExpiredSession: interactivePromptForExpiredSession
          oauthProfileName: oauthProfileName
          sempInvalidTokenCount: 9
          interactiveEnabled: true
          accessLevelGroupsClaimName: accessLevelGroupsClaimName
        collections:
          clientAuthorizationParameters:
            count: 1
          defaultMsgVpnAccessLevelExceptions:
            count: 5
          resourceServerRequiredClaims:
            count: 2
          clientRequiredClaims:
            count: 5
          accessLevelGroups:
            count: 0
          clientAllowedHosts:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          accessLevelGroupsUri: accessLevelGroupsUri
          clientAllowedHostsUri: clientAllowedHostsUri
          resourceServerRequiredClaimsUri: resourceServerRequiredClaimsUri
          defaultMsgVpnAccessLevelExceptionsUri: defaultMsgVpnAccessLevelExceptionsUri
          clientAuthorizationParametersUri: clientAuthorizationParametersUri
          clientRequiredClaimsUri: clientRequiredClaimsUri
          uri: uri
    OauthProfilesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfile'
        links:
          type: array
          items:
            $ref: '#/components/schemas/OauthProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - jwksRefreshFailureCount: 5
          endpointUserinfoTimeout: 4
          resourceServerRequiredType: resourceServerRequiredType
          interactiveGroupsFoundInTokenCount: 9
          interactiveUserinfoStatusOkCount: 7
          issuer: issuer
          resourceServerRequiredScope: resourceServerRequiredScope
          sempRequestCount: 0
          sempUserinfoStatusOtherCount: 0
          sempIntrospectionMissingCount: 0
          userinfoAverageTime: 8
          sempIntrospectionMissingGroupsCount: 6
          inactiveReason: inactiveReason
          active: true
          introspectionLastFailureReason: introspectionLastFailureReason
          tokenEndpointStatusBadRequestCount: 1
          discoveryLastRefreshFailureTime: 4
          interactiveIntrospectionMissingCount: 6
          tokenEndpointRequestCount: 9
          completeSuccessCount: 2
          sempIntrospectionMissingUsernameCount: 4
          sempIntrospectionStatusOtherCount: 9
          clientRequiredType: clientRequiredType
          sempUserinfoStatusOkCount: 3
          interactiveIntrospectionTokenNotActiveCount: 5
          endpointIntrospection: endpointIntrospection
          sempUserinfoMissingCount: 5
          interactiveIntrospectionMissingGroupsCount: 3
          interactiveUserinfoMissingUsernameCount: 3
          displayName: displayName
          endpointTokenTimeout: 1
          jwksLastRefreshFailureTime: 3
          discoveryLastRefreshTime: 7
          issuerOperational: issuerOperational
          tokenEndpointOtherErrorCount: 8
          enabled: true
          sempGroupsFoundInTokenCount: 4
          endpointJwksOperational: endpointJwksOperational
          endpointJwksRefreshInterval: 7
          resourceServerRequiredIssuer: resourceServerRequiredIssuer
          sempUserinfoMissingUsernameCount: 6
          endpointUserinfoOperational: endpointUserinfoOperational
          interactiveIntrospectionMissingUsernameCount: 6
          interactiveUserinfoMissingGroupsCount: 3
          usernameClaimName: usernameClaimName
          endpointToken: endpointToken
          initiateInvalidTargetLinkCount: 9
          sempIntrospectionResponseInvalidCount: 4
          clientValidateTypeEnabled: true
          clientId: clientId
          discoveryRefreshFailureCount: 1
          endpointTokenOperational: endpointTokenOperational
          sempUserinfoSubjectMismatchCount: 2
          resourceServerParseAccessTokenEnabled: true
          endpointAuthorization: endpointAuthorization
          interactiveUserinfoRequestCount: 7
          tokenEndpointStatusOkCount: 3
          tokenEndpointAverageTime: 8
          sempIntrospectionTokenNotActiveCount: 0
          endpointIntrospectionOperational: endpointIntrospectionOperational
          userinfoLastFailureReason: userinfoLastFailureReason
          introspectionLastFailureTime: 7
          clientRedirectUri: clientRedirectUri
          tokenEndpointStatusOtherCount: 9
          endpointDiscovery: endpointDiscovery
          tokenEndpointLastFailureTime: 4
          completeExpiredStateCount: 7
          discoveryLastRefreshFailureReason: discoveryLastRefreshFailureReason
          endpointAuthorizationOperational: endpointAuthorizationOperational
          initiateInvalidErrorLinkCount: 5
          sempExpiredTokenCount: 3
          sempUserinfoMissingGroupsCount: 4
          initiateRequestCount: 6
          completeRequestCount: 3
          tokenEndpointLastFailureReason: tokenEndpointLastFailureReason
          resourceServerValidateIssuerEnabled: true
          interactiveUserinfoStatusOtherCount: 6
          completeInvalidStateCount: 9
          interactiveUsernameFoundInTokenCount: 4
          interactiveIntrospectionRequestCount: 1
          resourceServerValidateScopeEnabled: true
          sempIntrospectionRequestCount: 1
          jwksNextScheduledRefreshTime: 7
          tokenEndpointInvalidTokenCount: 6
          endpointUserinfo: endpointUserinfo
          resourceServerRequiredAudience: resourceServerRequiredAudience
          oauthRole: client
          sempEnabled: true
          resourceServerValidateTypeEnabled: true
          interactiveIntrospectionStatusOtherCount: 6
          interactiveUserinfoSubjectMismatchCount: 0
          interactiveUserinfoResponseInvalidCount: 0
          initiateInvalidHostCount: 9
          defaultMsgVpnAccessLevel: none
          sempUsernameFoundInTokenCount: 1
          clientScope: clientScope
          interactiveIntrospectionResponseInvalidCount: 2
          accessLevelGroupsClaimStringFormat: single
          jwksLastRefreshTime: 3
          sempUserinfoRequestCount: 8
          interactivePromptForNewSession: interactivePromptForNewSession
          endpointDiscoveryRefreshInterval: 1
          interactiveUserinfoMissingCount: 6
          endpointIntrospectionTimeout: 6
          sempIntrospectionStatusOkCount: 7
          sempSuccessCount: 7
          userinfoLastFailureTime: 0
          introspectionAverageTime: 8
          initiateSuccessCount: 8
          sempUserinfoResponseInvalidCount: 4
          endpointJwks: endpointJwks
          defaultGlobalAccessLevel: none
          interactiveIntrospectionStatusOkCount: 6
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          discoveryNextScheduledRefreshTime: 1
          resourceServerValidateAudienceEnabled: true
          interactivePromptForExpiredSession: interactivePromptForExpiredSession
          oauthProfileName: oauthProfileName
          sempInvalidTokenCount: 9
          interactiveEnabled: true
          accessLevelGroupsClaimName: accessLevelGroupsClaimName
        - jwksRefreshFailureCount: 5
          endpointUserinfoTimeout: 4
          resourceServerRequiredType: resourceServerRequiredType
          interactiveGroupsFoundInTokenCount: 9
          interactiveUserinfoStatusOkCount: 7
          issuer: issuer
          resourceServerRequiredScope: resourceServerRequiredScope
          sempRequestCount: 0
          sempUserinfoStatusOtherCount: 0
          sempIntrospectionMissingCount: 0
          userinfoAverageTime: 8
          sempIntrospectionMissingGroupsCount: 6
          inactiveReason: inactiveReason
          active: true
          introspectionLastFailureReason: introspectionLastFailureReason
          tokenEndpointStatusBadRequestCount: 1
          discoveryLastRefreshFailureTime: 4
          interactiveIntrospectionMissingCount: 6
          tokenEndpointRequestCount: 9
          completeSuccessCount: 2
          sempIntrospectionMissingUsernameCount: 4
          sempIntrospectionStatusOtherCount: 9
          clientRequiredType: clientRequiredType
          sempUserinfoStatusOkCount: 3
          interactiveIntrospectionTokenNotActiveCount: 5
          endpointIntrospection: endpointIntrospection
          sempUserinfoMissingCount: 5
          interactiveIntrospectionMissingGroupsCount: 3
          interactiveUserinfoMissingUsernameCount: 3
          displayName: displayName
          endpointTokenTimeout: 1
          jwksLastRefreshFailureTime: 3
          discoveryLastRefreshTime: 7
          issuerOperational: issuerOperational
          tokenEndpointOtherErrorCount: 8
          enabled: true
          sempGroupsFoundInTokenCount: 4
          endpointJwksOperational: endpointJwksOperational
          endpointJwksRefreshInterval: 7
          resourceServerRequiredIssuer: resourceServerRequiredIssuer
          sempUserinfoMissingUsernameCount: 6
          endpointUserinfoOperational: endpointUserinfoOperational
          interactiveIntrospectionMissingUsernameCount: 6
          interactiveUserinfoMissingGroupsCount: 3
          usernameClaimName: usernameClaimName
          endpointToken: endpointToken
          initiateInvalidTargetLinkCount: 9
          sempIntrospectionResponseInvalidCount: 4
          clientValidateTypeEnabled: true
          clientId: clientId
          discoveryRefreshFailureCount: 1
          endpointTokenOperational: endpointTokenOperational
          sempUserinfoSubjectMismatchCount: 2
          resourceServerParseAccessTokenEnabled: true
          endpointAuthorization: endpointAuthorization
          interactiveUserinfoRequestCount: 7
          tokenEndpointStatusOkCount: 3
          tokenEndpointAverageTime: 8
          sempIntrospectionTokenNotActiveCount: 0
          endpointIntrospectionOperational: endpointIntrospectionOperational
          userinfoLastFailureReason: userinfoLastFailureReason
          introspectionLastFailureTime: 7
          clientRedirectUri: clientRedirectUri
          tokenEndpointStatusOtherCount: 9
          endpointDiscovery: endpointDiscovery
          tokenEndpointLastFailureTime: 4
          completeExpiredStateCount: 7
          discoveryLastRefreshFailureReason: discoveryLastRefreshFailureReason
          endpointAuthorizationOperational: endpointAuthorizationOperational
          initiateInvalidErrorLinkCount: 5
          sempExpiredTokenCount: 3
          sempUserinfoMissingGroupsCount: 4
          initiateRequestCount: 6
          completeRequestCount: 3
          tokenEndpointLastFailureReason: tokenEndpointLastFailureReason
          resourceServerValidateIssuerEnabled: true
          interactiveUserinfoStatusOtherCount: 6
          completeInvalidStateCount: 9
          interactiveUsernameFoundInTokenCount: 4
          interactiveIntrospectionRequestCount: 1
          resourceServerValidateScopeEnabled: true
          sempIntrospectionRequestCount: 1
          jwksNextScheduledRefreshTime: 7
          tokenEndpointInvalidTokenCount: 6
          endpointUserinfo: endpointUserinfo
          resourceServerRequiredAudience: resourceServerRequiredAudience
          oauthRole: client
          sempEnabled: true
          resourceServerValidateTypeEnabled: true
          interactiveIntrospectionStatusOtherCount: 6
          interactiveUserinfoSubjectMismatchCount: 0
          interactiveUserinfoResponseInvalidCount: 0
          initiateInvalidHostCount: 9
          defaultMsgVpnAccessLevel: none
          sempUsernameFoundInTokenCount: 1
          clientScope: clientScope
          interactiveIntrospectionResponseInvalidCount: 2
          accessLevelGroupsClaimStringFormat: single
          jwksLastRefreshTime: 3
          sempUserinfoRequestCount: 8
          interactivePromptForNewSession: interactivePromptForNewSession
          endpointDiscoveryRefreshInterval: 1
          interactiveUserinfoMissingCount: 6
          endpointIntrospectionTimeout: 6
          sempIntrospectionStatusOkCount: 7
          sempSuccessCount: 7
          userinfoLastFailureTime: 0
          introspectionAverageTime: 8
          initiateSuccessCount: 8
          sempUserinfoResponseInvalidCount: 4
          endpointJwks: endpointJwks
          defaultGlobalAccessLevel: none
          interactiveIntrospectionStatusOkCount: 6
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          discoveryNextScheduledRefreshTime: 1
          resourceServerValidateAudienceEnabled: true
          interactivePromptForExpiredSession: interactivePromptForExpiredSession
          oauthProfileName: oauthProfileName
          sempInvalidTokenCount: 9
          interactiveEnabled: true
          accessLevelGroupsClaimName: accessLevelGroupsClaimName
        collections:
        - clientAuthorizationParameters:
            count: 1
          defaultMsgVpnAccessLevelExceptions:
            count: 5
          resourceServerRequiredClaims:
            count: 2
          clientRequiredClaims:
            count: 5
          accessLevelGroups:
            count: 0
          clientAllowedHosts:
            count: 6
        - clientAuthorizationParameters:
            count: 1
          defaultMsgVpnAccessLevelExceptions:
            count: 5
          resourceServerRequiredClaims:
            count: 2
          clientRequiredClaims:
            count: 5
          accessLevelGroups:
            count: 0
          clientAllowedHosts:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - accessLevelGroupsUri: accessLevelGroupsUri
          clientAllowedHostsUri: clientAllowedHostsUri
          resourceServerRequiredClaimsUri: resourceServerRequiredClaimsUri
          defaultMsgVpnAccessLevelExceptionsUri: defaultMsgVpnAccessLevelExceptionsUri
          clientAuthorizationParametersUri: clientAuthorizationParametersUri
          clientRequiredClaimsUri: clientRequiredClaimsUri
          uri: uri
        - accessLevelGroupsUri: accessLevelGroupsUri
          clientAllowedHostsUri: clientAllowedHostsUri
          resourceServerRequiredClaimsUri: resourceServerRequiredClaimsUri
          defaultMsgVpnAccessLevelExceptionsUri: defaultMsgVpnAccessLevelExceptionsUri
          clientAuthorizationParametersUri: clientAuthorizationParametersUri
          clientRequiredClaimsUri: clientRequiredClaimsUri
          uri: uri
    SempError:
      required:
      - code
      - description
      - status
      type: object
      properties:
        code:
          type: integer
          description: The error code which uniquely identifies the error that has
            occurred.
          format: int32
        description:
          type: string
          description: The verbose description of the problem.
        status:
          type: string
          description: The terse status string associated with `code`.
      example:
        code: 5
        description: description
        status: status
    SempMeta:
      required:
      - request
      - responseCode
      type: object
      properties:
        count:
          type: integer
          description: "The total number of objects requested, irrespective of page\
            \ size. This may be a count of all objects in a collection or a filtered\
            \ subset. It represents a snapshot in time and may change when paging\
            \ through results."
          format: int64
        error:
          $ref: '#/components/schemas/SempError'
        paging:
          $ref: '#/components/schemas/SempPaging'
        request:
          $ref: '#/components/schemas/SempRequest'
        responseCode:
          type: integer
          description: "The HTTP response code, one of 200 (success), 4xx (client\
            \ error), or 5xx (server error)."
          format: int32
      example:
        request:
          method: method
          uri: uri
        count: 5
        paging:
          nextPageUri: nextPageUri
          cursorQuery: cursorQuery
        error:
          code: 5
          description: description
          status: status
        responseCode: 8
    SempMetaOnlyResponse:
      required:
      - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/SempMeta'
    SempPaging:
      required:
      - cursorQuery
      - nextPageUri
      type: object
      properties:
        cursorQuery:
          type: string
          description: "The cursor, or position, for the next page of objects. Use\
            \ this as the `cursor` query parameter of the next request."
        nextPageUri:
          type: string
          description: The URI of the next page of objects. `cursorQuery` is already
            embedded within this URI.
      example:
        nextPageUri: nextPageUri
        cursorQuery: cursorQuery
    SempRequest:
      required:
      - method
      type: object
      properties:
        method:
          type: string
          description: The HTTP method of the request which resulted in this response.
        uri:
          type: string
          description: The URI of the request which resulted in this response.
      example:
        method: method
        uri: uri
    Session:
      type: object
      properties:
        createTime:
          type: integer
          description: The timestamp of when the session was created. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
        lastActivityTime:
          type: integer
          description: The timestamp of when the last activity on the session occurred.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
        sessionId:
          type: string
          description: The unique identifier for the session.
        sessionUsername:
          type: string
          description: The username used for authorization.
      example:
        createTime: 0
        sessionUsername: sessionUsername
        sessionId: sessionId
        lastActivityTime: 6
    SessionCollections:
      type: object
    SessionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this SEMP Session object.
      example:
        uri: uri
    SessionResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/SessionCollections'
        data:
          $ref: '#/components/schemas/Session'
        links:
          $ref: '#/components/schemas/SessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          createTime: 0
          sessionUsername: sessionUsername
          sessionId: sessionId
          lastActivityTime: 6
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    SessionsResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/SessionCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Session'
        links:
          type: array
          items:
            $ref: '#/components/schemas/SessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - createTime: 0
          sessionUsername: sessionUsername
          sessionId: sessionId
          lastActivityTime: 6
        - createTime: 0
          sessionUsername: sessionUsername
          sessionId: sessionId
          lastActivityTime: 6
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    StandardDomainCertAuthoritiesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/StandardDomainCertAuthorityCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/StandardDomainCertAuthority'
        links:
          type: array
          items:
            $ref: '#/components/schemas/StandardDomainCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - certAuthorityName: certAuthorityName
          certContent: certContent
        - certAuthorityName: certAuthorityName
          certContent: certContent
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
    StandardDomainCertAuthority:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority.
        certContent:
          type: string
          description: The PEM formatted content for the trusted root certificate
            of a standard domain Certificate Authority.
      example:
        certAuthorityName: certAuthorityName
        certContent: certContent
    StandardDomainCertAuthorityCollections:
      type: object
    StandardDomainCertAuthorityLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Standard Domain Certificate Authority object.
      example:
        uri: uri
    StandardDomainCertAuthorityResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/StandardDomainCertAuthorityCollections'
        data:
          $ref: '#/components/schemas/StandardDomainCertAuthority'
        links:
          $ref: '#/components/schemas/StandardDomainCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          certAuthorityName: certAuthorityName
          certContent: certContent
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    VirtualHostname:
      type: object
      properties:
        enabled:
          type: boolean
          description: Enable or disable Virtual Hostname to Message VPN mapping.
        msgVpnName:
          type: string
          description: The message VPN to which this virtual hostname is mapped.
        virtualHostname:
          type: string
          description: The virtual hostname.
      example:
        virtualHostname: virtualHostname
        msgVpnName: msgVpnName
        enabled: true
    VirtualHostnameCollections:
      type: object
    VirtualHostnameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Virtual Hostname object.
      example:
        uri: uri
    VirtualHostnameResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          $ref: '#/components/schemas/VirtualHostnameCollections'
        data:
          $ref: '#/components/schemas/VirtualHostname'
        links:
          $ref: '#/components/schemas/VirtualHostnameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        collections: {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
          uri: uri
    VirtualHostnamesResponse:
      required:
      - meta
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/VirtualHostnameCollections'
        data:
          type: array
          items:
            $ref: '#/components/schemas/VirtualHostname'
        links:
          type: array
          items:
            $ref: '#/components/schemas/VirtualHostnameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        - virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        collections:
        - {}
        - {}
        meta:
          request:
            method: method
            uri: uri
          count: 5
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 5
            description: description
            status: status
          responseCode: 8
        links:
        - uri: uri
        - uri: uri
  parameters:
    countQuery:
      name: count
      in: query
      description: Limit the count of objects in the response. See the documentation
        for the `count` parameter.
      required: false
      style: form
      explode: true
      schema:
        minimum: 1
        type: integer
        default: 10
    cursorQuery:
      name: cursor
      in: query
      description: "The cursor, or position, for the next page of objects. See the\
        \ documentation for the `cursor` parameter."
      required: false
      style: form
      explode: true
      schema:
        type: string
    selectQuery:
      name: select
      in: query
      description: "Include in the response only selected attributes of the object,\
        \ or exclude from the response selected attributes of the object. See the\
        \ documentation for the `select` parameter."
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    whereQuery:
      name: where
      in: query
      description: Include in the response only objects where certain conditions are
        true. See the the documentation for the `where` parameter.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
  securitySchemes:
    basicAuth:
      type: http
      description: basic authentication
      scheme: basic
x-original-swagger-version: "2.0"
